<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="877"><g><title>:268445 (1 samples, 0.11%)</title><rect x="0.0000%" y="693" width="0.1140%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.0000%" y="677" width="0.1140%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>:268447 (1 samples, 0.11%)</title><rect x="0.1140%" y="693" width="0.1140%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3640%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.1140%" y="677" width="0.1140%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3640%" y="687.50"></text></g><g><title>:268448 (1 samples, 0.11%)</title><rect x="0.2281%" y="693" width="0.1140%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.4781%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.2281%" y="677" width="0.1140%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.4781%" y="687.50"></text></g><g><title>:268449 (1 samples, 0.11%)</title><rect x="0.3421%" y="693" width="0.1140%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.5921%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.3421%" y="677" width="0.1140%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.5921%" y="687.50"></text></g><g><title>:268450 (1 samples, 0.11%)</title><rect x="0.4561%" y="693" width="0.1140%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="1"/><text x="0.7061%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.4561%" y="677" width="0.1140%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="1"/><text x="0.7061%" y="687.50"></text></g><g><title>:268453 (1 samples, 0.11%)</title><rect x="0.5701%" y="693" width="0.1140%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="1"/><text x="0.8201%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.5701%" y="677" width="0.1140%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="1"/><text x="0.8201%" y="687.50"></text></g><g><title>:268455 (1 samples, 0.11%)</title><rect x="0.6842%" y="693" width="0.1140%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.9342%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.6842%" y="677" width="0.1140%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.9342%" y="687.50"></text></g><g><title>:268456 (1 samples, 0.11%)</title><rect x="0.7982%" y="693" width="0.1140%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="1.0482%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.7982%" y="677" width="0.1140%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="1.0482%" y="687.50"></text></g><g><title>:268458 (1 samples, 0.11%)</title><rect x="0.9122%" y="693" width="0.1140%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="1.1622%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.9122%" y="677" width="0.1140%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="1.1622%" y="687.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.11%)</title><rect x="0.9122%" y="661" width="0.1140%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="1.1622%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.11%)</title><rect x="0.9122%" y="645" width="0.1140%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="1.1622%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.11%)</title><rect x="0.9122%" y="629" width="0.1140%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="1.1622%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.11%)</title><rect x="0.9122%" y="613" width="0.1140%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="1.1622%" y="623.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.11%)</title><rect x="0.9122%" y="597" width="0.1140%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="1"/><text x="1.1622%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="0.9122%" y="581" width="0.1140%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="1.1622%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="0.9122%" y="565" width="0.1140%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="1"/><text x="1.1622%" y="575.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="1.0262%" y="677" width="0.1140%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="1"/><text x="1.2762%" y="687.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (1 samples, 0.11%)</title><rect x="1.0262%" y="661" width="0.1140%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="1"/><text x="1.2762%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="1.0262%" y="645" width="0.1140%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="1"/><text x="1.2762%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="1.0262%" y="629" width="0.1140%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="1"/><text x="1.2762%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="1.0262%" y="613" width="0.1140%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="1"/><text x="1.2762%" y="623.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="1.0262%" y="597" width="0.1140%" height="15" fill="rgb(209,103,24)" fg:x="9" fg:w="1"/><text x="1.2762%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="1.1403%" y="581" width="0.1140%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="1"/><text x="1.3903%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.11%)</title><rect x="1.1403%" y="565" width="0.1140%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="1"/><text x="1.3903%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="1.1403%" y="549" width="0.1140%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="1"/><text x="1.3903%" y="559.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1 samples, 0.11%)</title><rect x="1.1403%" y="533" width="0.1140%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="1"/><text x="1.3903%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="1.1403%" y="517" width="0.1140%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="1"/><text x="1.3903%" y="527.50"></text></g><g><title>[granular_synthesizer_cli] (3 samples, 0.34%)</title><rect x="1.1403%" y="661" width="0.3421%" height="15" fill="rgb(226,3,54)" fg:x="10" fg:w="3"/><text x="1.3903%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (3 samples, 0.34%)</title><rect x="1.1403%" y="645" width="0.3421%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="3"/><text x="1.3903%" y="655.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (3 samples, 0.34%)</title><rect x="1.1403%" y="629" width="0.3421%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="3"/><text x="1.3903%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.34%)</title><rect x="1.1403%" y="613" width="0.3421%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="3"/><text x="1.3903%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.34%)</title><rect x="1.1403%" y="597" width="0.3421%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="3"/><text x="1.3903%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.23%)</title><rect x="1.2543%" y="581" width="0.2281%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="2"/><text x="1.5043%" y="591.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (2 samples, 0.23%)</title><rect x="1.2543%" y="565" width="0.2281%" height="15" fill="rgb(235,93,37)" fg:x="11" fg:w="2"/><text x="1.5043%" y="575.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.11%)</title><rect x="1.4823%" y="661" width="0.1140%" height="15" fill="rgb(213,116,39)" fg:x="13" fg:w="1"/><text x="1.7323%" y="671.50"></text></g><g><title>[libc.so.6] (11 samples, 1.25%)</title><rect x="1.5964%" y="661" width="1.2543%" height="15" fill="rgb(222,207,29)" fg:x="14" fg:w="11"/><text x="1.8464%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="2.8506%" y="661" width="0.1140%" height="15" fill="rgb(206,96,30)" fg:x="25" fg:w="1"/><text x="3.1006%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="2.9647%" y="661" width="0.1140%" height="15" fill="rgb(218,138,4)" fg:x="26" fg:w="1"/><text x="3.2147%" y="671.50"></text></g><g><title>__getpid (1 samples, 0.11%)</title><rect x="3.0787%" y="661" width="0.1140%" height="15" fill="rgb(250,191,14)" fg:x="27" fg:w="1"/><text x="3.3287%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 4.56%)</title><rect x="3.4208%" y="645" width="4.5610%" height="15" fill="rgb(239,60,40)" fg:x="30" fg:w="40"/><text x="3.6708%" y="655.50">&lt;core..</text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (45 samples, 5.13%)</title><rect x="3.1927%" y="661" width="5.1311%" height="15" fill="rgb(206,27,48)" fg:x="28" fg:w="45"/><text x="3.4427%" y="671.50">audio:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (3 samples, 0.34%)</title><rect x="7.9818%" y="645" width="0.3421%" height="15" fill="rgb(225,35,8)" fg:x="70" fg:w="3"/><text x="8.2318%" y="655.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (3 samples, 0.34%)</title><rect x="7.9818%" y="629" width="0.3421%" height="15" fill="rgb(250,213,24)" fg:x="70" fg:w="3"/><text x="8.2318%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="8.2098%" y="613" width="0.1140%" height="15" fill="rgb(247,123,22)" fg:x="72" fg:w="1"/><text x="8.4598%" y="623.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.11%)</title><rect x="8.3238%" y="661" width="0.1140%" height="15" fill="rgb(231,138,38)" fg:x="73" fg:w="1"/><text x="8.5738%" y="671.50"></text></g><g><title>pa_sample_rate_valid (1 samples, 0.11%)</title><rect x="8.4379%" y="661" width="0.1140%" height="15" fill="rgb(231,145,46)" fg:x="74" fg:w="1"/><text x="8.6879%" y="671.50"></text></g><g><title>pa_thread_self (1 samples, 0.11%)</title><rect x="8.5519%" y="661" width="0.1140%" height="15" fill="rgb(251,118,11)" fg:x="75" fg:w="1"/><text x="8.8019%" y="671.50"></text></g><g><title>pthread_getspecific (1 samples, 0.11%)</title><rect x="8.6659%" y="661" width="0.1140%" height="15" fill="rgb(217,147,25)" fg:x="76" fg:w="1"/><text x="8.9159%" y="671.50"></text></g><g><title>snd_pcm_bytes_to_frames (1 samples, 0.11%)</title><rect x="8.7799%" y="661" width="0.1140%" height="15" fill="rgb(247,81,37)" fg:x="77" fg:w="1"/><text x="9.0299%" y="671.50"></text></g><g><title>[[heap]] (69 samples, 7.87%)</title><rect x="1.1403%" y="677" width="7.8677%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="69"/><text x="1.3903%" y="687.50">[[heap]]</text></g><g><title>snd_pcm_status_sizeof (1 samples, 0.11%)</title><rect x="8.8940%" y="661" width="0.1140%" height="15" fill="rgb(227,1,9)" fg:x="78" fg:w="1"/><text x="9.1440%" y="671.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="9.0080%" y="677" width="0.1140%" height="15" fill="rgb(248,47,43)" fg:x="79" fg:w="1"/><text x="9.2580%" y="687.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (2 samples, 0.23%)</title><rect x="9.1220%" y="661" width="0.2281%" height="15" fill="rgb(221,10,30)" fg:x="80" fg:w="2"/><text x="9.3720%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (2 samples, 0.23%)</title><rect x="9.1220%" y="645" width="0.2281%" height="15" fill="rgb(210,229,1)" fg:x="80" fg:w="2"/><text x="9.3720%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.23%)</title><rect x="9.1220%" y="629" width="0.2281%" height="15" fill="rgb(222,148,37)" fg:x="80" fg:w="2"/><text x="9.3720%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.23%)</title><rect x="9.1220%" y="613" width="0.2281%" height="15" fill="rgb(234,67,33)" fg:x="80" fg:w="2"/><text x="9.3720%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.23%)</title><rect x="9.1220%" y="597" width="0.2281%" height="15" fill="rgb(247,98,35)" fg:x="80" fg:w="2"/><text x="9.3720%" y="607.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (2 samples, 0.23%)</title><rect x="9.1220%" y="581" width="0.2281%" height="15" fill="rgb(247,138,52)" fg:x="80" fg:w="2"/><text x="9.3720%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="9.4641%" y="629" width="0.1140%" height="15" fill="rgb(213,79,30)" fg:x="83" fg:w="1"/><text x="9.7141%" y="639.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.11%)</title><rect x="9.4641%" y="613" width="0.1140%" height="15" fill="rgb(246,177,23)" fg:x="83" fg:w="1"/><text x="9.7141%" y="623.50"></text></g><g><title>std::thread::panicking (1 samples, 0.11%)</title><rect x="9.4641%" y="597" width="0.1140%" height="15" fill="rgb(230,62,27)" fg:x="83" fg:w="1"/><text x="9.7141%" y="607.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.11%)</title><rect x="9.4641%" y="581" width="0.1140%" height="15" fill="rgb(216,154,8)" fg:x="83" fg:w="1"/><text x="9.7141%" y="591.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.11%)</title><rect x="9.4641%" y="565" width="0.1140%" height="15" fill="rgb(244,35,45)" fg:x="83" fg:w="1"/><text x="9.7141%" y="575.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (4 samples, 0.46%)</title><rect x="9.3501%" y="661" width="0.4561%" height="15" fill="rgb(251,115,12)" fg:x="82" fg:w="4"/><text x="9.6001%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.34%)</title><rect x="9.4641%" y="645" width="0.3421%" height="15" fill="rgb(240,54,50)" fg:x="83" fg:w="3"/><text x="9.7141%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.23%)</title><rect x="9.5781%" y="629" width="0.2281%" height="15" fill="rgb(233,84,52)" fg:x="84" fg:w="2"/><text x="9.8281%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2 samples, 0.23%)</title><rect x="9.5781%" y="613" width="0.2281%" height="15" fill="rgb(207,117,47)" fg:x="84" fg:w="2"/><text x="9.8281%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.23%)</title><rect x="9.5781%" y="597" width="0.2281%" height="15" fill="rgb(249,43,39)" fg:x="84" fg:w="2"/><text x="9.8281%" y="607.50"></text></g><g><title>[anon] (7 samples, 0.80%)</title><rect x="9.1220%" y="677" width="0.7982%" height="15" fill="rgb(209,38,44)" fg:x="80" fg:w="7"/><text x="9.3720%" y="687.50"></text></g><g><title>pa_mainloop_wakeup (1 samples, 0.11%)</title><rect x="9.8062%" y="661" width="0.1140%" height="15" fill="rgb(236,212,23)" fg:x="86" fg:w="1"/><text x="10.0562%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="9.8062%" y="645" width="0.1140%" height="15" fill="rgb(242,79,21)" fg:x="86" fg:w="1"/><text x="10.0562%" y="655.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (1 samples, 0.11%)</title><rect x="9.8062%" y="629" width="0.1140%" height="15" fill="rgb(211,96,35)" fg:x="86" fg:w="1"/><text x="10.0562%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="9.8062%" y="613" width="0.1140%" height="15" fill="rgb(253,215,40)" fg:x="86" fg:w="1"/><text x="10.0562%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="9.8062%" y="597" width="0.1140%" height="15" fill="rgb(211,81,21)" fg:x="86" fg:w="1"/><text x="10.0562%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="9.8062%" y="581" width="0.1140%" height="15" fill="rgb(208,190,38)" fg:x="86" fg:w="1"/><text x="10.0562%" y="591.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (1 samples, 0.11%)</title><rect x="9.8062%" y="565" width="0.1140%" height="15" fill="rgb(235,213,38)" fg:x="86" fg:w="1"/><text x="10.0562%" y="575.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (1 samples, 0.11%)</title><rect x="9.9202%" y="421" width="0.1140%" height="15" fill="rgb(237,122,38)" fg:x="87" fg:w="1"/><text x="10.1702%" y="431.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (1 samples, 0.11%)</title><rect x="9.9202%" y="405" width="0.1140%" height="15" fill="rgb(244,218,35)" fg:x="87" fg:w="1"/><text x="10.1702%" y="415.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (1 samples, 0.11%)</title><rect x="9.9202%" y="389" width="0.1140%" height="15" fill="rgb(240,68,47)" fg:x="87" fg:w="1"/><text x="10.1702%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.9202%" y="373" width="0.1140%" height="15" fill="rgb(210,16,53)" fg:x="87" fg:w="1"/><text x="10.1702%" y="383.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (2 samples, 0.23%)</title><rect x="9.9202%" y="437" width="0.2281%" height="15" fill="rgb(235,124,12)" fg:x="87" fg:w="2"/><text x="10.1702%" y="447.50"></text></g><g><title>alsa::poll::poll (1 samples, 0.11%)</title><rect x="10.0342%" y="421" width="0.1140%" height="15" fill="rgb(224,169,11)" fg:x="88" fg:w="1"/><text x="10.2842%" y="431.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="10.0342%" y="405" width="0.1140%" height="15" fill="rgb(250,166,2)" fg:x="88" fg:w="1"/><text x="10.2842%" y="415.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (1 samples, 0.11%)</title><rect x="10.1482%" y="421" width="0.1140%" height="15" fill="rgb(242,216,29)" fg:x="89" fg:w="1"/><text x="10.3982%" y="431.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.11%)</title><rect x="10.1482%" y="405" width="0.1140%" height="15" fill="rgb(230,116,27)" fg:x="89" fg:w="1"/><text x="10.3982%" y="415.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.11%)</title><rect x="10.1482%" y="389" width="0.1140%" height="15" fill="rgb(228,99,48)" fg:x="89" fg:w="1"/><text x="10.3982%" y="399.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.11%)</title><rect x="10.1482%" y="373" width="0.1140%" height="15" fill="rgb(253,11,6)" fg:x="89" fg:w="1"/><text x="10.3982%" y="383.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="10.1482%" y="357" width="0.1140%" height="15" fill="rgb(247,143,39)" fg:x="89" fg:w="1"/><text x="10.3982%" y="367.50"></text></g><g><title>pulse_wait_operation (1 samples, 0.11%)</title><rect x="10.1482%" y="341" width="0.1140%" height="15" fill="rgb(236,97,10)" fg:x="89" fg:w="1"/><text x="10.3982%" y="351.50"></text></g><g><title>pa_threaded_mainloop_wait (1 samples, 0.11%)</title><rect x="10.1482%" y="325" width="0.1140%" height="15" fill="rgb(233,208,19)" fg:x="89" fg:w="1"/><text x="10.3982%" y="335.50"></text></g><g><title>pthread_cond_wait (1 samples, 0.11%)</title><rect x="10.1482%" y="309" width="0.1140%" height="15" fill="rgb(216,164,2)" fg:x="89" fg:w="1"/><text x="10.3982%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="10.1482%" y="293" width="0.1140%" height="15" fill="rgb(220,129,5)" fg:x="89" fg:w="1"/><text x="10.3982%" y="303.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="10.8324%" y="341" width="0.1140%" height="15" fill="rgb(242,17,10)" fg:x="95" fg:w="1"/><text x="11.0824%" y="351.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::refresh_interval (2 samples, 0.23%)</title><rect x="10.9464%" y="341" width="0.2281%" height="15" fill="rgb(242,107,0)" fg:x="96" fg:w="2"/><text x="11.1964%" y="351.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::filter_one_long_grain (1 samples, 0.11%)</title><rect x="11.1745%" y="341" width="0.1140%" height="15" fill="rgb(251,28,31)" fg:x="98" fg:w="1"/><text x="11.4245%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.11%)</title><rect x="11.1745%" y="325" width="0.1140%" height="15" fill="rgb(233,223,10)" fg:x="98" fg:w="1"/><text x="11.4245%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.11%)</title><rect x="11.1745%" y="309" width="0.1140%" height="15" fill="rgb(215,21,27)" fg:x="98" fg:w="1"/><text x="11.4245%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.11%)</title><rect x="11.1745%" y="293" width="0.1140%" height="15" fill="rgb(232,23,21)" fg:x="98" fg:w="1"/><text x="11.4245%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.11%)</title><rect x="11.1745%" y="277" width="0.1140%" height="15" fill="rgb(244,5,23)" fg:x="98" fg:w="1"/><text x="11.4245%" y="287.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_try_fold::{{closure}} (1 samples, 0.11%)</title><rect x="11.1745%" y="261" width="0.1140%" height="15" fill="rgb(226,81,46)" fg:x="98" fg:w="1"/><text x="11.4245%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.23%)</title><rect x="11.2885%" y="325" width="0.2281%" height="15" fill="rgb(247,70,30)" fg:x="99" fg:w="2"/><text x="11.5385%" y="335.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::num_channels_for_frame (5 samples, 0.57%)</title><rect x="11.5165%" y="325" width="0.5701%" height="15" fill="rgb(212,68,19)" fg:x="101" fg:w="5"/><text x="11.7665%" y="335.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (3 samples, 0.34%)</title><rect x="12.0867%" y="261" width="0.3421%" height="15" fill="rgb(240,187,13)" fg:x="106" fg:w="3"/><text x="12.3367%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.71%)</title><rect x="13.4550%" y="229" width="1.7104%" height="15" fill="rgb(223,113,26)" fg:x="118" fg:w="15"/><text x="13.7050%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 4.68%)</title><rect x="12.4287%" y="261" width="4.6750%" height="15" fill="rgb(206,192,2)" fg:x="109" fg:w="41"/><text x="12.6787%" y="271.50">&lt;core..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (41 samples, 4.68%)</title><rect x="12.4287%" y="245" width="4.6750%" height="15" fill="rgb(241,108,4)" fg:x="109" fg:w="41"/><text x="12.6787%" y="255.50">&lt;core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (17 samples, 1.94%)</title><rect x="15.1653%" y="229" width="1.9384%" height="15" fill="rgb(247,173,49)" fg:x="133" fg:w="17"/><text x="15.4153%" y="239.50">c..</text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (17 samples, 1.94%)</title><rect x="15.1653%" y="213" width="1.9384%" height="15" fill="rgb(224,114,35)" fg:x="133" fg:w="17"/><text x="15.4153%" y="223.50">a..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 1.94%)</title><rect x="15.1653%" y="197" width="1.9384%" height="15" fill="rgb(245,159,27)" fg:x="133" fg:w="17"/><text x="15.4153%" y="207.50">c..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 6.84%)</title><rect x="12.0867%" y="293" width="6.8415%" height="15" fill="rgb(245,172,44)" fg:x="106" fg:w="60"/><text x="12.3367%" y="303.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (60 samples, 6.84%)</title><rect x="12.0867%" y="277" width="6.8415%" height="15" fill="rgb(236,23,11)" fg:x="106" fg:w="60"/><text x="12.3367%" y="287.50">&lt;core::it..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.82%)</title><rect x="17.1038%" y="261" width="1.8244%" height="15" fill="rgb(205,117,38)" fg:x="150" fg:w="16"/><text x="17.3538%" y="271.50">&lt;..</text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (22 samples, 2.51%)</title><rect x="18.9282%" y="277" width="2.5086%" height="15" fill="rgb(237,72,25)" fg:x="166" fg:w="22"/><text x="19.1782%" y="287.50">&lt;a..</text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (218 samples, 24.86%)</title><rect x="10.2623%" y="357" width="24.8575%" height="15" fill="rgb(244,70,9)" fg:x="90" fg:w="218"/><text x="10.5123%" y="367.50">&lt;audio::granular_synthesizer::GranularSy..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (209 samples, 23.83%)</title><rect x="11.2885%" y="341" width="23.8312%" height="15" fill="rgb(217,125,39)" fg:x="99" fg:w="209"/><text x="11.5385%" y="351.50">audio::granular_synthesizer::GranularS..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (202 samples, 23.03%)</title><rect x="12.0867%" y="325" width="23.0331%" height="15" fill="rgb(235,36,10)" fg:x="106" fg:w="202"/><text x="12.3367%" y="335.50">core::iter::traits::iterator::Iterato..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (202 samples, 23.03%)</title><rect x="12.0867%" y="309" width="23.0331%" height="15" fill="rgb(251,123,47)" fg:x="106" fg:w="202"/><text x="12.3367%" y="319.50">core::iter::traits::iterator::Iterato..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (142 samples, 16.19%)</title><rect x="18.9282%" y="293" width="16.1916%" height="15" fill="rgb(221,13,13)" fg:x="166" fg:w="142"/><text x="19.1782%" y="303.50">core::iter::traits::itera..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (120 samples, 13.68%)</title><rect x="21.4367%" y="277" width="13.6830%" height="15" fill="rgb(238,131,9)" fg:x="188" fg:w="120"/><text x="21.6867%" y="287.50">audio::granular_synth..</text></g><g><title>audio::grain::Grain::next_frame (16 samples, 1.82%)</title><rect x="33.2953%" y="261" width="1.8244%" height="15" fill="rgb(211,50,8)" fg:x="292" fg:w="16"/><text x="33.5453%" y="271.50">a..</text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="35.1197%" y="357" width="0.1140%" height="15" fill="rgb(245,182,24)" fg:x="308" fg:w="1"/><text x="35.3697%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.14%)</title><rect x="35.4618%" y="341" width="1.1403%" height="15" fill="rgb(242,14,37)" fg:x="311" fg:w="10"/><text x="35.7118%" y="351.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (13 samples, 1.48%)</title><rect x="35.2338%" y="357" width="1.4823%" height="15" fill="rgb(246,228,12)" fg:x="309" fg:w="13"/><text x="35.4838%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (1 samples, 0.11%)</title><rect x="36.6021%" y="341" width="0.1140%" height="15" fill="rgb(213,55,15)" fg:x="321" fg:w="1"/><text x="36.8521%" y="351.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (1 samples, 0.11%)</title><rect x="36.6021%" y="325" width="0.1140%" height="15" fill="rgb(209,9,3)" fg:x="321" fg:w="1"/><text x="36.8521%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="36.6021%" y="309" width="0.1140%" height="15" fill="rgb(230,59,30)" fg:x="321" fg:w="1"/><text x="36.8521%" y="319.50"></text></g><g><title>[libc.so.6] (237 samples, 27.02%)</title><rect x="9.9202%" y="661" width="27.0239%" height="15" fill="rgb(209,121,21)" fg:x="87" fg:w="237"/><text x="10.1702%" y="671.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (237 samples, 27.02%)</title><rect x="9.9202%" y="645" width="27.0239%" height="15" fill="rgb(220,109,13)" fg:x="87" fg:w="237"/><text x="10.1702%" y="655.50">std::sys::unix::thread::Thread::new::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (237 samples, 27.02%)</title><rect x="9.9202%" y="629" width="27.0239%" height="15" fill="rgb(232,18,1)" fg:x="87" fg:w="237"/><text x="10.1702%" y="639.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::funct..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (237 samples, 27.02%)</title><rect x="9.9202%" y="613" width="27.0239%" height="15" fill="rgb(215,41,42)" fg:x="87" fg:w="237"/><text x="10.1702%" y="623.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::funct..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (237 samples, 27.02%)</title><rect x="9.9202%" y="597" width="27.0239%" height="15" fill="rgb(224,123,36)" fg:x="87" fg:w="237"/><text x="10.1702%" y="607.50">core::ops::function::FnOnce::call_once{{vta..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (237 samples, 27.02%)</title><rect x="9.9202%" y="581" width="27.0239%" height="15" fill="rgb(240,125,3)" fg:x="87" fg:w="237"/><text x="10.1702%" y="591.50">std::thread::Builder::spawn_unchecked_::{{c..</text></g><g><title>std::panic::catch_unwind (237 samples, 27.02%)</title><rect x="9.9202%" y="565" width="27.0239%" height="15" fill="rgb(205,98,50)" fg:x="87" fg:w="237"/><text x="10.1702%" y="575.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (237 samples, 27.02%)</title><rect x="9.9202%" y="549" width="27.0239%" height="15" fill="rgb(205,185,37)" fg:x="87" fg:w="237"/><text x="10.1702%" y="559.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (237 samples, 27.02%)</title><rect x="9.9202%" y="533" width="27.0239%" height="15" fill="rgb(238,207,15)" fg:x="87" fg:w="237"/><text x="10.1702%" y="543.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (237 samples, 27.02%)</title><rect x="9.9202%" y="517" width="27.0239%" height="15" fill="rgb(213,199,42)" fg:x="87" fg:w="237"/><text x="10.1702%" y="527.50">&lt;core::panic::unwind_safe::AssertUnwindSafe..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (237 samples, 27.02%)</title><rect x="9.9202%" y="501" width="27.0239%" height="15" fill="rgb(235,201,11)" fg:x="87" fg:w="237"/><text x="10.1702%" y="511.50">std::thread::Builder::spawn_unchecked_::{{c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (237 samples, 27.02%)</title><rect x="9.9202%" y="485" width="27.0239%" height="15" fill="rgb(207,46,11)" fg:x="87" fg:w="237"/><text x="10.1702%" y="495.50">std::sys_common::backtrace::__rust_begin_sh..</text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (237 samples, 27.02%)</title><rect x="9.9202%" y="469" width="27.0239%" height="15" fill="rgb(241,35,35)" fg:x="87" fg:w="237"/><text x="10.1702%" y="479.50">cpal::host::alsa::Stream::new_output::{{clo..</text></g><g><title>cpal::host::alsa::output_stream_worker (237 samples, 27.02%)</title><rect x="9.9202%" y="453" width="27.0239%" height="15" fill="rgb(243,32,47)" fg:x="87" fg:w="237"/><text x="10.1702%" y="463.50">cpal::host::alsa::output_stream_worker</text></g><g><title>cpal::host::alsa::process_output (235 samples, 26.80%)</title><rect x="10.1482%" y="437" width="26.7959%" height="15" fill="rgb(247,202,23)" fg:x="89" fg:w="235"/><text x="10.3982%" y="447.50">cpal::host::alsa::process_output</text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (234 samples, 26.68%)</title><rect x="10.2623%" y="421" width="26.6819%" height="15" fill="rgb(219,102,11)" fg:x="90" fg:w="234"/><text x="10.5123%" y="431.50">cpal::traits::DeviceTrait::build_output_str..</text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (234 samples, 26.68%)</title><rect x="10.2623%" y="405" width="26.6819%" height="15" fill="rgb(243,110,44)" fg:x="90" fg:w="234"/><text x="10.5123%" y="415.50">granular_synthesizer_cli::run::{{closure}}:..</text></g><g><title>granular_synthesizer_cli::write_data_to_frame_buffer (234 samples, 26.68%)</title><rect x="10.2623%" y="389" width="26.6819%" height="15" fill="rgb(222,74,54)" fg:x="90" fg:w="234"/><text x="10.5123%" y="399.50">granular_synthesizer_cli::write_data_to_fra..</text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (234 samples, 26.68%)</title><rect x="10.2623%" y="373" width="26.6819%" height="15" fill="rgb(216,99,12)" fg:x="90" fg:w="234"/><text x="10.5123%" y="383.50">granular_synthesizer_cli::run::{{closure}}:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.23%)</title><rect x="36.7161%" y="357" width="0.2281%" height="15" fill="rgb(226,22,26)" fg:x="322" fg:w="2"/><text x="36.9661%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.23%)</title><rect x="36.7161%" y="341" width="0.2281%" height="15" fill="rgb(217,163,10)" fg:x="322" fg:w="2"/><text x="36.9661%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2 samples, 0.23%)</title><rect x="36.7161%" y="325" width="0.2281%" height="15" fill="rgb(213,25,53)" fg:x="322" fg:w="2"/><text x="36.9661%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.23%)</title><rect x="36.7161%" y="309" width="0.2281%" height="15" fill="rgb(252,105,26)" fg:x="322" fg:w="2"/><text x="36.9661%" y="319.50"></text></g><g><title>[libc.so.6] (238 samples, 27.14%)</title><rect x="9.9202%" y="677" width="27.1380%" height="15" fill="rgb(220,39,43)" fg:x="87" fg:w="238"/><text x="10.1702%" y="687.50">[libc.so.6]</text></g><g><title>pthread_cond_wait (1 samples, 0.11%)</title><rect x="36.9441%" y="661" width="0.1140%" height="15" fill="rgb(229,68,48)" fg:x="324" fg:w="1"/><text x="37.1941%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::refresh_interval (1 samples, 0.11%)</title><rect x="37.4002%" y="645" width="0.1140%" height="15" fill="rgb(252,8,32)" fg:x="328" fg:w="1"/><text x="37.6502%" y="655.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::num_channels_for_frame (5 samples, 0.57%)</title><rect x="37.6283%" y="629" width="0.5701%" height="15" fill="rgb(223,20,43)" fg:x="330" fg:w="5"/><text x="37.8783%" y="639.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (3 samples, 0.34%)</title><rect x="38.1984%" y="565" width="0.3421%" height="15" fill="rgb(229,81,49)" fg:x="335" fg:w="3"/><text x="38.4484%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="39.1106%" y="533" width="0.2281%" height="15" fill="rgb(236,28,36)" fg:x="343" fg:w="2"/><text x="39.3606%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.25%)</title><rect x="38.5405%" y="565" width="1.2543%" height="15" fill="rgb(249,185,26)" fg:x="338" fg:w="11"/><text x="38.7905%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (11 samples, 1.25%)</title><rect x="38.5405%" y="549" width="1.2543%" height="15" fill="rgb(249,174,33)" fg:x="338" fg:w="11"/><text x="38.7905%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.46%)</title><rect x="39.3387%" y="533" width="0.4561%" height="15" fill="rgb(233,201,37)" fg:x="345" fg:w="4"/><text x="39.5887%" y="543.50"></text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (4 samples, 0.46%)</title><rect x="39.3387%" y="517" width="0.4561%" height="15" fill="rgb(221,78,26)" fg:x="345" fg:w="4"/><text x="39.5887%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (4 samples, 0.46%)</title><rect x="39.3387%" y="501" width="0.4561%" height="15" fill="rgb(250,127,30)" fg:x="345" fg:w="4"/><text x="39.5887%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 2.05%)</title><rect x="38.1984%" y="597" width="2.0525%" height="15" fill="rgb(230,49,44)" fg:x="335" fg:w="18"/><text x="38.4484%" y="607.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (18 samples, 2.05%)</title><rect x="38.1984%" y="581" width="2.0525%" height="15" fill="rgb(229,67,23)" fg:x="335" fg:w="18"/><text x="38.4484%" y="591.50">&lt;..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="39.7948%" y="565" width="0.4561%" height="15" fill="rgb(249,83,47)" fg:x="349" fg:w="4"/><text x="40.0448%" y="575.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.11%)</title><rect x="40.1368%" y="549" width="0.1140%" height="15" fill="rgb(215,43,3)" fg:x="352" fg:w="1"/><text x="40.3868%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.11%)</title><rect x="40.1368%" y="533" width="0.1140%" height="15" fill="rgb(238,154,13)" fg:x="352" fg:w="1"/><text x="40.3868%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.11%)</title><rect x="40.1368%" y="517" width="0.1140%" height="15" fill="rgb(219,56,2)" fg:x="352" fg:w="1"/><text x="40.3868%" y="527.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (6 samples, 0.68%)</title><rect x="40.2509%" y="581" width="0.6842%" height="15" fill="rgb(233,0,4)" fg:x="353" fg:w="6"/><text x="40.5009%" y="591.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (76 samples, 8.67%)</title><rect x="37.0582%" y="661" width="8.6659%" height="15" fill="rgb(235,30,7)" fg:x="325" fg:w="76"/><text x="37.3082%" y="671.50">&lt;audio::gran..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (72 samples, 8.21%)</title><rect x="37.5143%" y="645" width="8.2098%" height="15" fill="rgb(250,79,13)" fg:x="329" fg:w="72"/><text x="37.7643%" y="655.50">audio::gran..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (66 samples, 7.53%)</title><rect x="38.1984%" y="629" width="7.5257%" height="15" fill="rgb(211,146,34)" fg:x="335" fg:w="66"/><text x="38.4484%" y="639.50">core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (66 samples, 7.53%)</title><rect x="38.1984%" y="613" width="7.5257%" height="15" fill="rgb(228,22,38)" fg:x="335" fg:w="66"/><text x="38.4484%" y="623.50">core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (48 samples, 5.47%)</title><rect x="40.2509%" y="597" width="5.4732%" height="15" fill="rgb(235,168,5)" fg:x="353" fg:w="48"/><text x="40.5009%" y="607.50">core::i..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (42 samples, 4.79%)</title><rect x="40.9350%" y="581" width="4.7891%" height="15" fill="rgb(221,155,16)" fg:x="359" fg:w="42"/><text x="41.1850%" y="591.50">audio:..</text></g><g><title>audio::grain::Grain::next_frame (9 samples, 1.03%)</title><rect x="44.6978%" y="565" width="1.0262%" height="15" fill="rgb(215,215,53)" fg:x="392" fg:w="9"/><text x="44.9478%" y="575.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.11%)</title><rect x="45.7241%" y="661" width="0.1140%" height="15" fill="rgb(223,4,10)" fg:x="401" fg:w="1"/><text x="45.9741%" y="671.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="45.8381%" y="661" width="0.1140%" height="15" fill="rgb(234,103,6)" fg:x="402" fg:w="1"/><text x="46.0881%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="45.9521%" y="661" width="0.1140%" height="15" fill="rgb(227,97,0)" fg:x="403" fg:w="1"/><text x="46.2021%" y="671.50"></text></g><g><title>alsa::poll::poll (1 samples, 0.11%)</title><rect x="46.0661%" y="661" width="0.1140%" height="15" fill="rgb(234,150,53)" fg:x="404" fg:w="1"/><text x="46.3161%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.46%)</title><rect x="46.1802%" y="645" width="0.4561%" height="15" fill="rgb(228,201,54)" fg:x="405" fg:w="4"/><text x="46.4302%" y="655.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (6 samples, 0.68%)</title><rect x="46.1802%" y="661" width="0.6842%" height="15" fill="rgb(222,22,37)" fg:x="405" fg:w="6"/><text x="46.4302%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (2 samples, 0.23%)</title><rect x="46.6363%" y="645" width="0.2281%" height="15" fill="rgb(237,53,32)" fg:x="409" fg:w="2"/><text x="46.8863%" y="655.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (2 samples, 0.23%)</title><rect x="46.6363%" y="629" width="0.2281%" height="15" fill="rgb(233,25,53)" fg:x="409" fg:w="2"/><text x="46.8863%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="46.6363%" y="613" width="0.2281%" height="15" fill="rgb(210,40,34)" fg:x="409" fg:w="2"/><text x="46.8863%" y="623.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (2 samples, 0.23%)</title><rect x="46.8643%" y="661" width="0.2281%" height="15" fill="rgb(241,220,44)" fg:x="411" fg:w="2"/><text x="47.1143%" y="671.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="46.8643%" y="645" width="0.2281%" height="15" fill="rgb(235,28,35)" fg:x="411" fg:w="2"/><text x="47.1143%" y="655.50"></text></g><g><title>granular_synthesizer_cli::write_data_to_frame_buffer (2 samples, 0.23%)</title><rect x="46.8643%" y="629" width="0.2281%" height="15" fill="rgb(210,56,17)" fg:x="411" fg:w="2"/><text x="47.1143%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="46.9783%" y="613" width="0.1140%" height="15" fill="rgb(224,130,29)" fg:x="412" fg:w="1"/><text x="47.2283%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="46.9783%" y="597" width="0.1140%" height="15" fill="rgb(235,212,8)" fg:x="412" fg:w="1"/><text x="47.2283%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (4 samples, 0.46%)</title><rect x="47.4344%" y="645" width="0.4561%" height="15" fill="rgb(223,33,50)" fg:x="416" fg:w="4"/><text x="47.6844%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.46%)</title><rect x="47.4344%" y="629" width="0.4561%" height="15" fill="rgb(219,149,13)" fg:x="416" fg:w="4"/><text x="47.6844%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (4 samples, 0.46%)</title><rect x="47.4344%" y="613" width="0.4561%" height="15" fill="rgb(250,156,29)" fg:x="416" fg:w="4"/><text x="47.6844%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4 samples, 0.46%)</title><rect x="47.4344%" y="597" width="0.4561%" height="15" fill="rgb(216,193,19)" fg:x="416" fg:w="4"/><text x="47.6844%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.46%)</title><rect x="47.4344%" y="581" width="0.4561%" height="15" fill="rgb(216,135,14)" fg:x="416" fg:w="4"/><text x="47.6844%" y="591.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (1 samples, 0.11%)</title><rect x="47.8905%" y="645" width="0.1140%" height="15" fill="rgb(241,47,5)" fg:x="420" fg:w="1"/><text x="48.1405%" y="655.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="48.0046%" y="629" width="0.1140%" height="15" fill="rgb(233,42,35)" fg:x="421" fg:w="1"/><text x="48.2546%" y="639.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.11%)</title><rect x="48.0046%" y="613" width="0.1140%" height="15" fill="rgb(231,13,6)" fg:x="421" fg:w="1"/><text x="48.2546%" y="623.50"></text></g><g><title>std::thread::panicking (1 samples, 0.11%)</title><rect x="48.0046%" y="597" width="0.1140%" height="15" fill="rgb(207,181,40)" fg:x="421" fg:w="1"/><text x="48.2546%" y="607.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.11%)</title><rect x="48.0046%" y="581" width="0.1140%" height="15" fill="rgb(254,173,49)" fg:x="421" fg:w="1"/><text x="48.2546%" y="591.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.11%)</title><rect x="48.0046%" y="565" width="0.1140%" height="15" fill="rgb(221,1,38)" fg:x="421" fg:w="1"/><text x="48.2546%" y="575.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (22 samples, 2.51%)</title><rect x="47.0924%" y="661" width="2.5086%" height="15" fill="rgb(206,124,46)" fg:x="413" fg:w="22"/><text x="47.3424%" y="671.50">gr..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 1.60%)</title><rect x="48.0046%" y="645" width="1.5964%" height="15" fill="rgb(249,21,11)" fg:x="421" fg:w="14"/><text x="48.2546%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (13 samples, 1.48%)</title><rect x="48.1186%" y="629" width="1.4823%" height="15" fill="rgb(222,201,40)" fg:x="422" fg:w="13"/><text x="48.3686%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (13 samples, 1.48%)</title><rect x="48.1186%" y="613" width="1.4823%" height="15" fill="rgb(235,61,29)" fg:x="422" fg:w="13"/><text x="48.3686%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 1.48%)</title><rect x="48.1186%" y="597" width="1.4823%" height="15" fill="rgb(219,207,3)" fg:x="422" fg:w="13"/><text x="48.3686%" y="607.50"></text></g><g><title>pthread_cond_wait (1 samples, 0.11%)</title><rect x="49.6009%" y="661" width="0.1140%" height="15" fill="rgb(222,56,46)" fg:x="435" fg:w="1"/><text x="49.8509%" y="671.50"></text></g><g><title>cpal_alsa_out (428 samples, 48.80%)</title><rect x="1.0262%" y="693" width="48.8027%" height="15" fill="rgb(239,76,54)" fg:x="9" fg:w="428"/><text x="1.2762%" y="703.50">cpal_alsa_out</text></g><g><title>[unknown] (112 samples, 12.77%)</title><rect x="37.0582%" y="677" width="12.7708%" height="15" fill="rgb(231,124,27)" fg:x="325" fg:w="112"/><text x="37.3082%" y="687.50">[unknown]</text></g><g><title>pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="49.7149%" y="661" width="0.1140%" height="15" fill="rgb(249,195,6)" fg:x="436" fg:w="1"/><text x="49.9649%" y="671.50"></text></g><g><title>L3_imdct36 (1 samples, 0.11%)</title><rect x="49.8290%" y="677" width="0.1140%" height="15" fill="rgb(237,174,47)" fg:x="437" fg:w="1"/><text x="50.0790%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.11%)</title><rect x="49.9430%" y="661" width="0.1140%" height="15" fill="rgb(206,201,31)" fg:x="438" fg:w="1"/><text x="50.1930%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.11%)</title><rect x="49.9430%" y="645" width="0.1140%" height="15" fill="rgb(231,57,52)" fg:x="438" fg:w="1"/><text x="50.1930%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="49.9430%" y="629" width="0.1140%" height="15" fill="rgb(248,177,22)" fg:x="438" fg:w="1"/><text x="50.1930%" y="639.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="49.9430%" y="613" width="0.1140%" height="15" fill="rgb(215,211,37)" fg:x="438" fg:w="1"/><text x="50.1930%" y="623.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="50.0570%" y="661" width="0.1140%" height="15" fill="rgb(241,128,51)" fg:x="439" fg:w="1"/><text x="50.3070%" y="671.50"></text></g><g><title>[[stack]] (3 samples, 0.34%)</title><rect x="49.9430%" y="677" width="0.3421%" height="15" fill="rgb(227,165,31)" fg:x="438" fg:w="3"/><text x="50.1930%" y="687.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.11%)</title><rect x="50.1710%" y="661" width="0.1140%" height="15" fill="rgb(228,167,24)" fg:x="440" fg:w="1"/><text x="50.4210%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.11%)</title><rect x="50.1710%" y="645" width="0.1140%" height="15" fill="rgb(228,143,12)" fg:x="440" fg:w="1"/><text x="50.4210%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.11%)</title><rect x="50.1710%" y="629" width="0.1140%" height="15" fill="rgb(249,149,8)" fg:x="440" fg:w="1"/><text x="50.4210%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.11%)</title><rect x="50.1710%" y="613" width="0.1140%" height="15" fill="rgb(243,35,44)" fg:x="440" fg:w="1"/><text x="50.4210%" y="623.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.11%)</title><rect x="50.1710%" y="597" width="0.1140%" height="15" fill="rgb(246,89,9)" fg:x="440" fg:w="1"/><text x="50.4210%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="50.1710%" y="581" width="0.1140%" height="15" fill="rgb(233,213,13)" fg:x="440" fg:w="1"/><text x="50.4210%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="50.1710%" y="565" width="0.1140%" height="15" fill="rgb(233,141,41)" fg:x="440" fg:w="1"/><text x="50.4210%" y="575.50"></text></g><g><title>[anon] (1 samples, 0.11%)</title><rect x="50.2851%" y="677" width="0.1140%" height="15" fill="rgb(239,167,4)" fg:x="441" fg:w="1"/><text x="50.5351%" y="687.50"></text></g><g><title>&lt;slice_deque::SliceDeque&lt;T&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="50.2851%" y="661" width="0.1140%" height="15" fill="rgb(209,217,16)" fg:x="441" fg:w="1"/><text x="50.5351%" y="671.50"></text></g><g><title>&lt;slice_deque::SliceDeque&lt;T&gt; as slice_deque::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="50.2851%" y="645" width="0.1140%" height="15" fill="rgb(219,88,35)" fg:x="441" fg:w="1"/><text x="50.5351%" y="655.50"></text></g><g><title>&lt;slice_deque::SliceDeque&lt;T&gt; as slice_deque::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="50.2851%" y="629" width="0.1140%" height="15" fill="rgb(220,193,23)" fg:x="441" fg:w="1"/><text x="50.5351%" y="639.50"></text></g><g><title>slice_deque::SliceDeque&lt;T&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="50.2851%" y="613" width="0.1140%" height="15" fill="rgb(230,90,52)" fg:x="441" fg:w="1"/><text x="50.5351%" y="623.50"></text></g><g><title>slice_deque::SliceDeque&lt;T&gt;::move_tail_unchecked (1 samples, 0.11%)</title><rect x="50.2851%" y="597" width="0.1140%" height="15" fill="rgb(252,106,19)" fg:x="441" fg:w="1"/><text x="50.5351%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.11%)</title><rect x="50.3991%" y="677" width="0.1140%" height="15" fill="rgb(206,74,20)" fg:x="442" fg:w="1"/><text x="50.6491%" y="687.50"></text></g><g><title>[libc.so.6] (15 samples, 1.71%)</title><rect x="50.5131%" y="677" width="1.7104%" height="15" fill="rgb(230,138,44)" fg:x="443" fg:w="15"/><text x="50.7631%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="52.4515%" y="661" width="0.3421%" height="15" fill="rgb(235,182,43)" fg:x="460" fg:w="3"/><text x="52.7015%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.34%)</title><rect x="52.4515%" y="645" width="0.3421%" height="15" fill="rgb(242,16,51)" fg:x="460" fg:w="3"/><text x="52.7015%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.34%)</title><rect x="52.4515%" y="629" width="0.3421%" height="15" fill="rgb(248,9,4)" fg:x="460" fg:w="3"/><text x="52.7015%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.34%)</title><rect x="52.4515%" y="613" width="0.3421%" height="15" fill="rgb(210,31,22)" fg:x="460" fg:w="3"/><text x="52.7015%" y="623.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="52.6796%" y="597" width="0.1140%" height="15" fill="rgb(239,54,39)" fg:x="462" fg:w="1"/><text x="52.9296%" y="607.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::new (1 samples, 0.11%)</title><rect x="52.7936%" y="661" width="0.1140%" height="15" fill="rgb(230,99,41)" fg:x="463" fg:w="1"/><text x="53.0436%" y="671.50"></text></g><g><title>rand_chacha::guts::init_chacha (1 samples, 0.11%)</title><rect x="52.7936%" y="645" width="0.1140%" height="15" fill="rgb(253,106,12)" fg:x="463" fg:w="1"/><text x="53.0436%" y="655.50"></text></g><g><title>std_detect::detect::cache::detect_and_initialize (1 samples, 0.11%)</title><rect x="52.7936%" y="629" width="0.1140%" height="15" fill="rgb(213,46,41)" fg:x="463" fg:w="1"/><text x="53.0436%" y="639.50"></text></g><g><title>std_detect::detect::os::detect_features (1 samples, 0.11%)</title><rect x="52.7936%" y="613" width="0.1140%" height="15" fill="rgb(215,133,35)" fg:x="463" fg:w="1"/><text x="53.0436%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="52.7936%" y="597" width="0.1140%" height="15" fill="rgb(213,28,5)" fg:x="463" fg:w="1"/><text x="53.0436%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="52.7936%" y="581" width="0.1140%" height="15" fill="rgb(215,77,49)" fg:x="463" fg:w="1"/><text x="53.0436%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="52.7936%" y="565" width="0.1140%" height="15" fill="rgb(248,100,22)" fg:x="463" fg:w="1"/><text x="53.0436%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="52.7936%" y="549" width="0.1140%" height="15" fill="rgb(208,67,9)" fg:x="463" fg:w="1"/><text x="53.0436%" y="559.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="52.9076%" y="661" width="0.2281%" height="15" fill="rgb(219,133,21)" fg:x="464" fg:w="2"/><text x="53.1576%" y="671.50"></text></g><g><title>&lt;rodio::decoder::mp3::Mp3Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="52.9076%" y="645" width="0.2281%" height="15" fill="rgb(246,46,29)" fg:x="464" fg:w="2"/><text x="53.1576%" y="655.50"></text></g><g><title>L3_imdct36 (2 samples, 0.23%)</title><rect x="53.1357%" y="661" width="0.2281%" height="15" fill="rgb(246,185,52)" fg:x="466" fg:w="2"/><text x="53.3857%" y="671.50"></text></g><g><title>_mm_mul_ps (2 samples, 0.23%)</title><rect x="53.1357%" y="645" width="0.2281%" height="15" fill="rgb(252,136,11)" fg:x="466" fg:w="2"/><text x="53.3857%" y="655.50"></text></g><g><title>[libc.so.6] (7 samples, 0.80%)</title><rect x="53.3637%" y="661" width="0.7982%" height="15" fill="rgb(219,138,53)" fg:x="468" fg:w="7"/><text x="53.6137%" y="671.50"></text></g><g><title>__ctype_init (2 samples, 0.23%)</title><rect x="54.1619%" y="661" width="0.2281%" height="15" fill="rgb(211,51,23)" fg:x="475" fg:w="2"/><text x="54.4119%" y="671.50"></text></g><g><title>cpal::platform::platform_impl::default_host (1 samples, 0.11%)</title><rect x="54.3900%" y="661" width="0.1140%" height="15" fill="rgb(247,221,28)" fg:x="477" fg:w="1"/><text x="54.6400%" y="671.50"></text></g><g><title>_mm_add_ps (1 samples, 0.11%)</title><rect x="54.5040%" y="645" width="0.1140%" height="15" fill="rgb(251,222,45)" fg:x="478" fg:w="1"/><text x="54.7540%" y="655.50"></text></g><g><title>mp3d_synth (2 samples, 0.23%)</title><rect x="54.5040%" y="661" width="0.2281%" height="15" fill="rgb(217,162,53)" fg:x="478" fg:w="2"/><text x="54.7540%" y="671.50"></text></g><g><title>_mm_extract_epi16 (1 samples, 0.11%)</title><rect x="54.6180%" y="645" width="0.1140%" height="15" fill="rgb(229,93,14)" fg:x="479" fg:w="1"/><text x="54.8680%" y="655.50"></text></g><g><title>L3_huffman (6 samples, 0.68%)</title><rect x="54.7320%" y="629" width="0.6842%" height="15" fill="rgb(209,67,49)" fg:x="480" fg:w="6"/><text x="54.9820%" y="639.50"></text></g><g><title>L3_decode (7 samples, 0.80%)</title><rect x="54.7320%" y="645" width="0.7982%" height="15" fill="rgb(213,87,29)" fg:x="480" fg:w="7"/><text x="54.9820%" y="655.50"></text></g><g><title>L3_imdct_gr (1 samples, 0.11%)</title><rect x="55.4162%" y="629" width="0.1140%" height="15" fill="rgb(205,151,52)" fg:x="486" fg:w="1"/><text x="55.6662%" y="639.50"></text></g><g><title>mp3d_synth (1 samples, 0.11%)</title><rect x="55.4162%" y="613" width="0.1140%" height="15" fill="rgb(253,215,39)" fg:x="486" fg:w="1"/><text x="55.6662%" y="623.50"></text></g><g><title>_mm_max_ps (1 samples, 0.11%)</title><rect x="55.4162%" y="597" width="0.1140%" height="15" fill="rgb(221,220,41)" fg:x="486" fg:w="1"/><text x="55.6662%" y="607.50"></text></g><g><title>L3_imdct36 (1 samples, 0.11%)</title><rect x="55.5302%" y="629" width="0.1140%" height="15" fill="rgb(218,133,21)" fg:x="487" fg:w="1"/><text x="55.7802%" y="639.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.11%)</title><rect x="55.5302%" y="613" width="0.1140%" height="15" fill="rgb(221,193,43)" fg:x="487" fg:w="1"/><text x="55.7802%" y="623.50"></text></g><g><title>_mm_add_ps (1 samples, 0.11%)</title><rect x="55.6442%" y="613" width="0.1140%" height="15" fill="rgb(240,128,52)" fg:x="488" fg:w="1"/><text x="55.8942%" y="623.50"></text></g><g><title>_mm_cvtps_epi32 (1 samples, 0.11%)</title><rect x="55.7583%" y="613" width="0.1140%" height="15" fill="rgb(253,114,12)" fg:x="489" fg:w="1"/><text x="56.0083%" y="623.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.11%)</title><rect x="55.8723%" y="613" width="0.1140%" height="15" fill="rgb(215,223,47)" fg:x="490" fg:w="1"/><text x="56.1223%" y="623.50"></text></g><g><title>mp3d_synth (4 samples, 0.46%)</title><rect x="55.6442%" y="629" width="0.4561%" height="15" fill="rgb(248,225,23)" fg:x="488" fg:w="4"/><text x="55.8942%" y="639.50"></text></g><g><title>_mm_set1_ps (1 samples, 0.11%)</title><rect x="55.9863%" y="613" width="0.1140%" height="15" fill="rgb(250,108,0)" fg:x="491" fg:w="1"/><text x="56.2363%" y="623.50"></text></g><g><title>mp3dec_decode_frame (17 samples, 1.94%)</title><rect x="54.7320%" y="661" width="1.9384%" height="15" fill="rgb(228,208,7)" fg:x="480" fg:w="17"/><text x="54.9820%" y="671.50">m..</text></g><g><title>mp3d_synth_granule (10 samples, 1.14%)</title><rect x="55.5302%" y="645" width="1.1403%" height="15" fill="rgb(244,45,10)" fg:x="487" fg:w="10"/><text x="55.7802%" y="655.50"></text></g><g><title>mp3dec_decode_frame (5 samples, 0.57%)</title><rect x="56.1003%" y="629" width="0.5701%" height="15" fill="rgb(207,125,25)" fg:x="492" fg:w="5"/><text x="56.3503%" y="639.50"></text></g><g><title>L3_decode (5 samples, 0.57%)</title><rect x="56.1003%" y="613" width="0.5701%" height="15" fill="rgb(210,195,18)" fg:x="492" fg:w="5"/><text x="56.3503%" y="623.50"></text></g><g><title>L3_huffman (5 samples, 0.57%)</title><rect x="56.1003%" y="597" width="0.5701%" height="15" fill="rgb(249,80,12)" fg:x="492" fg:w="5"/><text x="56.3503%" y="607.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.23%)</title><rect x="56.6705%" y="661" width="0.2281%" height="15" fill="rgb(221,65,9)" fg:x="497" fg:w="2"/><text x="56.9205%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.11%)</title><rect x="56.7845%" y="645" width="0.1140%" height="15" fill="rgb(235,49,36)" fg:x="498" fg:w="1"/><text x="57.0345%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.11%)</title><rect x="56.7845%" y="629" width="0.1140%" height="15" fill="rgb(225,32,20)" fg:x="498" fg:w="1"/><text x="57.0345%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.11%)</title><rect x="56.7845%" y="613" width="0.1140%" height="15" fill="rgb(215,141,46)" fg:x="498" fg:w="1"/><text x="57.0345%" y="623.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.11%)</title><rect x="56.7845%" y="597" width="0.1140%" height="15" fill="rgb(250,160,47)" fg:x="498" fg:w="1"/><text x="57.0345%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="56.7845%" y="581" width="0.1140%" height="15" fill="rgb(216,222,40)" fg:x="498" fg:w="1"/><text x="57.0345%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="56.7845%" y="565" width="0.1140%" height="15" fill="rgb(234,217,39)" fg:x="498" fg:w="1"/><text x="57.0345%" y="575.50"></text></g><g><title>snd_pcm_ioplug_create (1 samples, 0.11%)</title><rect x="56.8985%" y="661" width="0.1140%" height="15" fill="rgb(207,178,40)" fg:x="499" fg:w="1"/><text x="57.1485%" y="671.50"></text></g><g><title>[unknown] (43 samples, 4.90%)</title><rect x="52.2235%" y="677" width="4.9031%" height="15" fill="rgb(221,136,13)" fg:x="458" fg:w="43"/><text x="52.4735%" y="687.50">[unkno..</text></g><g><title>syscall (1 samples, 0.11%)</title><rect x="57.0125%" y="661" width="0.1140%" height="15" fill="rgb(249,199,10)" fg:x="500" fg:w="1"/><text x="57.2625%" y="671.50"></text></g><g><title>tokio::runtime::builder::Builder::build (1 samples, 0.11%)</title><rect x="57.1266%" y="405" width="0.1140%" height="15" fill="rgb(249,222,13)" fg:x="501" fg:w="1"/><text x="57.3766%" y="415.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (1 samples, 0.11%)</title><rect x="57.1266%" y="389" width="0.1140%" height="15" fill="rgb(244,185,38)" fg:x="501" fg:w="1"/><text x="57.3766%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (1 samples, 0.11%)</title><rect x="57.1266%" y="373" width="0.1140%" height="15" fill="rgb(236,202,9)" fg:x="501" fg:w="1"/><text x="57.3766%" y="383.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.11%)</title><rect x="57.1266%" y="357" width="0.1140%" height="15" fill="rgb(250,229,37)" fg:x="501" fg:w="1"/><text x="57.3766%" y="367.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (1 samples, 0.11%)</title><rect x="57.1266%" y="341" width="0.1140%" height="15" fill="rgb(206,174,23)" fg:x="501" fg:w="1"/><text x="57.3766%" y="351.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (1 samples, 0.11%)</title><rect x="57.1266%" y="325" width="0.1140%" height="15" fill="rgb(211,33,43)" fg:x="501" fg:w="1"/><text x="57.3766%" y="335.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (1 samples, 0.11%)</title><rect x="57.1266%" y="309" width="0.1140%" height="15" fill="rgb(245,58,50)" fg:x="501" fg:w="1"/><text x="57.3766%" y="319.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.11%)</title><rect x="57.1266%" y="293" width="0.1140%" height="15" fill="rgb(244,68,36)" fg:x="501" fg:w="1"/><text x="57.3766%" y="303.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.11%)</title><rect x="57.1266%" y="277" width="0.1140%" height="15" fill="rgb(232,229,15)" fg:x="501" fg:w="1"/><text x="57.3766%" y="287.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.11%)</title><rect x="57.1266%" y="261" width="0.1140%" height="15" fill="rgb(254,30,23)" fg:x="501" fg:w="1"/><text x="57.3766%" y="271.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.11%)</title><rect x="57.1266%" y="245" width="0.1140%" height="15" fill="rgb(235,160,14)" fg:x="501" fg:w="1"/><text x="57.3766%" y="255.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.11%)</title><rect x="57.1266%" y="229" width="0.1140%" height="15" fill="rgb(212,155,44)" fg:x="501" fg:w="1"/><text x="57.3766%" y="239.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.11%)</title><rect x="57.1266%" y="213" width="0.1140%" height="15" fill="rgb(226,2,50)" fg:x="501" fg:w="1"/><text x="57.3766%" y="223.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.11%)</title><rect x="57.1266%" y="197" width="0.1140%" height="15" fill="rgb(234,177,6)" fg:x="501" fg:w="1"/><text x="57.3766%" y="207.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.11%)</title><rect x="57.1266%" y="181" width="0.1140%" height="15" fill="rgb(217,24,9)" fg:x="501" fg:w="1"/><text x="57.3766%" y="191.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="57.1266%" y="165" width="0.1140%" height="15" fill="rgb(220,13,46)" fg:x="501" fg:w="1"/><text x="57.3766%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="57.2406%" y="149" width="0.1140%" height="15" fill="rgb(239,221,27)" fg:x="502" fg:w="1"/><text x="57.4906%" y="159.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="57.3546%" y="149" width="0.2281%" height="15" fill="rgb(222,198,25)" fg:x="503" fg:w="2"/><text x="57.6046%" y="159.50"></text></g><g><title>&lt;rodio::decoder::mp3::Mp3Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="57.4686%" y="133" width="0.1140%" height="15" fill="rgb(211,99,13)" fg:x="504" fg:w="1"/><text x="57.7186%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.80%)</title><rect x="57.2406%" y="245" width="0.7982%" height="15" fill="rgb(232,111,31)" fg:x="502" fg:w="7"/><text x="57.4906%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.80%)</title><rect x="57.2406%" y="229" width="0.7982%" height="15" fill="rgb(245,82,37)" fg:x="502" fg:w="7"/><text x="57.4906%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.80%)</title><rect x="57.2406%" y="213" width="0.7982%" height="15" fill="rgb(227,149,46)" fg:x="502" fg:w="7"/><text x="57.4906%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.80%)</title><rect x="57.2406%" y="197" width="0.7982%" height="15" fill="rgb(218,36,50)" fg:x="502" fg:w="7"/><text x="57.4906%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.80%)</title><rect x="57.2406%" y="181" width="0.7982%" height="15" fill="rgb(226,80,48)" fg:x="502" fg:w="7"/><text x="57.4906%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.80%)</title><rect x="57.2406%" y="165" width="0.7982%" height="15" fill="rgb(238,224,15)" fg:x="502" fg:w="7"/><text x="57.4906%" y="175.50"></text></g><g><title>core::ptr::write (4 samples, 0.46%)</title><rect x="57.5827%" y="149" width="0.4561%" height="15" fill="rgb(241,136,10)" fg:x="505" fg:w="4"/><text x="57.8327%" y="159.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="58.0388%" y="85" width="0.1140%" height="15" fill="rgb(208,32,45)" fg:x="509" fg:w="1"/><text x="58.2888%" y="95.50"></text></g><g><title>core::ptr::read (1 samples, 0.11%)</title><rect x="58.0388%" y="69" width="0.1140%" height="15" fill="rgb(207,135,9)" fg:x="509" fg:w="1"/><text x="58.2888%" y="79.50"></text></g><g><title>_start (12 samples, 1.37%)</title><rect x="57.1266%" y="677" width="1.3683%" height="15" fill="rgb(206,86,44)" fg:x="501" fg:w="12"/><text x="57.3766%" y="687.50"></text></g><g><title>__libc_start_main (12 samples, 1.37%)</title><rect x="57.1266%" y="661" width="1.3683%" height="15" fill="rgb(245,177,15)" fg:x="501" fg:w="12"/><text x="57.3766%" y="671.50"></text></g><g><title>[libc.so.6] (12 samples, 1.37%)</title><rect x="57.1266%" y="645" width="1.3683%" height="15" fill="rgb(206,64,50)" fg:x="501" fg:w="12"/><text x="57.3766%" y="655.50"></text></g><g><title>main (12 samples, 1.37%)</title><rect x="57.1266%" y="629" width="1.3683%" height="15" fill="rgb(234,36,40)" fg:x="501" fg:w="12"/><text x="57.3766%" y="639.50"></text></g><g><title>std::rt::lang_start_internal (12 samples, 1.37%)</title><rect x="57.1266%" y="613" width="1.3683%" height="15" fill="rgb(213,64,8)" fg:x="501" fg:w="12"/><text x="57.3766%" y="623.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 1.37%)</title><rect x="57.1266%" y="597" width="1.3683%" height="15" fill="rgb(210,75,36)" fg:x="501" fg:w="12"/><text x="57.3766%" y="607.50"></text></g><g><title>std::panicking::try (12 samples, 1.37%)</title><rect x="57.1266%" y="581" width="1.3683%" height="15" fill="rgb(229,88,21)" fg:x="501" fg:w="12"/><text x="57.3766%" y="591.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 1.37%)</title><rect x="57.1266%" y="565" width="1.3683%" height="15" fill="rgb(252,204,47)" fg:x="501" fg:w="12"/><text x="57.3766%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (12 samples, 1.37%)</title><rect x="57.1266%" y="549" width="1.3683%" height="15" fill="rgb(208,77,27)" fg:x="501" fg:w="12"/><text x="57.3766%" y="559.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 1.37%)</title><rect x="57.1266%" y="533" width="1.3683%" height="15" fill="rgb(221,76,26)" fg:x="501" fg:w="12"/><text x="57.3766%" y="543.50"></text></g><g><title>std::panicking::try (12 samples, 1.37%)</title><rect x="57.1266%" y="517" width="1.3683%" height="15" fill="rgb(225,139,18)" fg:x="501" fg:w="12"/><text x="57.3766%" y="527.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 1.37%)</title><rect x="57.1266%" y="501" width="1.3683%" height="15" fill="rgb(230,137,11)" fg:x="501" fg:w="12"/><text x="57.3766%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (12 samples, 1.37%)</title><rect x="57.1266%" y="485" width="1.3683%" height="15" fill="rgb(212,28,1)" fg:x="501" fg:w="12"/><text x="57.3766%" y="495.50"></text></g><g><title>std::rt::lang_start::{{closure}} (12 samples, 1.37%)</title><rect x="57.1266%" y="469" width="1.3683%" height="15" fill="rgb(248,164,17)" fg:x="501" fg:w="12"/><text x="57.3766%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 1.37%)</title><rect x="57.1266%" y="453" width="1.3683%" height="15" fill="rgb(222,171,42)" fg:x="501" fg:w="12"/><text x="57.3766%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 1.37%)</title><rect x="57.1266%" y="437" width="1.3683%" height="15" fill="rgb(243,84,45)" fg:x="501" fg:w="12"/><text x="57.3766%" y="447.50"></text></g><g><title>granular_synthesizer_cli::main (12 samples, 1.37%)</title><rect x="57.1266%" y="421" width="1.3683%" height="15" fill="rgb(252,49,23)" fg:x="501" fg:w="12"/><text x="57.3766%" y="431.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (11 samples, 1.25%)</title><rect x="57.2406%" y="405" width="1.2543%" height="15" fill="rgb(215,19,7)" fg:x="502" fg:w="11"/><text x="57.4906%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (11 samples, 1.25%)</title><rect x="57.2406%" y="389" width="1.2543%" height="15" fill="rgb(238,81,41)" fg:x="502" fg:w="11"/><text x="57.4906%" y="399.50"></text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (11 samples, 1.25%)</title><rect x="57.2406%" y="373" width="1.2543%" height="15" fill="rgb(210,199,37)" fg:x="502" fg:w="11"/><text x="57.4906%" y="383.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (11 samples, 1.25%)</title><rect x="57.2406%" y="357" width="1.2543%" height="15" fill="rgb(244,192,49)" fg:x="502" fg:w="11"/><text x="57.4906%" y="367.50"></text></g><g><title>tokio::runtime::coop::budget (11 samples, 1.25%)</title><rect x="57.2406%" y="341" width="1.2543%" height="15" fill="rgb(226,211,11)" fg:x="502" fg:w="11"/><text x="57.4906%" y="351.50"></text></g><g><title>tokio::runtime::coop::with_budget (11 samples, 1.25%)</title><rect x="57.2406%" y="325" width="1.2543%" height="15" fill="rgb(236,162,54)" fg:x="502" fg:w="11"/><text x="57.4906%" y="335.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (11 samples, 1.25%)</title><rect x="57.2406%" y="309" width="1.2543%" height="15" fill="rgb(220,229,9)" fg:x="502" fg:w="11"/><text x="57.4906%" y="319.50"></text></g><g><title>granular_synthesizer_cli::main::{{closure}} (11 samples, 1.25%)</title><rect x="57.2406%" y="293" width="1.2543%" height="15" fill="rgb(250,87,22)" fg:x="502" fg:w="11"/><text x="57.4906%" y="303.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}} (11 samples, 1.25%)</title><rect x="57.2406%" y="277" width="1.2543%" height="15" fill="rgb(239,43,17)" fg:x="502" fg:w="11"/><text x="57.4906%" y="287.50"></text></g><g><title>granular_synthesizer_cli::load_default_buffer (11 samples, 1.25%)</title><rect x="57.2406%" y="261" width="1.2543%" height="15" fill="rgb(231,177,25)" fg:x="502" fg:w="11"/><text x="57.4906%" y="271.50"></text></g><g><title>granular_synthesizer_cli::utils::i16_array_to_f32 (4 samples, 0.46%)</title><rect x="58.0388%" y="245" width="0.4561%" height="15" fill="rgb(219,179,1)" fg:x="509" fg:w="4"/><text x="58.2888%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.46%)</title><rect x="58.0388%" y="229" width="0.4561%" height="15" fill="rgb(238,219,53)" fg:x="509" fg:w="4"/><text x="58.2888%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.46%)</title><rect x="58.0388%" y="213" width="0.4561%" height="15" fill="rgb(232,167,36)" fg:x="509" fg:w="4"/><text x="58.2888%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.46%)</title><rect x="58.0388%" y="197" width="0.4561%" height="15" fill="rgb(244,19,51)" fg:x="509" fg:w="4"/><text x="58.2888%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.46%)</title><rect x="58.0388%" y="181" width="0.4561%" height="15" fill="rgb(224,6,22)" fg:x="509" fg:w="4"/><text x="58.2888%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.46%)</title><rect x="58.0388%" y="165" width="0.4561%" height="15" fill="rgb(224,145,5)" fg:x="509" fg:w="4"/><text x="58.2888%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.46%)</title><rect x="58.0388%" y="149" width="0.4561%" height="15" fill="rgb(234,130,49)" fg:x="509" fg:w="4"/><text x="58.2888%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.46%)</title><rect x="58.0388%" y="133" width="0.4561%" height="15" fill="rgb(254,6,2)" fg:x="509" fg:w="4"/><text x="58.2888%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.46%)</title><rect x="58.0388%" y="117" width="0.4561%" height="15" fill="rgb(208,96,46)" fg:x="509" fg:w="4"/><text x="58.2888%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.46%)</title><rect x="58.0388%" y="101" width="0.4561%" height="15" fill="rgb(239,3,39)" fg:x="509" fg:w="4"/><text x="58.2888%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.34%)</title><rect x="58.1528%" y="85" width="0.3421%" height="15" fill="rgb(233,210,1)" fg:x="510" fg:w="3"/><text x="58.4028%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.34%)</title><rect x="58.1528%" y="69" width="0.3421%" height="15" fill="rgb(244,137,37)" fg:x="510" fg:w="3"/><text x="58.4028%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (3 samples, 0.34%)</title><rect x="58.1528%" y="53" width="0.3421%" height="15" fill="rgb(240,136,2)" fg:x="510" fg:w="3"/><text x="58.4028%" y="63.50"></text></g><g><title>core::ptr::write (3 samples, 0.34%)</title><rect x="58.1528%" y="37" width="0.3421%" height="15" fill="rgb(239,18,37)" fg:x="510" fg:w="3"/><text x="58.4028%" y="47.50"></text></g><g><title>mp3d_synth (1 samples, 0.11%)</title><rect x="58.4949%" y="677" width="0.1140%" height="15" fill="rgb(218,185,22)" fg:x="513" fg:w="1"/><text x="58.7449%" y="687.50"></text></g><g><title>granular_synthe (79 samples, 9.01%)</title><rect x="49.8290%" y="693" width="9.0080%" height="15" fill="rgb(225,218,4)" fg:x="437" fg:w="79"/><text x="50.0790%" y="703.50">granular_synt..</text></g><g><title>mp3dec_decode_frame (2 samples, 0.23%)</title><rect x="58.6089%" y="677" width="0.2281%" height="15" fill="rgb(230,182,32)" fg:x="514" fg:w="2"/><text x="58.8589%" y="687.50"></text></g><g><title>L3_decode (2 samples, 0.23%)</title><rect x="58.6089%" y="661" width="0.2281%" height="15" fill="rgb(242,56,43)" fg:x="514" fg:w="2"/><text x="58.8589%" y="671.50"></text></g><g><title>L3_huffman (2 samples, 0.23%)</title><rect x="58.6089%" y="645" width="0.2281%" height="15" fill="rgb(233,99,24)" fg:x="514" fg:w="2"/><text x="58.8589%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="58.8369%" y="661" width="0.1140%" height="15" fill="rgb(234,209,42)" fg:x="516" fg:w="1"/><text x="59.0869%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (4 samples, 0.46%)</title><rect x="58.9510%" y="661" width="0.4561%" height="15" fill="rgb(227,7,12)" fg:x="517" fg:w="4"/><text x="59.2010%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (5 samples, 0.57%)</title><rect x="59.4071%" y="661" width="0.5701%" height="15" fill="rgb(245,203,43)" fg:x="521" fg:w="5"/><text x="59.6571%" y="671.50"></text></g><g><title>__errno_location (1 samples, 0.11%)</title><rect x="59.9772%" y="661" width="0.1140%" height="15" fill="rgb(238,205,33)" fg:x="526" fg:w="1"/><text x="60.2272%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="60.0912%" y="661" width="0.1140%" height="15" fill="rgb(231,56,7)" fg:x="527" fg:w="1"/><text x="60.3412%" y="671.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.11%)</title><rect x="60.2052%" y="661" width="0.1140%" height="15" fill="rgb(244,186,29)" fg:x="528" fg:w="1"/><text x="60.4552%" y="671.50"></text></g><g><title>pa_mainloop_dispatch (6 samples, 0.68%)</title><rect x="60.3193%" y="661" width="0.6842%" height="15" fill="rgb(234,111,31)" fg:x="529" fg:w="6"/><text x="60.5693%" y="671.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="61.0034%" y="661" width="0.1140%" height="15" fill="rgb(241,149,10)" fg:x="535" fg:w="1"/><text x="61.2534%" y="671.50"></text></g><g><title>pa_mainloop_prepare (3 samples, 0.34%)</title><rect x="61.1174%" y="661" width="0.3421%" height="15" fill="rgb(249,206,44)" fg:x="536" fg:w="3"/><text x="61.3674%" y="671.50"></text></g><g><title>pa_pdispatch_run (1 samples, 0.11%)</title><rect x="61.4595%" y="661" width="0.1140%" height="15" fill="rgb(251,153,30)" fg:x="539" fg:w="1"/><text x="61.7095%" y="671.50"></text></g><g><title>pa_queue_pop (2 samples, 0.23%)</title><rect x="61.5735%" y="661" width="0.2281%" height="15" fill="rgb(239,152,38)" fg:x="540" fg:w="2"/><text x="61.8235%" y="671.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.11%)</title><rect x="61.8016%" y="661" width="0.1140%" height="15" fill="rgb(249,139,47)" fg:x="542" fg:w="1"/><text x="62.0516%" y="671.50"></text></g><g><title>pa_tagstruct_get_boolean (1 samples, 0.11%)</title><rect x="61.9156%" y="661" width="0.1140%" height="15" fill="rgb(244,64,35)" fg:x="543" fg:w="1"/><text x="62.1656%" y="671.50"></text></g><g><title>pa_xmalloc0 (1 samples, 0.11%)</title><rect x="62.0296%" y="661" width="0.1140%" height="15" fill="rgb(216,46,15)" fg:x="544" fg:w="1"/><text x="62.2796%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="62.0296%" y="645" width="0.1140%" height="15" fill="rgb(250,74,19)" fg:x="544" fg:w="1"/><text x="62.2796%" y="655.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="62.1437%" y="661" width="0.1140%" height="15" fill="rgb(249,42,33)" fg:x="545" fg:w="1"/><text x="62.3937%" y="671.50"></text></g><g><title>[[heap]] (31 samples, 3.53%)</title><rect x="58.8369%" y="677" width="3.5348%" height="15" fill="rgb(242,149,17)" fg:x="516" fg:w="31"/><text x="59.0869%" y="687.50">[[h..</text></g><g><title>recvmsg (1 samples, 0.11%)</title><rect x="62.2577%" y="661" width="0.1140%" height="15" fill="rgb(244,29,21)" fg:x="546" fg:w="1"/><text x="62.5077%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="62.3717%" y="661" width="0.1140%" height="15" fill="rgb(220,130,37)" fg:x="547" fg:w="1"/><text x="62.6217%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (1 samples, 0.11%)</title><rect x="62.3717%" y="645" width="0.1140%" height="15" fill="rgb(211,67,2)" fg:x="547" fg:w="1"/><text x="62.6217%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="62.3717%" y="629" width="0.1140%" height="15" fill="rgb(235,68,52)" fg:x="547" fg:w="1"/><text x="62.6217%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="62.3717%" y="613" width="0.1140%" height="15" fill="rgb(246,142,3)" fg:x="547" fg:w="1"/><text x="62.6217%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="62.3717%" y="597" width="0.1140%" height="15" fill="rgb(241,25,7)" fg:x="547" fg:w="1"/><text x="62.6217%" y="607.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="62.3717%" y="581" width="0.1140%" height="15" fill="rgb(242,119,39)" fg:x="547" fg:w="1"/><text x="62.6217%" y="591.50"></text></g><g><title>__errno_location (1 samples, 0.11%)</title><rect x="62.4857%" y="661" width="0.1140%" height="15" fill="rgb(241,98,45)" fg:x="548" fg:w="1"/><text x="62.7357%" y="671.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="62.5998%" y="661" width="0.1140%" height="15" fill="rgb(254,28,30)" fg:x="549" fg:w="1"/><text x="62.8498%" y="671.50"></text></g><g><title>[[stack]] (4 samples, 0.46%)</title><rect x="62.3717%" y="677" width="0.4561%" height="15" fill="rgb(241,142,54)" fg:x="547" fg:w="4"/><text x="62.6217%" y="687.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="62.7138%" y="661" width="0.1140%" height="15" fill="rgb(222,85,15)" fg:x="550" fg:w="1"/><text x="62.9638%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="62.8278%" y="661" width="0.1140%" height="15" fill="rgb(210,85,47)" fg:x="551" fg:w="1"/><text x="63.0778%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (1 samples, 0.11%)</title><rect x="62.8278%" y="645" width="0.1140%" height="15" fill="rgb(224,206,25)" fg:x="551" fg:w="1"/><text x="63.0778%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="62.8278%" y="629" width="0.1140%" height="15" fill="rgb(243,201,19)" fg:x="551" fg:w="1"/><text x="63.0778%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="62.8278%" y="613" width="0.1140%" height="15" fill="rgb(236,59,4)" fg:x="551" fg:w="1"/><text x="63.0778%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="62.8278%" y="597" width="0.1140%" height="15" fill="rgb(254,179,45)" fg:x="551" fg:w="1"/><text x="63.0778%" y="607.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (1 samples, 0.11%)</title><rect x="62.8278%" y="581" width="0.1140%" height="15" fill="rgb(226,14,10)" fg:x="551" fg:w="1"/><text x="63.0778%" y="591.50"></text></g><g><title>[[vdso]] (2 samples, 0.23%)</title><rect x="62.9418%" y="661" width="0.2281%" height="15" fill="rgb(244,27,41)" fg:x="552" fg:w="2"/><text x="63.1918%" y="671.50"></text></g><g><title>[libc.so.6] (28 samples, 3.19%)</title><rect x="63.1699%" y="661" width="3.1927%" height="15" fill="rgb(235,35,32)" fg:x="554" fg:w="28"/><text x="63.4199%" y="671.50">[li..</text></g><g><title>[libpulse.so.0.24.1] (6 samples, 0.68%)</title><rect x="66.3626%" y="661" width="0.6842%" height="15" fill="rgb(218,68,31)" fg:x="582" fg:w="6"/><text x="66.6126%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (15 samples, 1.71%)</title><rect x="67.0468%" y="661" width="1.7104%" height="15" fill="rgb(207,120,37)" fg:x="588" fg:w="15"/><text x="67.2968%" y="671.50"></text></g><g><title>__ctype_init (1 samples, 0.11%)</title><rect x="68.7571%" y="661" width="0.1140%" height="15" fill="rgb(227,98,0)" fg:x="603" fg:w="1"/><text x="69.0071%" y="671.50"></text></g><g><title>__libc_calloc (3 samples, 0.34%)</title><rect x="68.8712%" y="661" width="0.3421%" height="15" fill="rgb(207,7,3)" fg:x="604" fg:w="3"/><text x="69.1212%" y="671.50"></text></g><g><title>__poll (2 samples, 0.23%)</title><rect x="69.2132%" y="661" width="0.2281%" height="15" fill="rgb(206,98,19)" fg:x="607" fg:w="2"/><text x="69.4632%" y="671.50"></text></g><g><title>__poll_chk (1 samples, 0.11%)</title><rect x="69.4413%" y="661" width="0.1140%" height="15" fill="rgb(217,5,26)" fg:x="609" fg:w="1"/><text x="69.6913%" y="671.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.11%)</title><rect x="69.5553%" y="661" width="0.1140%" height="15" fill="rgb(235,190,38)" fg:x="610" fg:w="1"/><text x="69.8053%" y="671.50"></text></g><g><title>clock_gettime (2 samples, 0.23%)</title><rect x="69.6693%" y="661" width="0.2281%" height="15" fill="rgb(247,86,24)" fg:x="611" fg:w="2"/><text x="69.9193%" y="671.50"></text></g><g><title>pa_context_get_state (1 samples, 0.11%)</title><rect x="69.8974%" y="661" width="0.1140%" height="15" fill="rgb(205,101,16)" fg:x="613" fg:w="1"/><text x="70.1474%" y="671.50"></text></g><g><title>pa_context_unref (1 samples, 0.11%)</title><rect x="70.0114%" y="661" width="0.1140%" height="15" fill="rgb(246,168,33)" fg:x="614" fg:w="1"/><text x="70.2614%" y="671.50"></text></g><g><title>pa_flist_pop (1 samples, 0.11%)</title><rect x="70.1254%" y="661" width="0.1140%" height="15" fill="rgb(231,114,1)" fg:x="615" fg:w="1"/><text x="70.3754%" y="671.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.11%)</title><rect x="70.2395%" y="661" width="0.1140%" height="15" fill="rgb(207,184,53)" fg:x="616" fg:w="1"/><text x="70.4895%" y="671.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (1 samples, 0.11%)</title><rect x="70.3535%" y="661" width="0.1140%" height="15" fill="rgb(224,95,51)" fg:x="617" fg:w="1"/><text x="70.6035%" y="671.50"></text></g><g><title>pa_iochannel_write (1 samples, 0.11%)</title><rect x="70.4675%" y="661" width="0.1140%" height="15" fill="rgb(212,188,45)" fg:x="618" fg:w="1"/><text x="70.7175%" y="671.50"></text></g><g><title>pa_mainloop_prepare (2 samples, 0.23%)</title><rect x="70.5815%" y="661" width="0.2281%" height="15" fill="rgb(223,154,38)" fg:x="619" fg:w="2"/><text x="70.8315%" y="671.50"></text></g><g><title>pa_mainloop_wakeup (1 samples, 0.11%)</title><rect x="70.8096%" y="661" width="0.1140%" height="15" fill="rgb(251,22,52)" fg:x="621" fg:w="1"/><text x="71.0596%" y="671.50"></text></g><g><title>pa_once_begin (1 samples, 0.11%)</title><rect x="70.9236%" y="661" width="0.1140%" height="15" fill="rgb(229,209,22)" fg:x="622" fg:w="1"/><text x="71.1736%" y="671.50"></text></g><g><title>pa_packet_new (1 samples, 0.11%)</title><rect x="71.0376%" y="661" width="0.1140%" height="15" fill="rgb(234,138,34)" fg:x="623" fg:w="1"/><text x="71.2876%" y="671.50"></text></g><g><title>pa_pdispatch_run (1 samples, 0.11%)</title><rect x="71.1517%" y="661" width="0.1140%" height="15" fill="rgb(212,95,11)" fg:x="624" fg:w="1"/><text x="71.4017%" y="671.50"></text></g><g><title>pa_pstream_unref (2 samples, 0.23%)</title><rect x="71.2657%" y="661" width="0.2281%" height="15" fill="rgb(240,179,47)" fg:x="625" fg:w="2"/><text x="71.5157%" y="671.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="71.4937%" y="661" width="0.1140%" height="15" fill="rgb(240,163,11)" fg:x="627" fg:w="1"/><text x="71.7437%" y="671.50"></text></g><g><title>pa_rtclock_get (3 samples, 0.34%)</title><rect x="71.6078%" y="661" width="0.3421%" height="15" fill="rgb(236,37,12)" fg:x="628" fg:w="3"/><text x="71.8578%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="71.8358%" y="645" width="0.1140%" height="15" fill="rgb(232,164,16)" fg:x="630" fg:w="1"/><text x="72.0858%" y="655.50"></text></g><g><title>pa_rtclock_now (2 samples, 0.23%)</title><rect x="71.9498%" y="661" width="0.2281%" height="15" fill="rgb(244,205,15)" fg:x="631" fg:w="2"/><text x="72.1998%" y="671.50"></text></g><g><title>pa_stream_ref (1 samples, 0.11%)</title><rect x="72.1779%" y="661" width="0.1140%" height="15" fill="rgb(223,117,47)" fg:x="633" fg:w="1"/><text x="72.4279%" y="671.50"></text></g><g><title>pa_tagstruct_free (1 samples, 0.11%)</title><rect x="72.2919%" y="661" width="0.1140%" height="15" fill="rgb(244,107,35)" fg:x="634" fg:w="1"/><text x="72.5419%" y="671.50"></text></g><g><title>pthread_mutex_lock (4 samples, 0.46%)</title><rect x="72.4059%" y="661" width="0.4561%" height="15" fill="rgb(205,140,8)" fg:x="635" fg:w="4"/><text x="72.6559%" y="671.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="72.8620%" y="661" width="0.1140%" height="15" fill="rgb(228,84,46)" fg:x="639" fg:w="1"/><text x="73.1120%" y="671.50"></text></g><g><title>pulse_check_connection (1 samples, 0.11%)</title><rect x="72.9761%" y="661" width="0.1140%" height="15" fill="rgb(254,188,9)" fg:x="640" fg:w="1"/><text x="73.2261%" y="671.50"></text></g><g><title>pulse_poll_activate (1 samples, 0.11%)</title><rect x="73.0901%" y="661" width="0.1140%" height="15" fill="rgb(206,112,54)" fg:x="641" fg:w="1"/><text x="73.3401%" y="671.50"></text></g><g><title>recvmsg (2 samples, 0.23%)</title><rect x="73.2041%" y="661" width="0.2281%" height="15" fill="rgb(216,84,49)" fg:x="642" fg:w="2"/><text x="73.4541%" y="671.50"></text></g><g><title>[anon] (94 samples, 10.72%)</title><rect x="62.8278%" y="677" width="10.7184%" height="15" fill="rgb(214,194,35)" fg:x="551" fg:w="94"/><text x="63.0778%" y="687.50">[anon]</text></g><g><title>write (1 samples, 0.11%)</title><rect x="73.4322%" y="661" width="0.1140%" height="15" fill="rgb(249,28,3)" fg:x="644" fg:w="1"/><text x="73.6822%" y="671.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="73.5462%" y="677" width="0.1140%" height="15" fill="rgb(222,56,52)" fg:x="645" fg:w="1"/><text x="73.7962%" y="687.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="73.5462%" y="661" width="0.1140%" height="15" fill="rgb(245,217,50)" fg:x="645" fg:w="1"/><text x="73.7962%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="73.6602%" y="613" width="0.1140%" height="15" fill="rgb(213,201,24)" fg:x="646" fg:w="1"/><text x="73.9102%" y="623.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (1 samples, 0.11%)</title><rect x="73.6602%" y="597" width="0.1140%" height="15" fill="rgb(248,116,28)" fg:x="646" fg:w="1"/><text x="73.9102%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="73.6602%" y="581" width="0.1140%" height="15" fill="rgb(219,72,43)" fg:x="646" fg:w="1"/><text x="73.9102%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="73.6602%" y="565" width="0.1140%" height="15" fill="rgb(209,138,14)" fg:x="646" fg:w="1"/><text x="73.9102%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="73.6602%" y="549" width="0.1140%" height="15" fill="rgb(222,18,33)" fg:x="646" fg:w="1"/><text x="73.9102%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.11%)</title><rect x="73.6602%" y="533" width="0.1140%" height="15" fill="rgb(213,199,7)" fg:x="646" fg:w="1"/><text x="73.9102%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="73.6602%" y="517" width="0.1140%" height="15" fill="rgb(250,110,10)" fg:x="646" fg:w="1"/><text x="73.9102%" y="527.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="73.7742%" y="613" width="0.1140%" height="15" fill="rgb(248,123,6)" fg:x="647" fg:w="1"/><text x="74.0242%" y="623.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="73.8883%" y="597" width="0.1140%" height="15" fill="rgb(206,91,31)" fg:x="648" fg:w="1"/><text x="74.1383%" y="607.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="74.0023%" y="581" width="0.1140%" height="15" fill="rgb(211,154,13)" fg:x="649" fg:w="1"/><text x="74.2523%" y="591.50"></text></g><g><title>__poll_chk (1 samples, 0.11%)</title><rect x="74.1163%" y="581" width="0.1140%" height="15" fill="rgb(225,148,7)" fg:x="650" fg:w="1"/><text x="74.3663%" y="591.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="74.2303%" y="517" width="0.1140%" height="15" fill="rgb(220,160,43)" fg:x="651" fg:w="1"/><text x="74.4803%" y="527.50"></text></g><g><title>pa_pstream_send_packet (1 samples, 0.11%)</title><rect x="74.2303%" y="501" width="0.1140%" height="15" fill="rgb(213,52,39)" fg:x="651" fg:w="1"/><text x="74.4803%" y="511.50"></text></g><g><title>pa_flist_pop (1 samples, 0.11%)</title><rect x="74.2303%" y="485" width="0.1140%" height="15" fill="rgb(243,137,7)" fg:x="651" fg:w="1"/><text x="74.4803%" y="495.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="74.2303%" y="469" width="0.1140%" height="15" fill="rgb(230,79,13)" fg:x="651" fg:w="1"/><text x="74.4803%" y="479.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="74.2303%" y="565" width="0.2281%" height="15" fill="rgb(247,105,23)" fg:x="651" fg:w="2"/><text x="74.4803%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="74.2303%" y="549" width="0.2281%" height="15" fill="rgb(223,179,41)" fg:x="651" fg:w="2"/><text x="74.4803%" y="559.50"></text></g><g><title>pa_stream_update_timing_info (2 samples, 0.23%)</title><rect x="74.2303%" y="533" width="0.2281%" height="15" fill="rgb(218,9,34)" fg:x="651" fg:w="2"/><text x="74.4803%" y="543.50"></text></g><g><title>pa_pdispatch_register_reply (1 samples, 0.11%)</title><rect x="74.3444%" y="517" width="0.1140%" height="15" fill="rgb(222,106,8)" fg:x="652" fg:w="1"/><text x="74.5944%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="74.3444%" y="501" width="0.1140%" height="15" fill="rgb(211,220,0)" fg:x="652" fg:w="1"/><text x="74.5944%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="74.3444%" y="485" width="0.1140%" height="15" fill="rgb(229,52,16)" fg:x="652" fg:w="1"/><text x="74.5944%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="74.9145%" y="517" width="0.1140%" height="15" fill="rgb(212,155,18)" fg:x="657" fg:w="1"/><text x="75.1645%" y="527.50"></text></g><g><title>pa_memblock_acquire (1 samples, 0.11%)</title><rect x="75.0285%" y="517" width="0.1140%" height="15" fill="rgb(242,21,14)" fg:x="658" fg:w="1"/><text x="75.2785%" y="527.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="75.1425%" y="453" width="0.1140%" height="15" fill="rgb(222,19,48)" fg:x="659" fg:w="1"/><text x="75.3925%" y="463.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.23%)</title><rect x="75.2566%" y="453" width="0.2281%" height="15" fill="rgb(232,45,27)" fg:x="660" fg:w="2"/><text x="75.5066%" y="463.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (4 samples, 0.46%)</title><rect x="75.1425%" y="469" width="0.4561%" height="15" fill="rgb(249,103,42)" fg:x="659" fg:w="4"/><text x="75.3925%" y="479.50"></text></g><g><title>pa_stream_writable_size (1 samples, 0.11%)</title><rect x="75.4846%" y="453" width="0.1140%" height="15" fill="rgb(246,81,33)" fg:x="662" fg:w="1"/><text x="75.7346%" y="463.50"></text></g><g><title>pa_detect_fork (1 samples, 0.11%)</title><rect x="75.4846%" y="437" width="0.1140%" height="15" fill="rgb(252,33,42)" fg:x="662" fg:w="1"/><text x="75.7346%" y="447.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.11%)</title><rect x="75.4846%" y="421" width="0.1140%" height="15" fill="rgb(209,212,41)" fg:x="662" fg:w="1"/><text x="75.7346%" y="431.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="75.5986%" y="469" width="0.1140%" height="15" fill="rgb(207,154,6)" fg:x="663" fg:w="1"/><text x="75.8486%" y="479.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.68%)</title><rect x="75.1425%" y="485" width="0.6842%" height="15" fill="rgb(223,64,47)" fg:x="659" fg:w="6"/><text x="75.3925%" y="495.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="75.7127%" y="469" width="0.1140%" height="15" fill="rgb(211,161,38)" fg:x="664" fg:w="1"/><text x="75.9627%" y="479.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="75.8267%" y="485" width="0.1140%" height="15" fill="rgb(219,138,40)" fg:x="665" fg:w="1"/><text x="76.0767%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (8 samples, 0.91%)</title><rect x="75.1425%" y="501" width="0.9122%" height="15" fill="rgb(241,228,46)" fg:x="659" fg:w="8"/><text x="75.3925%" y="511.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="75.9407%" y="485" width="0.1140%" height="15" fill="rgb(223,209,38)" fg:x="666" fg:w="1"/><text x="76.1907%" y="495.50"></text></g><g><title>pa_tagstruct_free (1 samples, 0.11%)</title><rect x="76.0547%" y="501" width="0.1140%" height="15" fill="rgb(236,164,45)" fg:x="667" fg:w="1"/><text x="76.3047%" y="511.50"></text></g><g><title>pa_flist_push (1 samples, 0.11%)</title><rect x="76.0547%" y="485" width="0.1140%" height="15" fill="rgb(231,15,5)" fg:x="667" fg:w="1"/><text x="76.3047%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="76.0547%" y="469" width="0.1140%" height="15" fill="rgb(252,35,15)" fg:x="667" fg:w="1"/><text x="76.3047%" y="479.50"></text></g><g><title>pa_flist_pop (1 samples, 0.11%)</title><rect x="76.1688%" y="485" width="0.1140%" height="15" fill="rgb(248,181,18)" fg:x="668" fg:w="1"/><text x="76.4188%" y="495.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="76.1688%" y="469" width="0.1140%" height="15" fill="rgb(233,39,42)" fg:x="668" fg:w="1"/><text x="76.4188%" y="479.50"></text></g><g><title>[libpulse.so.0.24.1] (15 samples, 1.71%)</title><rect x="74.6864%" y="533" width="1.7104%" height="15" fill="rgb(238,110,33)" fg:x="655" fg:w="15"/><text x="74.9364%" y="543.50"></text></g><g><title>pa_pdispatch_run (11 samples, 1.25%)</title><rect x="75.1425%" y="517" width="1.2543%" height="15" fill="rgb(233,195,10)" fg:x="659" fg:w="11"/><text x="75.3925%" y="527.50"></text></g><g><title>pa_tagstruct_new_fixed (2 samples, 0.23%)</title><rect x="76.1688%" y="501" width="0.2281%" height="15" fill="rgb(254,105,3)" fg:x="668" fg:w="2"/><text x="76.4188%" y="511.50"></text></g><g><title>pa_run_once (1 samples, 0.11%)</title><rect x="76.2828%" y="485" width="0.1140%" height="15" fill="rgb(221,225,9)" fg:x="669" fg:w="1"/><text x="76.5328%" y="495.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="76.2828%" y="469" width="0.1140%" height="15" fill="rgb(224,227,45)" fg:x="669" fg:w="1"/><text x="76.5328%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="76.6249%" y="501" width="0.1140%" height="15" fill="rgb(229,198,43)" fg:x="672" fg:w="1"/><text x="76.8749%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (4 samples, 0.46%)</title><rect x="76.3968%" y="533" width="0.4561%" height="15" fill="rgb(206,209,35)" fg:x="670" fg:w="4"/><text x="76.6468%" y="543.50"></text></g><g><title>pa_flist_push (2 samples, 0.23%)</title><rect x="76.6249%" y="517" width="0.2281%" height="15" fill="rgb(245,195,53)" fg:x="672" fg:w="2"/><text x="76.8749%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="76.7389%" y="501" width="0.1140%" height="15" fill="rgb(240,92,26)" fg:x="673" fg:w="1"/><text x="76.9889%" y="511.50"></text></g><g><title>cfree (1 samples, 0.11%)</title><rect x="76.8529%" y="533" width="0.1140%" height="15" fill="rgb(207,40,23)" fg:x="674" fg:w="1"/><text x="77.1029%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="76.9669%" y="517" width="0.1140%" height="15" fill="rgb(223,111,35)" fg:x="675" fg:w="1"/><text x="77.2169%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.23%)</title><rect x="77.0810%" y="517" width="0.2281%" height="15" fill="rgb(229,147,28)" fg:x="676" fg:w="2"/><text x="77.3310%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="77.0810%" y="501" width="0.2281%" height="15" fill="rgb(211,29,28)" fg:x="676" fg:w="2"/><text x="77.3310%" y="511.50"></text></g><g><title>pa_xmalloc0 (2 samples, 0.23%)</title><rect x="77.0810%" y="485" width="0.2281%" height="15" fill="rgb(228,72,33)" fg:x="676" fg:w="2"/><text x="77.3310%" y="495.50"></text></g><g><title>__libc_calloc (2 samples, 0.23%)</title><rect x="77.0810%" y="469" width="0.2281%" height="15" fill="rgb(205,214,31)" fg:x="676" fg:w="2"/><text x="77.3310%" y="479.50"></text></g><g><title>pa_flist_push (1 samples, 0.11%)</title><rect x="77.3090%" y="517" width="0.1140%" height="15" fill="rgb(224,111,15)" fg:x="678" fg:w="1"/><text x="77.5590%" y="527.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (5 samples, 0.57%)</title><rect x="76.9669%" y="533" width="0.5701%" height="15" fill="rgb(253,21,26)" fg:x="675" fg:w="5"/><text x="77.2169%" y="543.50"></text></g><g><title>recvmsg (1 samples, 0.11%)</title><rect x="77.4230%" y="517" width="0.1140%" height="15" fill="rgb(245,139,43)" fg:x="679" fg:w="1"/><text x="77.6730%" y="527.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="77.4230%" y="501" width="0.1140%" height="15" fill="rgb(252,170,7)" fg:x="679" fg:w="1"/><text x="77.6730%" y="511.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="77.5371%" y="501" width="0.1140%" height="15" fill="rgb(231,118,14)" fg:x="680" fg:w="1"/><text x="77.7871%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="77.6511%" y="501" width="0.1140%" height="15" fill="rgb(238,83,0)" fg:x="681" fg:w="1"/><text x="77.9011%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="77.7651%" y="485" width="0.1140%" height="15" fill="rgb(221,39,39)" fg:x="682" fg:w="1"/><text x="78.0151%" y="495.50"></text></g><g><title>pa_iochannel_write (4 samples, 0.46%)</title><rect x="77.5371%" y="533" width="0.4561%" height="15" fill="rgb(222,119,46)" fg:x="680" fg:w="4"/><text x="77.7871%" y="543.50"></text></g><g><title>pa_write (4 samples, 0.46%)</title><rect x="77.5371%" y="517" width="0.4561%" height="15" fill="rgb(222,165,49)" fg:x="680" fg:w="4"/><text x="77.7871%" y="527.50"></text></g><g><title>__send (2 samples, 0.23%)</title><rect x="77.7651%" y="501" width="0.2281%" height="15" fill="rgb(219,113,52)" fg:x="682" fg:w="2"/><text x="78.0151%" y="511.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="77.8791%" y="485" width="0.1140%" height="15" fill="rgb(214,7,15)" fg:x="683" fg:w="1"/><text x="78.1291%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="77.9932%" y="517" width="0.1140%" height="15" fill="rgb(235,32,4)" fg:x="684" fg:w="1"/><text x="78.2432%" y="527.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="78.1072%" y="501" width="0.1140%" height="15" fill="rgb(238,90,54)" fg:x="685" fg:w="1"/><text x="78.3572%" y="511.50"></text></g><g><title>pa_mainloop_wakeup (3 samples, 0.34%)</title><rect x="77.9932%" y="533" width="0.3421%" height="15" fill="rgb(213,208,19)" fg:x="684" fg:w="3"/><text x="78.2432%" y="543.50"></text></g><g><title>pa_write (2 samples, 0.23%)</title><rect x="78.1072%" y="517" width="0.2281%" height="15" fill="rgb(233,156,4)" fg:x="685" fg:w="2"/><text x="78.3572%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="78.2212%" y="501" width="0.1140%" height="15" fill="rgb(207,194,5)" fg:x="686" fg:w="1"/><text x="78.4712%" y="511.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="78.2212%" y="485" width="0.1140%" height="15" fill="rgb(206,111,30)" fg:x="686" fg:w="1"/><text x="78.4712%" y="495.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.11%)</title><rect x="78.3352%" y="533" width="0.1140%" height="15" fill="rgb(243,70,54)" fg:x="687" fg:w="1"/><text x="78.5852%" y="543.50"></text></g><g><title>pa_flist_push (1 samples, 0.11%)</title><rect x="78.3352%" y="517" width="0.1140%" height="15" fill="rgb(242,28,8)" fg:x="687" fg:w="1"/><text x="78.5852%" y="527.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="78.3352%" y="501" width="0.1140%" height="15" fill="rgb(219,106,18)" fg:x="687" fg:w="1"/><text x="78.5852%" y="511.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="78.4493%" y="517" width="0.1140%" height="15" fill="rgb(244,222,10)" fg:x="688" fg:w="1"/><text x="78.6993%" y="527.50"></text></g><g><title>__send (1 samples, 0.11%)</title><rect x="78.5633%" y="517" width="0.1140%" height="15" fill="rgb(236,179,52)" fg:x="689" fg:w="1"/><text x="78.8133%" y="527.50"></text></g><g><title>pa_packet_new (3 samples, 0.34%)</title><rect x="78.4493%" y="533" width="0.3421%" height="15" fill="rgb(213,23,39)" fg:x="688" fg:w="3"/><text x="78.6993%" y="543.50"></text></g><g><title>pa_flist_pop (1 samples, 0.11%)</title><rect x="78.6773%" y="517" width="0.1140%" height="15" fill="rgb(238,48,10)" fg:x="690" fg:w="1"/><text x="78.9273%" y="527.50"></text></g><g><title>pa_stream_get_state (1 samples, 0.11%)</title><rect x="78.6773%" y="501" width="0.1140%" height="15" fill="rgb(251,196,23)" fg:x="690" fg:w="1"/><text x="78.9273%" y="511.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="78.7913%" y="533" width="0.1140%" height="15" fill="rgb(250,152,24)" fg:x="691" fg:w="1"/><text x="79.0413%" y="543.50"></text></g><g><title>pa_flist_push (1 samples, 0.11%)</title><rect x="78.7913%" y="517" width="0.1140%" height="15" fill="rgb(209,150,17)" fg:x="691" fg:w="1"/><text x="79.0413%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="78.7913%" y="501" width="0.1140%" height="15" fill="rgb(234,202,34)" fg:x="691" fg:w="1"/><text x="79.0413%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (40 samples, 4.56%)</title><rect x="74.4584%" y="549" width="4.5610%" height="15" fill="rgb(253,148,53)" fg:x="653" fg:w="40"/><text x="74.7084%" y="559.50">[libp..</text></g><g><title>read (1 samples, 0.11%)</title><rect x="78.9054%" y="533" width="0.1140%" height="15" fill="rgb(218,129,16)" fg:x="692" fg:w="1"/><text x="79.1554%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (41 samples, 4.68%)</title><rect x="74.4584%" y="565" width="4.6750%" height="15" fill="rgb(216,85,19)" fg:x="653" fg:w="41"/><text x="74.7084%" y="575.50">[libp..</text></g><g><title>pa_run_once (1 samples, 0.11%)</title><rect x="79.0194%" y="549" width="0.1140%" height="15" fill="rgb(235,228,7)" fg:x="693" fg:w="1"/><text x="79.2694%" y="559.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="79.1334%" y="565" width="0.1140%" height="15" fill="rgb(245,175,0)" fg:x="694" fg:w="1"/><text x="79.3834%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="79.3615%" y="549" width="0.1140%" height="15" fill="rgb(208,168,36)" fg:x="696" fg:w="1"/><text x="79.6115%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="79.4755%" y="549" width="0.1140%" height="15" fill="rgb(246,171,24)" fg:x="697" fg:w="1"/><text x="79.7255%" y="559.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.11%)</title><rect x="79.5895%" y="549" width="0.1140%" height="15" fill="rgb(215,142,24)" fg:x="698" fg:w="1"/><text x="79.8395%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="79.5895%" y="533" width="0.1140%" height="15" fill="rgb(250,187,7)" fg:x="698" fg:w="1"/><text x="79.8395%" y="543.50"></text></g><g><title>pa_rtclock_now (5 samples, 0.57%)</title><rect x="79.2474%" y="565" width="0.5701%" height="15" fill="rgb(228,66,33)" fg:x="695" fg:w="5"/><text x="79.4974%" y="575.50"></text></g><g><title>write (1 samples, 0.11%)</title><rect x="79.7035%" y="549" width="0.1140%" height="15" fill="rgb(234,215,21)" fg:x="699" fg:w="1"/><text x="79.9535%" y="559.50"></text></g><g><title>pa_mainloop_dispatch (50 samples, 5.70%)</title><rect x="74.2303%" y="581" width="5.7013%" height="15" fill="rgb(222,191,20)" fg:x="651" fg:w="50"/><text x="74.4803%" y="591.50">pa_main..</text></g><g><title>pthread_cond_broadcast (1 samples, 0.11%)</title><rect x="79.8176%" y="565" width="0.1140%" height="15" fill="rgb(245,79,54)" fg:x="700" fg:w="1"/><text x="80.0676%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="79.9316%" y="565" width="0.1140%" height="15" fill="rgb(240,10,37)" fg:x="701" fg:w="1"/><text x="80.1816%" y="575.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="80.0456%" y="549" width="0.1140%" height="15" fill="rgb(214,192,32)" fg:x="702" fg:w="1"/><text x="80.2956%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="80.1596%" y="549" width="0.1140%" height="15" fill="rgb(209,36,54)" fg:x="703" fg:w="1"/><text x="80.4096%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="80.2737%" y="549" width="0.2281%" height="15" fill="rgb(220,10,11)" fg:x="704" fg:w="2"/><text x="80.5237%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="80.9578%" y="533" width="0.1140%" height="15" fill="rgb(221,106,17)" fg:x="710" fg:w="1"/><text x="81.2078%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="81.0718%" y="533" width="0.1140%" height="15" fill="rgb(251,142,44)" fg:x="711" fg:w="1"/><text x="81.3218%" y="543.50"></text></g><g><title>read (1 samples, 0.11%)</title><rect x="81.1859%" y="533" width="0.1140%" height="15" fill="rgb(238,13,15)" fg:x="712" fg:w="1"/><text x="81.4359%" y="543.50"></text></g><g><title>__poll (8 samples, 0.91%)</title><rect x="80.5017%" y="549" width="0.9122%" height="15" fill="rgb(208,107,27)" fg:x="706" fg:w="8"/><text x="80.7517%" y="559.50"></text></g><g><title>write (1 samples, 0.11%)</title><rect x="81.2999%" y="533" width="0.1140%" height="15" fill="rgb(205,136,37)" fg:x="713" fg:w="1"/><text x="81.5499%" y="543.50"></text></g><g><title>__send (1 samples, 0.11%)</title><rect x="81.4139%" y="549" width="0.1140%" height="15" fill="rgb(250,205,27)" fg:x="714" fg:w="1"/><text x="81.6639%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="81.5279%" y="533" width="0.1140%" height="15" fill="rgb(210,80,43)" fg:x="715" fg:w="1"/><text x="81.7779%" y="543.50"></text></g><g><title>[libc.so.6] (3 samples, 0.34%)</title><rect x="81.6420%" y="533" width="0.3421%" height="15" fill="rgb(247,160,36)" fg:x="716" fg:w="3"/><text x="81.8920%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="81.9840%" y="533" width="0.2281%" height="15" fill="rgb(234,13,49)" fg:x="719" fg:w="2"/><text x="82.2340%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="82.2121%" y="533" width="0.1140%" height="15" fill="rgb(234,122,0)" fg:x="721" fg:w="1"/><text x="82.4621%" y="543.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="82.3261%" y="533" width="0.1140%" height="15" fill="rgb(207,146,38)" fg:x="722" fg:w="1"/><text x="82.5761%" y="543.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="82.4401%" y="533" width="0.1140%" height="15" fill="rgb(207,177,25)" fg:x="723" fg:w="1"/><text x="82.6901%" y="543.50"></text></g><g><title>pa_mutex_lock (10 samples, 1.14%)</title><rect x="81.5279%" y="549" width="1.1403%" height="15" fill="rgb(211,178,42)" fg:x="715" fg:w="10"/><text x="81.7779%" y="559.50"></text></g><g><title>read (1 samples, 0.11%)</title><rect x="82.5542%" y="533" width="0.1140%" height="15" fill="rgb(230,69,54)" fg:x="724" fg:w="1"/><text x="82.8042%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="82.6682%" y="533" width="0.1140%" height="15" fill="rgb(214,135,41)" fg:x="725" fg:w="1"/><text x="82.9182%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="82.7822%" y="533" width="0.1140%" height="15" fill="rgb(237,67,25)" fg:x="726" fg:w="1"/><text x="83.0322%" y="543.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="82.8962%" y="533" width="0.1140%" height="15" fill="rgb(222,189,50)" fg:x="727" fg:w="1"/><text x="83.1462%" y="543.50"></text></g><g><title>pa_rtclock_now (2 samples, 0.23%)</title><rect x="83.0103%" y="533" width="0.2281%" height="15" fill="rgb(245,148,34)" fg:x="728" fg:w="2"/><text x="83.2603%" y="543.50"></text></g><g><title>pa_mutex_unlock (7 samples, 0.80%)</title><rect x="82.6682%" y="549" width="0.7982%" height="15" fill="rgb(222,29,6)" fg:x="725" fg:w="7"/><text x="82.9182%" y="559.50"></text></g><g><title>read (2 samples, 0.23%)</title><rect x="83.2383%" y="533" width="0.2281%" height="15" fill="rgb(221,189,43)" fg:x="730" fg:w="2"/><text x="83.4883%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (31 samples, 3.53%)</title><rect x="80.0456%" y="565" width="3.5348%" height="15" fill="rgb(207,36,27)" fg:x="702" fg:w="31"/><text x="80.2956%" y="575.50">[li..</text></g><g><title>pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="83.4664%" y="549" width="0.1140%" height="15" fill="rgb(217,90,24)" fg:x="732" fg:w="1"/><text x="83.7164%" y="559.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="83.5804%" y="565" width="0.1140%" height="15" fill="rgb(224,66,35)" fg:x="733" fg:w="1"/><text x="83.8304%" y="575.50"></text></g><g><title>pa_mainloop_poll (34 samples, 3.88%)</title><rect x="79.9316%" y="581" width="3.8769%" height="15" fill="rgb(221,13,50)" fg:x="701" fg:w="34"/><text x="80.1816%" y="591.50">pa_m..</text></g><g><title>pa_mainloop_prepare (1 samples, 0.11%)</title><rect x="83.6944%" y="565" width="0.1140%" height="15" fill="rgb(236,68,49)" fg:x="734" fg:w="1"/><text x="83.9444%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="83.8084%" y="565" width="0.2281%" height="15" fill="rgb(229,146,28)" fg:x="735" fg:w="2"/><text x="84.0584%" y="575.50"></text></g><g><title>pa_once_begin (1 samples, 0.11%)</title><rect x="84.0365%" y="565" width="0.1140%" height="15" fill="rgb(225,31,38)" fg:x="737" fg:w="1"/><text x="84.2865%" y="575.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="84.1505%" y="533" width="0.1140%" height="15" fill="rgb(250,208,3)" fg:x="738" fg:w="1"/><text x="84.4005%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="84.2645%" y="533" width="0.1140%" height="15" fill="rgb(246,54,23)" fg:x="739" fg:w="1"/><text x="84.5145%" y="543.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="84.3786%" y="517" width="0.1140%" height="15" fill="rgb(243,76,11)" fg:x="740" fg:w="1"/><text x="84.6286%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="84.3786%" y="501" width="0.1140%" height="15" fill="rgb(245,21,50)" fg:x="740" fg:w="1"/><text x="84.6286%" y="511.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="84.4926%" y="517" width="0.1140%" height="15" fill="rgb(228,9,43)" fg:x="741" fg:w="1"/><text x="84.7426%" y="527.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="84.6066%" y="517" width="0.1140%" height="15" fill="rgb(208,100,47)" fg:x="742" fg:w="1"/><text x="84.8566%" y="527.50"></text></g><g><title>clock_gettime (4 samples, 0.46%)</title><rect x="84.3786%" y="533" width="0.4561%" height="15" fill="rgb(232,26,8)" fg:x="740" fg:w="4"/><text x="84.6286%" y="543.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.11%)</title><rect x="84.7206%" y="517" width="0.1140%" height="15" fill="rgb(216,166,38)" fg:x="743" fg:w="1"/><text x="84.9706%" y="527.50"></text></g><g><title>pa_mainloop_prepare (10 samples, 1.14%)</title><rect x="83.8084%" y="581" width="1.1403%" height="15" fill="rgb(251,202,51)" fg:x="735" fg:w="10"/><text x="84.0584%" y="591.50"></text></g><g><title>pa_rtclock_now (7 samples, 0.80%)</title><rect x="84.1505%" y="565" width="0.7982%" height="15" fill="rgb(254,216,34)" fg:x="738" fg:w="7"/><text x="84.4005%" y="575.50"></text></g><g><title>pa_rtclock_get (7 samples, 0.80%)</title><rect x="84.1505%" y="549" width="0.7982%" height="15" fill="rgb(251,32,27)" fg:x="738" fg:w="7"/><text x="84.4005%" y="559.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.11%)</title><rect x="84.8347%" y="533" width="0.1140%" height="15" fill="rgb(208,127,28)" fg:x="744" fg:w="1"/><text x="85.0847%" y="543.50"></text></g><g><title>pa_mainloop_run (98 samples, 11.17%)</title><rect x="73.8883%" y="613" width="11.1745%" height="15" fill="rgb(224,137,22)" fg:x="648" fg:w="98"/><text x="74.1383%" y="623.50">pa_mainloop_run</text></g><g><title>pa_mainloop_iterate (97 samples, 11.06%)</title><rect x="74.0023%" y="597" width="11.0604%" height="15" fill="rgb(254,70,32)" fg:x="649" fg:w="97"/><text x="74.2523%" y="607.50">pa_mainloop_iter..</text></g><g><title>pa_tagstruct_getu32 (1 samples, 0.11%)</title><rect x="84.9487%" y="581" width="0.1140%" height="15" fill="rgb(229,75,37)" fg:x="745" fg:w="1"/><text x="85.1987%" y="591.50"></text></g><g><title>[libc.so.6] (101 samples, 11.52%)</title><rect x="73.6602%" y="661" width="11.5165%" height="15" fill="rgb(252,64,23)" fg:x="646" fg:w="101"/><text x="73.9102%" y="671.50">[libc.so.6]</text></g><g><title>[libpulsecommon-15.99.so] (101 samples, 11.52%)</title><rect x="73.6602%" y="645" width="11.5165%" height="15" fill="rgb(232,162,48)" fg:x="646" fg:w="101"/><text x="73.9102%" y="655.50">[libpulsecommon-1..</text></g><g><title>[libpulse.so.0.24.1] (101 samples, 11.52%)</title><rect x="73.6602%" y="629" width="11.5165%" height="15" fill="rgb(246,160,12)" fg:x="646" fg:w="101"/><text x="73.9102%" y="639.50">[libpulse.so.0.24..</text></g><g><title>pa_rtclock_get (1 samples, 0.11%)</title><rect x="85.0627%" y="613" width="0.1140%" height="15" fill="rgb(247,166,0)" fg:x="746" fg:w="1"/><text x="85.3127%" y="623.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="85.1767%" y="661" width="0.1140%" height="15" fill="rgb(249,219,21)" fg:x="747" fg:w="1"/><text x="85.4267%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="85.2908%" y="661" width="0.1140%" height="15" fill="rgb(205,209,3)" fg:x="748" fg:w="1"/><text x="85.5408%" y="671.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="85.4048%" y="661" width="0.1140%" height="15" fill="rgb(243,44,1)" fg:x="749" fg:w="1"/><text x="85.6548%" y="671.50"></text></g><g><title>pa_mainloop_prepare (1 samples, 0.11%)</title><rect x="85.5188%" y="661" width="0.1140%" height="15" fill="rgb(206,159,16)" fg:x="750" fg:w="1"/><text x="85.7688%" y="671.50"></text></g><g><title>[libc.so.6] (106 samples, 12.09%)</title><rect x="73.6602%" y="677" width="12.0867%" height="15" fill="rgb(244,77,30)" fg:x="646" fg:w="106"/><text x="73.9102%" y="687.50">[libc.so.6]</text></g><g><title>write (1 samples, 0.11%)</title><rect x="85.6328%" y="661" width="0.1140%" height="15" fill="rgb(218,69,12)" fg:x="751" fg:w="1"/><text x="85.8828%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="85.8609%" y="661" width="0.1140%" height="15" fill="rgb(212,87,7)" fg:x="753" fg:w="1"/><text x="86.1109%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="85.9749%" y="661" width="0.1140%" height="15" fill="rgb(245,114,25)" fg:x="754" fg:w="1"/><text x="86.2249%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="86.0889%" y="661" width="0.1140%" height="15" fill="rgb(210,61,42)" fg:x="755" fg:w="1"/><text x="86.3389%" y="671.50"></text></g><g><title>pa_memblock_release (1 samples, 0.11%)</title><rect x="86.2030%" y="661" width="0.1140%" height="15" fill="rgb(211,52,33)" fg:x="756" fg:w="1"/><text x="86.4530%" y="671.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.11%)</title><rect x="86.3170%" y="661" width="0.1140%" height="15" fill="rgb(234,58,33)" fg:x="757" fg:w="1"/><text x="86.5670%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (7 samples, 0.80%)</title><rect x="85.7469%" y="677" width="0.7982%" height="15" fill="rgb(220,115,36)" fg:x="752" fg:w="7"/><text x="85.9969%" y="687.50"></text></g><g><title>pa_tagstruct_free (1 samples, 0.11%)</title><rect x="86.4310%" y="661" width="0.1140%" height="15" fill="rgb(243,153,54)" fg:x="758" fg:w="1"/><text x="86.6810%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="86.6591%" y="597" width="0.1140%" height="15" fill="rgb(251,47,18)" fg:x="760" fg:w="1"/><text x="86.9091%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.11%)</title><rect x="86.6591%" y="581" width="0.1140%" height="15" fill="rgb(242,102,42)" fg:x="760" fg:w="1"/><text x="86.9091%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="86.6591%" y="565" width="0.1140%" height="15" fill="rgb(234,31,38)" fg:x="760" fg:w="1"/><text x="86.9091%" y="575.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (3 samples, 0.34%)</title><rect x="86.6591%" y="661" width="0.3421%" height="15" fill="rgb(221,117,51)" fg:x="760" fg:w="3"/><text x="86.9091%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (3 samples, 0.34%)</title><rect x="86.6591%" y="645" width="0.3421%" height="15" fill="rgb(212,20,18)" fg:x="760" fg:w="3"/><text x="86.9091%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.34%)</title><rect x="86.6591%" y="629" width="0.3421%" height="15" fill="rgb(245,133,36)" fg:x="760" fg:w="3"/><text x="86.9091%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.34%)</title><rect x="86.6591%" y="613" width="0.3421%" height="15" fill="rgb(212,6,19)" fg:x="760" fg:w="3"/><text x="86.9091%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.23%)</title><rect x="86.7731%" y="597" width="0.2281%" height="15" fill="rgb(218,1,36)" fg:x="761" fg:w="2"/><text x="87.0231%" y="607.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (2 samples, 0.23%)</title><rect x="86.7731%" y="581" width="0.2281%" height="15" fill="rgb(246,84,54)" fg:x="761" fg:w="2"/><text x="87.0231%" y="591.50"></text></g><g><title>[[vdso]] (6 samples, 0.68%)</title><rect x="87.0011%" y="661" width="0.6842%" height="15" fill="rgb(242,110,6)" fg:x="763" fg:w="6"/><text x="87.2511%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="87.5713%" y="645" width="0.1140%" height="15" fill="rgb(214,47,5)" fg:x="768" fg:w="1"/><text x="87.8213%" y="655.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="87.6853%" y="661" width="0.1140%" height="15" fill="rgb(218,159,25)" fg:x="769" fg:w="1"/><text x="87.9353%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="90.1938%" y="645" width="0.1140%" height="15" fill="rgb(215,211,28)" fg:x="791" fg:w="1"/><text x="90.4438%" y="655.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.11%)</title><rect x="90.3079%" y="645" width="0.1140%" height="15" fill="rgb(238,59,32)" fg:x="792" fg:w="1"/><text x="90.5579%" y="655.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="90.4219%" y="645" width="0.1140%" height="15" fill="rgb(226,82,3)" fg:x="793" fg:w="1"/><text x="90.6719%" y="655.50"></text></g><g><title>[libc.so.6] (25 samples, 2.85%)</title><rect x="87.7993%" y="661" width="2.8506%" height="15" fill="rgb(240,164,32)" fg:x="770" fg:w="25"/><text x="88.0493%" y="671.50">[l..</text></g><g><title>pa_tagstruct_new_fixed (1 samples, 0.11%)</title><rect x="90.5359%" y="645" width="0.1140%" height="15" fill="rgb(232,46,7)" fg:x="794" fg:w="1"/><text x="90.7859%" y="655.50"></text></g><g><title>[libpulse.so.0.24.1] (13 samples, 1.48%)</title><rect x="90.6499%" y="661" width="1.4823%" height="15" fill="rgb(229,129,53)" fg:x="795" fg:w="13"/><text x="90.8999%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (5 samples, 0.57%)</title><rect x="92.1323%" y="661" width="0.5701%" height="15" fill="rgb(234,188,29)" fg:x="808" fg:w="5"/><text x="92.3823%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="92.5884%" y="645" width="0.1140%" height="15" fill="rgb(246,141,4)" fg:x="812" fg:w="1"/><text x="92.8384%" y="655.50"></text></g><g><title>__errno_location (1 samples, 0.11%)</title><rect x="92.7024%" y="661" width="0.1140%" height="15" fill="rgb(229,23,39)" fg:x="813" fg:w="1"/><text x="92.9524%" y="671.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="92.8164%" y="661" width="0.1140%" height="15" fill="rgb(206,12,3)" fg:x="814" fg:w="1"/><text x="93.0664%" y="671.50"></text></g><g><title>__poll (4 samples, 0.46%)</title><rect x="92.9304%" y="661" width="0.4561%" height="15" fill="rgb(252,226,20)" fg:x="815" fg:w="4"/><text x="93.1804%" y="671.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.23%)</title><rect x="93.3865%" y="661" width="0.2281%" height="15" fill="rgb(216,123,35)" fg:x="819" fg:w="2"/><text x="93.6365%" y="671.50"></text></g><g><title>alsa::poll::poll (1 samples, 0.11%)</title><rect x="93.6146%" y="661" width="0.1140%" height="15" fill="rgb(212,68,40)" fg:x="821" fg:w="1"/><text x="93.8646%" y="671.50"></text></g><g><title>pa_context_get_state (2 samples, 0.23%)</title><rect x="93.7286%" y="661" width="0.2281%" height="15" fill="rgb(254,125,32)" fg:x="822" fg:w="2"/><text x="93.9786%" y="671.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (2 samples, 0.23%)</title><rect x="93.9567%" y="661" width="0.2281%" height="15" fill="rgb(253,97,22)" fg:x="824" fg:w="2"/><text x="94.2067%" y="671.50"></text></g><g><title>pa_mainloop_dispatch (4 samples, 0.46%)</title><rect x="94.1847%" y="661" width="0.4561%" height="15" fill="rgb(241,101,14)" fg:x="826" fg:w="4"/><text x="94.4347%" y="671.50"></text></g><g><title>pa_mainloop_poll (1 samples, 0.11%)</title><rect x="94.6408%" y="661" width="0.1140%" height="15" fill="rgb(238,103,29)" fg:x="830" fg:w="1"/><text x="94.8908%" y="671.50"></text></g><g><title>pa_mainloop_prepare (4 samples, 0.46%)</title><rect x="94.7548%" y="661" width="0.4561%" height="15" fill="rgb(233,195,47)" fg:x="831" fg:w="4"/><text x="95.0048%" y="671.50"></text></g><g><title>pa_mainloop_run (2 samples, 0.23%)</title><rect x="95.2109%" y="661" width="0.2281%" height="15" fill="rgb(246,218,30)" fg:x="835" fg:w="2"/><text x="95.4609%" y="671.50"></text></g><g><title>pa_mainloop_wakeup (1 samples, 0.11%)</title><rect x="95.4390%" y="661" width="0.1140%" height="15" fill="rgb(219,145,47)" fg:x="837" fg:w="1"/><text x="95.6890%" y="671.50"></text></g><g><title>pa_packet_new (1 samples, 0.11%)</title><rect x="95.5530%" y="661" width="0.1140%" height="15" fill="rgb(243,12,26)" fg:x="838" fg:w="1"/><text x="95.8030%" y="671.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="95.6670%" y="661" width="0.1140%" height="15" fill="rgb(214,87,16)" fg:x="839" fg:w="1"/><text x="95.9170%" y="671.50"></text></g><g><title>pa_stream_get_state (1 samples, 0.11%)</title><rect x="95.7811%" y="661" width="0.1140%" height="15" fill="rgb(208,99,42)" fg:x="840" fg:w="1"/><text x="96.0311%" y="671.50"></text></g><g><title>pa_write (2 samples, 0.23%)</title><rect x="95.8951%" y="661" width="0.2281%" height="15" fill="rgb(253,99,2)" fg:x="841" fg:w="2"/><text x="96.1451%" y="671.50"></text></g><g><title>pulse_poll_activate (1 samples, 0.11%)</title><rect x="96.1231%" y="661" width="0.1140%" height="15" fill="rgb(220,168,23)" fg:x="843" fg:w="1"/><text x="96.3731%" y="671.50"></text></g><g><title>read (1 samples, 0.11%)</title><rect x="96.2372%" y="661" width="0.1140%" height="15" fill="rgb(242,38,24)" fg:x="844" fg:w="1"/><text x="96.4872%" y="671.50"></text></g><g><title>recvmsg (2 samples, 0.23%)</title><rect x="96.3512%" y="661" width="0.2281%" height="15" fill="rgb(225,182,9)" fg:x="845" fg:w="2"/><text x="96.6012%" y="671.50"></text></g><g><title>[unknown] (89 samples, 10.15%)</title><rect x="86.5450%" y="677" width="10.1482%" height="15" fill="rgb(243,178,37)" fg:x="759" fg:w="89"/><text x="86.7950%" y="687.50">[unknown]</text></g><g><title>write (1 samples, 0.11%)</title><rect x="96.5792%" y="661" width="0.1140%" height="15" fill="rgb(232,139,19)" fg:x="847" fg:w="1"/><text x="96.8292%" y="671.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="96.6933%" y="677" width="0.1140%" height="15" fill="rgb(225,201,24)" fg:x="848" fg:w="1"/><text x="96.9433%" y="687.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.11%)</title><rect x="96.8073%" y="677" width="0.1140%" height="15" fill="rgb(221,47,46)" fg:x="849" fg:w="1"/><text x="97.0573%" y="687.50"></text></g><g><title>pa_mainloop_poll (1 samples, 0.11%)</title><rect x="96.9213%" y="677" width="0.1140%" height="15" fill="rgb(249,23,13)" fg:x="850" fg:w="1"/><text x="97.1713%" y="687.50"></text></g><g><title>threaded-ml (336 samples, 38.31%)</title><rect x="58.8369%" y="693" width="38.3124%" height="15" fill="rgb(219,9,5)" fg:x="516" fg:w="336"/><text x="59.0869%" y="703.50">threaded-ml</text></g><g><title>pa_mutex_lock (1 samples, 0.11%)</title><rect x="97.0353%" y="677" width="0.1140%" height="15" fill="rgb(254,171,16)" fg:x="851" fg:w="1"/><text x="97.2853%" y="687.50"></text></g><g><title>[granular_synthesizer_cli] (1 samples, 0.11%)</title><rect x="97.1494%" y="677" width="0.1140%" height="15" fill="rgb(230,171,20)" fg:x="852" fg:w="1"/><text x="97.3994%" y="687.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="97.1494%" y="661" width="0.1140%" height="15" fill="rgb(210,71,41)" fg:x="852" fg:w="1"/><text x="97.3994%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.11%)</title><rect x="97.7195%" y="341" width="0.1140%" height="15" fill="rgb(206,173,20)" fg:x="857" fg:w="1"/><text x="97.9695%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="97.8335%" y="309" width="0.1140%" height="15" fill="rgb(233,88,34)" fg:x="858" fg:w="1"/><text x="98.0835%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="97.8335%" y="293" width="0.1140%" height="15" fill="rgb(223,209,46)" fg:x="858" fg:w="1"/><text x="98.0835%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.46%)</title><rect x="97.6055%" y="373" width="0.4561%" height="15" fill="rgb(250,43,18)" fg:x="856" fg:w="4"/><text x="97.8555%" y="383.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.46%)</title><rect x="97.6055%" y="357" width="0.4561%" height="15" fill="rgb(208,13,10)" fg:x="856" fg:w="4"/><text x="97.8555%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.23%)</title><rect x="97.8335%" y="341" width="0.2281%" height="15" fill="rgb(212,200,36)" fg:x="858" fg:w="2"/><text x="98.0835%" y="351.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.23%)</title><rect x="97.8335%" y="325" width="0.2281%" height="15" fill="rgb(225,90,30)" fg:x="858" fg:w="2"/><text x="98.0835%" y="335.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.11%)</title><rect x="97.9475%" y="309" width="0.1140%" height="15" fill="rgb(236,182,39)" fg:x="859" fg:w="1"/><text x="98.1975%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="97.9475%" y="293" width="0.1140%" height="15" fill="rgb(212,144,35)" fg:x="859" fg:w="1"/><text x="98.1975%" y="303.50"></text></g><g><title>[libc.so.6] (9 samples, 1.03%)</title><rect x="97.2634%" y="677" width="1.0262%" height="15" fill="rgb(228,63,44)" fg:x="853" fg:w="9"/><text x="97.5134%" y="687.50"></text></g><g><title>[libc.so.6] (8 samples, 0.91%)</title><rect x="97.3774%" y="661" width="0.9122%" height="15" fill="rgb(228,109,6)" fg:x="854" fg:w="8"/><text x="97.6274%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.91%)</title><rect x="97.3774%" y="645" width="0.9122%" height="15" fill="rgb(238,117,24)" fg:x="854" fg:w="8"/><text x="97.6274%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.91%)</title><rect x="97.3774%" y="629" width="0.9122%" height="15" fill="rgb(242,26,26)" fg:x="854" fg:w="8"/><text x="97.6274%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.91%)</title><rect x="97.3774%" y="613" width="0.9122%" height="15" fill="rgb(221,92,48)" fg:x="854" fg:w="8"/><text x="97.6274%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8 samples, 0.91%)</title><rect x="97.3774%" y="597" width="0.9122%" height="15" fill="rgb(209,209,32)" fg:x="854" fg:w="8"/><text x="97.6274%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (8 samples, 0.91%)</title><rect x="97.3774%" y="581" width="0.9122%" height="15" fill="rgb(221,70,22)" fg:x="854" fg:w="8"/><text x="97.6274%" y="591.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.91%)</title><rect x="97.3774%" y="565" width="0.9122%" height="15" fill="rgb(248,145,5)" fg:x="854" fg:w="8"/><text x="97.6274%" y="575.50"></text></g><g><title>std::panicking::try (8 samples, 0.91%)</title><rect x="97.3774%" y="549" width="0.9122%" height="15" fill="rgb(226,116,26)" fg:x="854" fg:w="8"/><text x="97.6274%" y="559.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.91%)</title><rect x="97.3774%" y="533" width="0.9122%" height="15" fill="rgb(244,5,17)" fg:x="854" fg:w="8"/><text x="97.6274%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.91%)</title><rect x="97.3774%" y="517" width="0.9122%" height="15" fill="rgb(252,159,33)" fg:x="854" fg:w="8"/><text x="97.6274%" y="527.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (8 samples, 0.91%)</title><rect x="97.3774%" y="501" width="0.9122%" height="15" fill="rgb(206,71,0)" fg:x="854" fg:w="8"/><text x="97.6274%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.91%)</title><rect x="97.3774%" y="485" width="0.9122%" height="15" fill="rgb(233,118,54)" fg:x="854" fg:w="8"/><text x="97.6274%" y="495.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (8 samples, 0.91%)</title><rect x="97.3774%" y="469" width="0.9122%" height="15" fill="rgb(234,83,48)" fg:x="854" fg:w="8"/><text x="97.6274%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (8 samples, 0.91%)</title><rect x="97.3774%" y="453" width="0.9122%" height="15" fill="rgb(228,3,54)" fg:x="854" fg:w="8"/><text x="97.6274%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 0.91%)</title><rect x="97.3774%" y="437" width="0.9122%" height="15" fill="rgb(226,155,13)" fg:x="854" fg:w="8"/><text x="97.6274%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 0.91%)</title><rect x="97.3774%" y="421" width="0.9122%" height="15" fill="rgb(241,28,37)" fg:x="854" fg:w="8"/><text x="97.6274%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.91%)</title><rect x="97.3774%" y="405" width="0.9122%" height="15" fill="rgb(233,93,10)" fg:x="854" fg:w="8"/><text x="97.6274%" y="415.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (8 samples, 0.91%)</title><rect x="97.3774%" y="389" width="0.9122%" height="15" fill="rgb(225,113,19)" fg:x="854" fg:w="8"/><text x="97.6274%" y="399.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.23%)</title><rect x="98.0616%" y="373" width="0.2281%" height="15" fill="rgb(241,2,18)" fg:x="860" fg:w="2"/><text x="98.3116%" y="383.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.23%)</title><rect x="98.0616%" y="357" width="0.2281%" height="15" fill="rgb(228,207,21)" fg:x="860" fg:w="2"/><text x="98.3116%" y="367.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.23%)</title><rect x="98.0616%" y="341" width="0.2281%" height="15" fill="rgb(213,211,35)" fg:x="860" fg:w="2"/><text x="98.3116%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.23%)</title><rect x="98.0616%" y="325" width="0.2281%" height="15" fill="rgb(209,83,10)" fg:x="860" fg:w="2"/><text x="98.3116%" y="335.50"></text></g><g><title>[libc.so.6] (9 samples, 1.03%)</title><rect x="98.2896%" y="661" width="1.0262%" height="15" fill="rgb(209,164,1)" fg:x="862" fg:w="9"/><text x="98.5396%" y="671.50"></text></g><g><title>__ctype_init (1 samples, 0.11%)</title><rect x="99.3158%" y="661" width="0.1140%" height="15" fill="rgb(213,184,43)" fg:x="871" fg:w="1"/><text x="99.5658%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.11%)</title><rect x="99.4299%" y="661" width="0.1140%" height="15" fill="rgb(231,61,34)" fg:x="872" fg:w="1"/><text x="99.6799%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.11%)</title><rect x="99.4299%" y="645" width="0.1140%" height="15" fill="rgb(235,75,3)" fg:x="872" fg:w="1"/><text x="99.6799%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.11%)</title><rect x="99.4299%" y="629" width="0.1140%" height="15" fill="rgb(220,106,47)" fg:x="872" fg:w="1"/><text x="99.6799%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.11%)</title><rect x="99.4299%" y="613" width="0.1140%" height="15" fill="rgb(210,196,33)" fg:x="872" fg:w="1"/><text x="99.6799%" y="623.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.11%)</title><rect x="99.4299%" y="597" width="0.1140%" height="15" fill="rgb(229,154,42)" fg:x="872" fg:w="1"/><text x="99.6799%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="99.4299%" y="581" width="0.1140%" height="15" fill="rgb(228,114,26)" fg:x="872" fg:w="1"/><text x="99.6799%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="99.4299%" y="565" width="0.1140%" height="15" fill="rgb(208,144,1)" fg:x="872" fg:w="1"/><text x="99.6799%" y="575.50"></text></g><g><title>[unknown] (12 samples, 1.37%)</title><rect x="98.2896%" y="677" width="1.3683%" height="15" fill="rgb(239,112,37)" fg:x="862" fg:w="12"/><text x="98.5396%" y="687.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.11%)</title><rect x="99.5439%" y="661" width="0.1140%" height="15" fill="rgb(210,96,50)" fg:x="873" fg:w="1"/><text x="99.7939%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (1 samples, 0.11%)</title><rect x="99.5439%" y="645" width="0.1140%" height="15" fill="rgb(222,178,2)" fg:x="873" fg:w="1"/><text x="99.7939%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (1 samples, 0.11%)</title><rect x="99.5439%" y="629" width="0.1140%" height="15" fill="rgb(226,74,18)" fg:x="873" fg:w="1"/><text x="99.7939%" y="639.50"></text></g><g><title>all (877 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(225,67,54)" fg:x="0" fg:w="877"/><text x="0.2500%" y="719.50"></text></g><g><title>tokio-runtime-w (25 samples, 2.85%)</title><rect x="97.1494%" y="693" width="2.8506%" height="15" fill="rgb(251,92,32)" fg:x="852" fg:w="25"/><text x="97.3994%" y="703.50">to..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (3 samples, 0.34%)</title><rect x="99.6579%" y="677" width="0.3421%" height="15" fill="rgb(228,149,22)" fg:x="874" fg:w="3"/><text x="99.9079%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.23%)</title><rect x="99.7719%" y="661" width="0.2281%" height="15" fill="rgb(243,54,13)" fg:x="875" fg:w="2"/><text x="100.0219%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.23%)</title><rect x="99.7719%" y="645" width="0.2281%" height="15" fill="rgb(243,180,28)" fg:x="875" fg:w="2"/><text x="100.0219%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.23%)</title><rect x="99.7719%" y="629" width="0.2281%" height="15" fill="rgb(208,167,24)" fg:x="875" fg:w="2"/><text x="100.0219%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.23%)</title><rect x="99.7719%" y="613" width="0.2281%" height="15" fill="rgb(245,73,45)" fg:x="875" fg:w="2"/><text x="100.0219%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (2 samples, 0.23%)</title><rect x="99.7719%" y="597" width="0.2281%" height="15" fill="rgb(237,203,48)" fg:x="875" fg:w="2"/><text x="100.0219%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.23%)</title><rect x="99.7719%" y="581" width="0.2281%" height="15" fill="rgb(211,197,16)" fg:x="875" fg:w="2"/><text x="100.0219%" y="591.50"></text></g></svg></svg>