<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="1370"><g><title>:92704 (1 samples, 0.07%)</title><rect x="0.0000%" y="693" width="0.0730%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0000%" y="677" width="0.0730%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>:92705 (1 samples, 0.07%)</title><rect x="0.0730%" y="693" width="0.0730%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3230%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0730%" y="677" width="0.0730%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3230%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="0.1460%" y="677" width="0.0730%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.3960%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="0.1460%" y="661" width="0.0730%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3960%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.07%)</title><rect x="0.1460%" y="645" width="0.0730%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3960%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="0.1460%" y="629" width="0.0730%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3960%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="0.1460%" y="613" width="0.0730%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3960%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.07%)</title><rect x="0.1460%" y="597" width="0.0730%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.3960%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.07%)</title><rect x="0.1460%" y="581" width="0.0730%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.3960%" y="591.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="0.1460%" y="565" width="0.0730%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.3960%" y="575.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="0.1460%" y="549" width="0.0730%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.3960%" y="559.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="0.1460%" y="533" width="0.0730%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.3960%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="0.1460%" y="517" width="0.0730%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.3960%" y="527.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="0.1460%" y="501" width="0.0730%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.3960%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.07%)</title><rect x="0.1460%" y="485" width="0.0730%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.3960%" y="495.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (1 samples, 0.07%)</title><rect x="0.1460%" y="469" width="0.0730%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.3960%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.07%)</title><rect x="0.1460%" y="453" width="0.0730%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.3960%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.07%)</title><rect x="0.1460%" y="437" width="0.0730%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="0.3960%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.07%)</title><rect x="0.1460%" y="421" width="0.0730%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="0.3960%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.07%)</title><rect x="0.1460%" y="405" width="0.0730%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="0.3960%" y="415.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.07%)</title><rect x="0.1460%" y="389" width="0.0730%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="1"/><text x="0.3960%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.07%)</title><rect x="0.1460%" y="373" width="0.0730%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="1"/><text x="0.3960%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.07%)</title><rect x="0.1460%" y="357" width="0.0730%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="1"/><text x="0.3960%" y="367.50"></text></g><g><title>:92707 (2 samples, 0.15%)</title><rect x="0.1460%" y="693" width="0.1460%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="2"/><text x="0.3960%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.2190%" y="677" width="0.0730%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="0.4690%" y="687.50"></text></g><g><title>:92708 (2 samples, 0.15%)</title><rect x="0.2920%" y="693" width="0.1460%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="2"/><text x="0.5420%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.2920%" y="677" width="0.1460%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="2"/><text x="0.5420%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="0.3650%" y="661" width="0.0730%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="0.6150%" y="671.50"></text></g><g><title>:92709 (1 samples, 0.07%)</title><rect x="0.4380%" y="693" width="0.0730%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="0.6880%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.4380%" y="677" width="0.0730%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="1"/><text x="0.6880%" y="687.50"></text></g><g><title>:92710 (1 samples, 0.07%)</title><rect x="0.5109%" y="693" width="0.0730%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.7609%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.5109%" y="677" width="0.0730%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="0.7609%" y="687.50"></text></g><g><title>:92711 (1 samples, 0.07%)</title><rect x="0.5839%" y="693" width="0.0730%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="0.8339%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.5839%" y="677" width="0.0730%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="0.8339%" y="687.50"></text></g><g><title>:92713 (1 samples, 0.07%)</title><rect x="0.6569%" y="693" width="0.0730%" height="15" fill="rgb(226,3,54)" fg:x="9" fg:w="1"/><text x="0.9069%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.6569%" y="677" width="0.0730%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="1"/><text x="0.9069%" y="687.50"></text></g><g><title>:92714 (1 samples, 0.07%)</title><rect x="0.7299%" y="693" width="0.0730%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="1"/><text x="0.9799%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.7299%" y="677" width="0.0730%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="1"/><text x="0.9799%" y="687.50"></text></g><g><title>:92715 (1 samples, 0.07%)</title><rect x="0.8029%" y="693" width="0.0730%" height="15" fill="rgb(231,60,39)" fg:x="11" fg:w="1"/><text x="1.0529%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.8029%" y="677" width="0.0730%" height="15" fill="rgb(208,69,12)" fg:x="11" fg:w="1"/><text x="1.0529%" y="687.50"></text></g><g><title>:92716 (1 samples, 0.07%)</title><rect x="0.8759%" y="693" width="0.0730%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="1"/><text x="1.1259%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.8759%" y="677" width="0.0730%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="1"/><text x="1.1259%" y="687.50"></text></g><g><title>:92717 (1 samples, 0.07%)</title><rect x="0.9489%" y="693" width="0.0730%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="1"/><text x="1.1989%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.9489%" y="677" width="0.0730%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="1"/><text x="1.1989%" y="687.50"></text></g><g><title>:92718 (1 samples, 0.07%)</title><rect x="1.0219%" y="693" width="0.0730%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="1"/><text x="1.2719%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.0219%" y="677" width="0.0730%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="1.2719%" y="687.50"></text></g><g><title>:92719 (1 samples, 0.07%)</title><rect x="1.0949%" y="693" width="0.0730%" height="15" fill="rgb(239,60,40)" fg:x="15" fg:w="1"/><text x="1.3449%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.0949%" y="677" width="0.0730%" height="15" fill="rgb(206,27,48)" fg:x="15" fg:w="1"/><text x="1.3449%" y="687.50"></text></g><g><title>L3_imdct36 (1 samples, 0.07%)</title><rect x="1.1679%" y="677" width="0.0730%" height="15" fill="rgb(225,35,8)" fg:x="16" fg:w="1"/><text x="1.4179%" y="687.50"></text></g><g><title>_mm_add_ps (1 samples, 0.07%)</title><rect x="1.1679%" y="661" width="0.0730%" height="15" fill="rgb(250,213,24)" fg:x="16" fg:w="1"/><text x="1.4179%" y="671.50"></text></g><g><title>[[heap]] (1 samples, 0.07%)</title><rect x="1.2409%" y="677" width="0.0730%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="1"/><text x="1.4909%" y="687.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.07%)</title><rect x="1.2409%" y="661" width="0.0730%" height="15" fill="rgb(231,138,38)" fg:x="17" fg:w="1"/><text x="1.4909%" y="671.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.07%)</title><rect x="1.2409%" y="645" width="0.0730%" height="15" fill="rgb(231,145,46)" fg:x="17" fg:w="1"/><text x="1.4909%" y="655.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.07%)</title><rect x="1.2409%" y="629" width="0.0730%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="1"/><text x="1.4909%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.07%)</title><rect x="1.2409%" y="613" width="0.0730%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="1"/><text x="1.4909%" y="623.50"></text></g><g><title>[[stack]] (1 samples, 0.07%)</title><rect x="1.3139%" y="677" width="0.0730%" height="15" fill="rgb(247,81,37)" fg:x="18" fg:w="1"/><text x="1.5639%" y="687.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.07%)</title><rect x="1.3139%" y="661" width="0.0730%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="1"/><text x="1.5639%" y="671.50"></text></g><g><title>[anon] (1 samples, 0.07%)</title><rect x="1.3869%" y="677" width="0.0730%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="1.6369%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="1.3869%" y="661" width="0.0730%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="1"/><text x="1.6369%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="1.4599%" y="677" width="0.0730%" height="15" fill="rgb(221,10,30)" fg:x="20" fg:w="1"/><text x="1.7099%" y="687.50"></text></g><g><title>[libc.so.6] (12 samples, 0.88%)</title><rect x="1.5328%" y="677" width="0.8759%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="12"/><text x="1.7828%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="2.3358%" y="661" width="0.0730%" height="15" fill="rgb(222,148,37)" fg:x="32" fg:w="1"/><text x="2.5858%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.07%)</title><rect x="2.3358%" y="645" width="0.0730%" height="15" fill="rgb(234,67,33)" fg:x="32" fg:w="1"/><text x="2.5858%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="2.3358%" y="629" width="0.0730%" height="15" fill="rgb(247,98,35)" fg:x="32" fg:w="1"/><text x="2.5858%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="2.3358%" y="613" width="0.0730%" height="15" fill="rgb(247,138,52)" fg:x="32" fg:w="1"/><text x="2.5858%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.07%)</title><rect x="2.3358%" y="597" width="0.0730%" height="15" fill="rgb(213,79,30)" fg:x="32" fg:w="1"/><text x="2.5858%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.07%)</title><rect x="2.3358%" y="581" width="0.0730%" height="15" fill="rgb(246,177,23)" fg:x="32" fg:w="1"/><text x="2.5858%" y="591.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.07%)</title><rect x="2.3358%" y="565" width="0.0730%" height="15" fill="rgb(230,62,27)" fg:x="32" fg:w="1"/><text x="2.5858%" y="575.50"></text></g><g><title>std::panicking::try (1 samples, 0.07%)</title><rect x="2.3358%" y="549" width="0.0730%" height="15" fill="rgb(216,154,8)" fg:x="32" fg:w="1"/><text x="2.5858%" y="559.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.07%)</title><rect x="2.3358%" y="533" width="0.0730%" height="15" fill="rgb(244,35,45)" fg:x="32" fg:w="1"/><text x="2.5858%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.07%)</title><rect x="2.3358%" y="517" width="0.0730%" height="15" fill="rgb(251,115,12)" fg:x="32" fg:w="1"/><text x="2.5858%" y="527.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="2.3358%" y="501" width="0.0730%" height="15" fill="rgb(240,54,50)" fg:x="32" fg:w="1"/><text x="2.5858%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.07%)</title><rect x="2.3358%" y="485" width="0.0730%" height="15" fill="rgb(233,84,52)" fg:x="32" fg:w="1"/><text x="2.5858%" y="495.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (1 samples, 0.07%)</title><rect x="2.3358%" y="469" width="0.0730%" height="15" fill="rgb(207,117,47)" fg:x="32" fg:w="1"/><text x="2.5858%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.07%)</title><rect x="2.3358%" y="453" width="0.0730%" height="15" fill="rgb(249,43,39)" fg:x="32" fg:w="1"/><text x="2.5858%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.07%)</title><rect x="2.3358%" y="437" width="0.0730%" height="15" fill="rgb(209,38,44)" fg:x="32" fg:w="1"/><text x="2.5858%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.07%)</title><rect x="2.3358%" y="421" width="0.0730%" height="15" fill="rgb(236,212,23)" fg:x="32" fg:w="1"/><text x="2.5858%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.07%)</title><rect x="2.3358%" y="405" width="0.0730%" height="15" fill="rgb(242,79,21)" fg:x="32" fg:w="1"/><text x="2.5858%" y="415.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.07%)</title><rect x="2.3358%" y="389" width="0.0730%" height="15" fill="rgb(211,96,35)" fg:x="32" fg:w="1"/><text x="2.5858%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.07%)</title><rect x="2.3358%" y="373" width="0.0730%" height="15" fill="rgb(253,215,40)" fg:x="32" fg:w="1"/><text x="2.5858%" y="383.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.07%)</title><rect x="2.3358%" y="357" width="0.0730%" height="15" fill="rgb(211,81,21)" fg:x="32" fg:w="1"/><text x="2.5858%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.07%)</title><rect x="2.3358%" y="341" width="0.0730%" height="15" fill="rgb(208,190,38)" fg:x="32" fg:w="1"/><text x="2.5858%" y="351.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.07%)</title><rect x="2.3358%" y="325" width="0.0730%" height="15" fill="rgb(235,213,38)" fg:x="32" fg:w="1"/><text x="2.5858%" y="335.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.07%)</title><rect x="2.3358%" y="309" width="0.0730%" height="15" fill="rgb(237,122,38)" fg:x="32" fg:w="1"/><text x="2.5858%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="2.3358%" y="293" width="0.0730%" height="15" fill="rgb(244,218,35)" fg:x="32" fg:w="1"/><text x="2.5858%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="2.5547%" y="661" width="0.1460%" height="15" fill="rgb(240,68,47)" fg:x="35" fg:w="2"/><text x="2.8047%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="2.5547%" y="645" width="0.1460%" height="15" fill="rgb(210,16,53)" fg:x="35" fg:w="2"/><text x="2.8047%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.15%)</title><rect x="2.5547%" y="629" width="0.1460%" height="15" fill="rgb(235,124,12)" fg:x="35" fg:w="2"/><text x="2.8047%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.15%)</title><rect x="2.5547%" y="613" width="0.1460%" height="15" fill="rgb(224,169,11)" fg:x="35" fg:w="2"/><text x="2.8047%" y="623.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.29%)</title><rect x="2.7007%" y="661" width="0.2920%" height="15" fill="rgb(250,166,2)" fg:x="37" fg:w="4"/><text x="2.9507%" y="671.50"></text></g><g><title>L3_dct3_9 (1 samples, 0.07%)</title><rect x="2.9927%" y="661" width="0.0730%" height="15" fill="rgb(242,216,29)" fg:x="41" fg:w="1"/><text x="3.2427%" y="671.50"></text></g><g><title>L3_imdct36 (1 samples, 0.07%)</title><rect x="3.0657%" y="661" width="0.0730%" height="15" fill="rgb(230,116,27)" fg:x="42" fg:w="1"/><text x="3.3157%" y="671.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.07%)</title><rect x="3.0657%" y="645" width="0.0730%" height="15" fill="rgb(228,99,48)" fg:x="42" fg:w="1"/><text x="3.3157%" y="655.50"></text></g><g><title>[libc.so.6] (9 samples, 0.66%)</title><rect x="3.1387%" y="661" width="0.6569%" height="15" fill="rgb(253,11,6)" fg:x="43" fg:w="9"/><text x="3.3887%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="3.7956%" y="661" width="0.0730%" height="15" fill="rgb(247,143,39)" fg:x="52" fg:w="1"/><text x="4.0456%" y="671.50"></text></g><g><title>__ctype_init (3 samples, 0.22%)</title><rect x="3.8686%" y="661" width="0.2190%" height="15" fill="rgb(236,97,10)" fg:x="53" fg:w="3"/><text x="4.1186%" y="671.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="4.0876%" y="661" width="0.0730%" height="15" fill="rgb(233,208,19)" fg:x="56" fg:w="1"/><text x="4.3376%" y="671.50"></text></g><g><title>cli::main::{{closure}} (1 samples, 0.07%)</title><rect x="4.1606%" y="661" width="0.0730%" height="15" fill="rgb(216,164,2)" fg:x="57" fg:w="1"/><text x="4.4106%" y="671.50"></text></g><g><title>mp3d_synth (1 samples, 0.07%)</title><rect x="4.2336%" y="661" width="0.0730%" height="15" fill="rgb(220,129,5)" fg:x="58" fg:w="1"/><text x="4.4836%" y="671.50"></text></g><g><title>_mm_set1_ps (1 samples, 0.07%)</title><rect x="4.2336%" y="645" width="0.0730%" height="15" fill="rgb(242,17,10)" fg:x="58" fg:w="1"/><text x="4.4836%" y="655.50"></text></g><g><title>L3_huffman (14 samples, 1.02%)</title><rect x="4.3066%" y="629" width="1.0219%" height="15" fill="rgb(242,107,0)" fg:x="59" fg:w="14"/><text x="4.5566%" y="639.50"></text></g><g><title>L3_imdct36 (1 samples, 0.07%)</title><rect x="5.3285%" y="613" width="0.0730%" height="15" fill="rgb(251,28,31)" fg:x="73" fg:w="1"/><text x="5.5785%" y="623.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.07%)</title><rect x="5.3285%" y="597" width="0.0730%" height="15" fill="rgb(233,223,10)" fg:x="73" fg:w="1"/><text x="5.5785%" y="607.50"></text></g><g><title>mp3d_synth (1 samples, 0.07%)</title><rect x="5.4015%" y="613" width="0.0730%" height="15" fill="rgb(215,21,27)" fg:x="74" fg:w="1"/><text x="5.6515%" y="623.50"></text></g><g><title>_mm_add_ps (1 samples, 0.07%)</title><rect x="5.4015%" y="597" width="0.0730%" height="15" fill="rgb(232,23,21)" fg:x="74" fg:w="1"/><text x="5.6515%" y="607.50"></text></g><g><title>L3_decode (17 samples, 1.24%)</title><rect x="4.3066%" y="645" width="1.2409%" height="15" fill="rgb(244,5,23)" fg:x="59" fg:w="17"/><text x="4.5566%" y="655.50"></text></g><g><title>L3_imdct_gr (3 samples, 0.22%)</title><rect x="5.3285%" y="629" width="0.2190%" height="15" fill="rgb(226,81,46)" fg:x="73" fg:w="3"/><text x="5.5785%" y="639.50"></text></g><g><title>mp3dec_decode_frame (1 samples, 0.07%)</title><rect x="5.4745%" y="613" width="0.0730%" height="15" fill="rgb(247,70,30)" fg:x="75" fg:w="1"/><text x="5.7245%" y="623.50"></text></g><g><title>L3_decode (1 samples, 0.07%)</title><rect x="5.4745%" y="597" width="0.0730%" height="15" fill="rgb(212,68,19)" fg:x="75" fg:w="1"/><text x="5.7245%" y="607.50"></text></g><g><title>L3_huffman (1 samples, 0.07%)</title><rect x="5.4745%" y="581" width="0.0730%" height="15" fill="rgb(240,187,13)" fg:x="75" fg:w="1"/><text x="5.7245%" y="591.50"></text></g><g><title>L3_save_reservoir (1 samples, 0.07%)</title><rect x="5.5474%" y="645" width="0.0730%" height="15" fill="rgb(223,113,26)" fg:x="76" fg:w="1"/><text x="5.7974%" y="655.50"></text></g><g><title>memmove (1 samples, 0.07%)</title><rect x="5.5474%" y="629" width="0.0730%" height="15" fill="rgb(206,192,2)" fg:x="76" fg:w="1"/><text x="5.7974%" y="639.50"></text></g><g><title>L3_imdct36 (1 samples, 0.07%)</title><rect x="5.6204%" y="629" width="0.0730%" height="15" fill="rgb(241,108,4)" fg:x="77" fg:w="1"/><text x="5.8704%" y="639.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.07%)</title><rect x="5.6204%" y="613" width="0.0730%" height="15" fill="rgb(247,173,49)" fg:x="77" fg:w="1"/><text x="5.8704%" y="623.50"></text></g><g><title>mp3d_DCT_II (1 samples, 0.07%)</title><rect x="5.6934%" y="629" width="0.0730%" height="15" fill="rgb(224,114,35)" fg:x="78" fg:w="1"/><text x="5.9434%" y="639.50"></text></g><g><title>_mm_add_ps (1 samples, 0.07%)</title><rect x="5.6934%" y="613" width="0.0730%" height="15" fill="rgb(245,159,27)" fg:x="78" fg:w="1"/><text x="5.9434%" y="623.50"></text></g><g><title>_mm_add_ps (1 samples, 0.07%)</title><rect x="5.7664%" y="613" width="0.0730%" height="15" fill="rgb(245,172,44)" fg:x="79" fg:w="1"/><text x="6.0164%" y="623.50"></text></g><g><title>_mm_cvtps_epi32 (1 samples, 0.07%)</title><rect x="5.8394%" y="613" width="0.0730%" height="15" fill="rgb(236,23,11)" fg:x="80" fg:w="1"/><text x="6.0894%" y="623.50"></text></g><g><title>mp3d_synth (3 samples, 0.22%)</title><rect x="5.7664%" y="629" width="0.2190%" height="15" fill="rgb(205,117,38)" fg:x="79" fg:w="3"/><text x="6.0164%" y="639.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.07%)</title><rect x="5.9124%" y="613" width="0.0730%" height="15" fill="rgb(237,72,25)" fg:x="81" fg:w="1"/><text x="6.1624%" y="623.50"></text></g><g><title>mp3dec_decode_frame (24 samples, 1.75%)</title><rect x="4.3066%" y="661" width="1.7518%" height="15" fill="rgb(244,70,9)" fg:x="59" fg:w="24"/><text x="4.5566%" y="671.50"></text></g><g><title>mp3d_synth_granule (6 samples, 0.44%)</title><rect x="5.6204%" y="645" width="0.4380%" height="15" fill="rgb(217,125,39)" fg:x="77" fg:w="6"/><text x="5.8704%" y="655.50"></text></g><g><title>mp3dec_decode_frame (1 samples, 0.07%)</title><rect x="5.9854%" y="629" width="0.0730%" height="15" fill="rgb(235,36,10)" fg:x="82" fg:w="1"/><text x="6.2354%" y="639.50"></text></g><g><title>L3_decode (1 samples, 0.07%)</title><rect x="5.9854%" y="613" width="0.0730%" height="15" fill="rgb(251,123,47)" fg:x="82" fg:w="1"/><text x="6.2354%" y="623.50"></text></g><g><title>L3_antialias (1 samples, 0.07%)</title><rect x="5.9854%" y="597" width="0.0730%" height="15" fill="rgb(221,13,13)" fg:x="82" fg:w="1"/><text x="6.2354%" y="607.50"></text></g><g><title>_mm_shuffle_ps (1 samples, 0.07%)</title><rect x="5.9854%" y="581" width="0.0730%" height="15" fill="rgb(238,131,9)" fg:x="82" fg:w="1"/><text x="6.2354%" y="591.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.15%)</title><rect x="6.0584%" y="661" width="0.1460%" height="15" fill="rgb(211,50,8)" fg:x="83" fg:w="2"/><text x="6.3084%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.07%)</title><rect x="6.1314%" y="645" width="0.0730%" height="15" fill="rgb(245,182,24)" fg:x="84" fg:w="1"/><text x="6.3814%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.07%)</title><rect x="6.1314%" y="629" width="0.0730%" height="15" fill="rgb(242,14,37)" fg:x="84" fg:w="1"/><text x="6.3814%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.07%)</title><rect x="6.1314%" y="613" width="0.0730%" height="15" fill="rgb(246,228,12)" fg:x="84" fg:w="1"/><text x="6.3814%" y="623.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.07%)</title><rect x="6.1314%" y="597" width="0.0730%" height="15" fill="rgb(213,55,15)" fg:x="84" fg:w="1"/><text x="6.3814%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.07%)</title><rect x="6.1314%" y="581" width="0.0730%" height="15" fill="rgb(209,9,3)" fg:x="84" fg:w="1"/><text x="6.3814%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="6.1314%" y="565" width="0.0730%" height="15" fill="rgb(230,59,30)" fg:x="84" fg:w="1"/><text x="6.3814%" y="575.50"></text></g><g><title>pthread_cond_wait (1 samples, 0.07%)</title><rect x="6.2044%" y="661" width="0.0730%" height="15" fill="rgb(209,121,21)" fg:x="85" fg:w="1"/><text x="6.4544%" y="671.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="6.2774%" y="661" width="0.0730%" height="15" fill="rgb(220,109,13)" fg:x="86" fg:w="1"/><text x="6.5274%" y="671.50"></text></g><g><title>[unknown] (55 samples, 4.01%)</title><rect x="2.4088%" y="677" width="4.0146%" height="15" fill="rgb(232,18,1)" fg:x="33" fg:w="55"/><text x="2.6588%" y="687.50">[unk..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.07%)</title><rect x="6.3504%" y="661" width="0.0730%" height="15" fill="rgb(215,41,42)" fg:x="87" fg:w="1"/><text x="6.6004%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.07%)</title><rect x="6.4964%" y="149" width="0.0730%" height="15" fill="rgb(224,123,36)" fg:x="89" fg:w="1"/><text x="6.7464%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="6.4964%" y="133" width="0.0730%" height="15" fill="rgb(240,125,3)" fg:x="89" fg:w="1"/><text x="6.7464%" y="143.50"></text></g><g><title>tokio::runtime::builder::Builder::build (3 samples, 0.22%)</title><rect x="6.4234%" y="405" width="0.2190%" height="15" fill="rgb(205,98,50)" fg:x="88" fg:w="3"/><text x="6.6734%" y="415.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (3 samples, 0.22%)</title><rect x="6.4234%" y="389" width="0.2190%" height="15" fill="rgb(205,185,37)" fg:x="88" fg:w="3"/><text x="6.6734%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (3 samples, 0.22%)</title><rect x="6.4234%" y="373" width="0.2190%" height="15" fill="rgb(238,207,15)" fg:x="88" fg:w="3"/><text x="6.6734%" y="383.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (3 samples, 0.22%)</title><rect x="6.4234%" y="357" width="0.2190%" height="15" fill="rgb(213,199,42)" fg:x="88" fg:w="3"/><text x="6.6734%" y="367.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (3 samples, 0.22%)</title><rect x="6.4234%" y="341" width="0.2190%" height="15" fill="rgb(235,201,11)" fg:x="88" fg:w="3"/><text x="6.6734%" y="351.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (3 samples, 0.22%)</title><rect x="6.4234%" y="325" width="0.2190%" height="15" fill="rgb(207,46,11)" fg:x="88" fg:w="3"/><text x="6.6734%" y="335.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (3 samples, 0.22%)</title><rect x="6.4234%" y="309" width="0.2190%" height="15" fill="rgb(241,35,35)" fg:x="88" fg:w="3"/><text x="6.6734%" y="319.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (3 samples, 0.22%)</title><rect x="6.4234%" y="293" width="0.2190%" height="15" fill="rgb(243,32,47)" fg:x="88" fg:w="3"/><text x="6.6734%" y="303.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.22%)</title><rect x="6.4234%" y="277" width="0.2190%" height="15" fill="rgb(247,202,23)" fg:x="88" fg:w="3"/><text x="6.6734%" y="287.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.22%)</title><rect x="6.4234%" y="261" width="0.2190%" height="15" fill="rgb(219,102,11)" fg:x="88" fg:w="3"/><text x="6.6734%" y="271.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.22%)</title><rect x="6.4234%" y="245" width="0.2190%" height="15" fill="rgb(243,110,44)" fg:x="88" fg:w="3"/><text x="6.6734%" y="255.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (3 samples, 0.22%)</title><rect x="6.4234%" y="229" width="0.2190%" height="15" fill="rgb(222,74,54)" fg:x="88" fg:w="3"/><text x="6.6734%" y="239.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.15%)</title><rect x="6.4964%" y="213" width="0.1460%" height="15" fill="rgb(216,99,12)" fg:x="89" fg:w="2"/><text x="6.7464%" y="223.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.15%)</title><rect x="6.4964%" y="197" width="0.1460%" height="15" fill="rgb(226,22,26)" fg:x="89" fg:w="2"/><text x="6.7464%" y="207.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.15%)</title><rect x="6.4964%" y="181" width="0.1460%" height="15" fill="rgb(217,163,10)" fg:x="89" fg:w="2"/><text x="6.7464%" y="191.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.15%)</title><rect x="6.4964%" y="165" width="0.1460%" height="15" fill="rgb(213,25,53)" fg:x="89" fg:w="2"/><text x="6.7464%" y="175.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.07%)</title><rect x="6.5693%" y="149" width="0.0730%" height="15" fill="rgb(252,105,26)" fg:x="90" fg:w="1"/><text x="6.8193%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="6.5693%" y="133" width="0.0730%" height="15" fill="rgb(220,39,43)" fg:x="90" fg:w="1"/><text x="6.8193%" y="143.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="6.7153%" y="85" width="0.0730%" height="15" fill="rgb(229,68,48)" fg:x="92" fg:w="1"/><text x="6.9653%" y="95.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="6.7153%" y="69" width="0.0730%" height="15" fill="rgb(252,8,32)" fg:x="92" fg:w="1"/><text x="6.9653%" y="79.50"></text></g><g><title>cli::utils::i16_array_to_f32 (3 samples, 0.22%)</title><rect x="6.7153%" y="245" width="0.2190%" height="15" fill="rgb(223,20,43)" fg:x="92" fg:w="3"/><text x="6.9653%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.22%)</title><rect x="6.7153%" y="229" width="0.2190%" height="15" fill="rgb(229,81,49)" fg:x="92" fg:w="3"/><text x="6.9653%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.22%)</title><rect x="6.7153%" y="213" width="0.2190%" height="15" fill="rgb(236,28,36)" fg:x="92" fg:w="3"/><text x="6.9653%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.22%)</title><rect x="6.7153%" y="197" width="0.2190%" height="15" fill="rgb(249,185,26)" fg:x="92" fg:w="3"/><text x="6.9653%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.22%)</title><rect x="6.7153%" y="181" width="0.2190%" height="15" fill="rgb(249,174,33)" fg:x="92" fg:w="3"/><text x="6.9653%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.22%)</title><rect x="6.7153%" y="165" width="0.2190%" height="15" fill="rgb(233,201,37)" fg:x="92" fg:w="3"/><text x="6.9653%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.22%)</title><rect x="6.7153%" y="149" width="0.2190%" height="15" fill="rgb(221,78,26)" fg:x="92" fg:w="3"/><text x="6.9653%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.22%)</title><rect x="6.7153%" y="133" width="0.2190%" height="15" fill="rgb(250,127,30)" fg:x="92" fg:w="3"/><text x="6.9653%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.22%)</title><rect x="6.7153%" y="117" width="0.2190%" height="15" fill="rgb(230,49,44)" fg:x="92" fg:w="3"/><text x="6.9653%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.22%)</title><rect x="6.7153%" y="101" width="0.2190%" height="15" fill="rgb(229,67,23)" fg:x="92" fg:w="3"/><text x="6.9653%" y="111.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.15%)</title><rect x="6.7883%" y="85" width="0.1460%" height="15" fill="rgb(249,83,47)" fg:x="93" fg:w="2"/><text x="7.0383%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.15%)</title><rect x="6.7883%" y="69" width="0.1460%" height="15" fill="rgb(215,43,3)" fg:x="93" fg:w="2"/><text x="7.0383%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (2 samples, 0.15%)</title><rect x="6.7883%" y="53" width="0.1460%" height="15" fill="rgb(238,154,13)" fg:x="93" fg:w="2"/><text x="7.0383%" y="63.50"></text></g><g><title>core::ptr::write (2 samples, 0.15%)</title><rect x="6.7883%" y="37" width="0.1460%" height="15" fill="rgb(219,56,2)" fg:x="93" fg:w="2"/><text x="7.0383%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="7.0073%" y="149" width="0.0730%" height="15" fill="rgb(233,0,4)" fg:x="96" fg:w="1"/><text x="7.2573%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.07%)</title><rect x="7.0803%" y="149" width="0.0730%" height="15" fill="rgb(235,30,7)" fg:x="97" fg:w="1"/><text x="7.3303%" y="159.50"></text></g><g><title>cli::load_default_buffer (7 samples, 0.51%)</title><rect x="6.7153%" y="261" width="0.5109%" height="15" fill="rgb(250,79,13)" fg:x="92" fg:w="7"/><text x="6.9653%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.29%)</title><rect x="6.9343%" y="245" width="0.2920%" height="15" fill="rgb(211,146,34)" fg:x="95" fg:w="4"/><text x="7.1843%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.29%)</title><rect x="6.9343%" y="229" width="0.2920%" height="15" fill="rgb(228,22,38)" fg:x="95" fg:w="4"/><text x="7.1843%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.29%)</title><rect x="6.9343%" y="213" width="0.2920%" height="15" fill="rgb(235,168,5)" fg:x="95" fg:w="4"/><text x="7.1843%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.29%)</title><rect x="6.9343%" y="197" width="0.2920%" height="15" fill="rgb(221,155,16)" fg:x="95" fg:w="4"/><text x="7.1843%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.29%)</title><rect x="6.9343%" y="181" width="0.2920%" height="15" fill="rgb(215,215,53)" fg:x="95" fg:w="4"/><text x="7.1843%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.29%)</title><rect x="6.9343%" y="165" width="0.2920%" height="15" fill="rgb(223,4,10)" fg:x="95" fg:w="4"/><text x="7.1843%" y="175.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="7.1533%" y="149" width="0.0730%" height="15" fill="rgb(234,103,6)" fg:x="98" fg:w="1"/><text x="7.4033%" y="159.50"></text></g><g><title>_start (12 samples, 0.88%)</title><rect x="6.4234%" y="677" width="0.8759%" height="15" fill="rgb(227,97,0)" fg:x="88" fg:w="12"/><text x="6.6734%" y="687.50"></text></g><g><title>__libc_start_main (12 samples, 0.88%)</title><rect x="6.4234%" y="661" width="0.8759%" height="15" fill="rgb(234,150,53)" fg:x="88" fg:w="12"/><text x="6.6734%" y="671.50"></text></g><g><title>[libc.so.6] (12 samples, 0.88%)</title><rect x="6.4234%" y="645" width="0.8759%" height="15" fill="rgb(228,201,54)" fg:x="88" fg:w="12"/><text x="6.6734%" y="655.50"></text></g><g><title>main (12 samples, 0.88%)</title><rect x="6.4234%" y="629" width="0.8759%" height="15" fill="rgb(222,22,37)" fg:x="88" fg:w="12"/><text x="6.6734%" y="639.50"></text></g><g><title>std::rt::lang_start_internal (12 samples, 0.88%)</title><rect x="6.4234%" y="613" width="0.8759%" height="15" fill="rgb(237,53,32)" fg:x="88" fg:w="12"/><text x="6.6734%" y="623.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.88%)</title><rect x="6.4234%" y="597" width="0.8759%" height="15" fill="rgb(233,25,53)" fg:x="88" fg:w="12"/><text x="6.6734%" y="607.50"></text></g><g><title>std::panicking::try (12 samples, 0.88%)</title><rect x="6.4234%" y="581" width="0.8759%" height="15" fill="rgb(210,40,34)" fg:x="88" fg:w="12"/><text x="6.6734%" y="591.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.88%)</title><rect x="6.4234%" y="565" width="0.8759%" height="15" fill="rgb(241,220,44)" fg:x="88" fg:w="12"/><text x="6.6734%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (12 samples, 0.88%)</title><rect x="6.4234%" y="549" width="0.8759%" height="15" fill="rgb(235,28,35)" fg:x="88" fg:w="12"/><text x="6.6734%" y="559.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.88%)</title><rect x="6.4234%" y="533" width="0.8759%" height="15" fill="rgb(210,56,17)" fg:x="88" fg:w="12"/><text x="6.6734%" y="543.50"></text></g><g><title>std::panicking::try (12 samples, 0.88%)</title><rect x="6.4234%" y="517" width="0.8759%" height="15" fill="rgb(224,130,29)" fg:x="88" fg:w="12"/><text x="6.6734%" y="527.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.88%)</title><rect x="6.4234%" y="501" width="0.8759%" height="15" fill="rgb(235,212,8)" fg:x="88" fg:w="12"/><text x="6.6734%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (12 samples, 0.88%)</title><rect x="6.4234%" y="485" width="0.8759%" height="15" fill="rgb(223,33,50)" fg:x="88" fg:w="12"/><text x="6.6734%" y="495.50"></text></g><g><title>std::rt::lang_start::{{closure}} (12 samples, 0.88%)</title><rect x="6.4234%" y="469" width="0.8759%" height="15" fill="rgb(219,149,13)" fg:x="88" fg:w="12"/><text x="6.6734%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.88%)</title><rect x="6.4234%" y="453" width="0.8759%" height="15" fill="rgb(250,156,29)" fg:x="88" fg:w="12"/><text x="6.6734%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.88%)</title><rect x="6.4234%" y="437" width="0.8759%" height="15" fill="rgb(216,193,19)" fg:x="88" fg:w="12"/><text x="6.6734%" y="447.50"></text></g><g><title>cli::main (12 samples, 0.88%)</title><rect x="6.4234%" y="421" width="0.8759%" height="15" fill="rgb(216,135,14)" fg:x="88" fg:w="12"/><text x="6.6734%" y="431.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (9 samples, 0.66%)</title><rect x="6.6423%" y="405" width="0.6569%" height="15" fill="rgb(241,47,5)" fg:x="91" fg:w="9"/><text x="6.8923%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (9 samples, 0.66%)</title><rect x="6.6423%" y="389" width="0.6569%" height="15" fill="rgb(233,42,35)" fg:x="91" fg:w="9"/><text x="6.8923%" y="399.50"></text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (9 samples, 0.66%)</title><rect x="6.6423%" y="373" width="0.6569%" height="15" fill="rgb(231,13,6)" fg:x="91" fg:w="9"/><text x="6.8923%" y="383.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (9 samples, 0.66%)</title><rect x="6.6423%" y="357" width="0.6569%" height="15" fill="rgb(207,181,40)" fg:x="91" fg:w="9"/><text x="6.8923%" y="367.50"></text></g><g><title>tokio::runtime::coop::budget (9 samples, 0.66%)</title><rect x="6.6423%" y="341" width="0.6569%" height="15" fill="rgb(254,173,49)" fg:x="91" fg:w="9"/><text x="6.8923%" y="351.50"></text></g><g><title>tokio::runtime::coop::with_budget (9 samples, 0.66%)</title><rect x="6.6423%" y="325" width="0.6569%" height="15" fill="rgb(221,1,38)" fg:x="91" fg:w="9"/><text x="6.8923%" y="335.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (9 samples, 0.66%)</title><rect x="6.6423%" y="309" width="0.6569%" height="15" fill="rgb(206,124,46)" fg:x="91" fg:w="9"/><text x="6.8923%" y="319.50"></text></g><g><title>cli::main::{{closure}} (9 samples, 0.66%)</title><rect x="6.6423%" y="293" width="0.6569%" height="15" fill="rgb(249,21,11)" fg:x="91" fg:w="9"/><text x="6.8923%" y="303.50"></text></g><g><title>cli::run::{{closure}} (8 samples, 0.58%)</title><rect x="6.7153%" y="277" width="0.5839%" height="15" fill="rgb(222,201,40)" fg:x="92" fg:w="8"/><text x="6.9653%" y="287.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream (1 samples, 0.07%)</title><rect x="7.2263%" y="261" width="0.0730%" height="15" fill="rgb(235,61,29)" fg:x="99" fg:w="1"/><text x="7.4763%" y="271.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (1 samples, 0.07%)</title><rect x="7.2263%" y="245" width="0.0730%" height="15" fill="rgb(219,207,3)" fg:x="99" fg:w="1"/><text x="7.4763%" y="255.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (1 samples, 0.07%)</title><rect x="7.2263%" y="229" width="0.0730%" height="15" fill="rgb(222,56,46)" fg:x="99" fg:w="1"/><text x="7.4763%" y="239.50"></text></g><g><title>cpal::host::alsa::Device::build_stream_inner (1 samples, 0.07%)</title><rect x="7.2263%" y="213" width="0.0730%" height="15" fill="rgb(239,76,54)" fg:x="99" fg:w="1"/><text x="7.4763%" y="223.50"></text></g><g><title>alsa::pcm::PCM::prepare (1 samples, 0.07%)</title><rect x="7.2263%" y="197" width="0.0730%" height="15" fill="rgb(231,124,27)" fg:x="99" fg:w="1"/><text x="7.4763%" y="207.50"></text></g><g><title>snd_pcm_prepare (1 samples, 0.07%)</title><rect x="7.2263%" y="181" width="0.0730%" height="15" fill="rgb(249,195,6)" fg:x="99" fg:w="1"/><text x="7.4763%" y="191.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.07%)</title><rect x="7.2263%" y="165" width="0.0730%" height="15" fill="rgb(237,174,47)" fg:x="99" fg:w="1"/><text x="7.4763%" y="175.50"></text></g><g><title>pthread_cond_wait (1 samples, 0.07%)</title><rect x="7.2263%" y="149" width="0.0730%" height="15" fill="rgb(206,201,31)" fg:x="99" fg:w="1"/><text x="7.4763%" y="159.50"></text></g><g><title>anon.188a80812113da3edb7bbe6232076cd7.31.llvm.8794834966573440152 (1 samples, 0.07%)</title><rect x="7.2993%" y="677" width="0.0730%" height="15" fill="rgb(231,57,52)" fg:x="100" fg:w="1"/><text x="7.5493%" y="687.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="7.2993%" y="661" width="0.0730%" height="15" fill="rgb(248,177,22)" fg:x="100" fg:w="1"/><text x="7.5493%" y="671.50"></text></g><g><title>mp3d_synth (1 samples, 0.07%)</title><rect x="7.3723%" y="677" width="0.0730%" height="15" fill="rgb(215,211,37)" fg:x="101" fg:w="1"/><text x="7.6223%" y="687.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.07%)</title><rect x="7.3723%" y="661" width="0.0730%" height="15" fill="rgb(241,128,51)" fg:x="101" fg:w="1"/><text x="7.6223%" y="671.50"></text></g><g><title>cli (87 samples, 6.35%)</title><rect x="1.1679%" y="693" width="6.3504%" height="15" fill="rgb(227,165,31)" fg:x="16" fg:w="87"/><text x="1.4179%" y="703.50">cli</text></g><g><title>mp3dec_decode_frame (1 samples, 0.07%)</title><rect x="7.4453%" y="677" width="0.0730%" height="15" fill="rgb(228,167,24)" fg:x="102" fg:w="1"/><text x="7.6953%" y="687.50"></text></g><g><title>L3_decode (1 samples, 0.07%)</title><rect x="7.4453%" y="661" width="0.0730%" height="15" fill="rgb(228,143,12)" fg:x="102" fg:w="1"/><text x="7.6953%" y="671.50"></text></g><g><title>L3_huffman (1 samples, 0.07%)</title><rect x="7.4453%" y="645" width="0.0730%" height="15" fill="rgb(249,149,8)" fg:x="102" fg:w="1"/><text x="7.6953%" y="655.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="7.5182%" y="517" width="0.0730%" height="15" fill="rgb(243,35,44)" fg:x="103" fg:w="1"/><text x="7.7682%" y="527.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (3 samples, 0.22%)</title><rect x="7.5182%" y="661" width="0.2190%" height="15" fill="rgb(246,89,9)" fg:x="103" fg:w="3"/><text x="7.7682%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (3 samples, 0.22%)</title><rect x="7.5182%" y="645" width="0.2190%" height="15" fill="rgb(233,213,13)" fg:x="103" fg:w="3"/><text x="7.7682%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.22%)</title><rect x="7.5182%" y="629" width="0.2190%" height="15" fill="rgb(233,141,41)" fg:x="103" fg:w="3"/><text x="7.7682%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.22%)</title><rect x="7.5182%" y="613" width="0.2190%" height="15" fill="rgb(239,167,4)" fg:x="103" fg:w="3"/><text x="7.7682%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.22%)</title><rect x="7.5182%" y="597" width="0.2190%" height="15" fill="rgb(209,217,16)" fg:x="103" fg:w="3"/><text x="7.7682%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.22%)</title><rect x="7.5182%" y="581" width="0.2190%" height="15" fill="rgb(219,88,35)" fg:x="103" fg:w="3"/><text x="7.7682%" y="591.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (3 samples, 0.22%)</title><rect x="7.5182%" y="565" width="0.2190%" height="15" fill="rgb(220,193,23)" fg:x="103" fg:w="3"/><text x="7.7682%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.22%)</title><rect x="7.5182%" y="549" width="0.2190%" height="15" fill="rgb(230,90,52)" fg:x="103" fg:w="3"/><text x="7.7682%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.22%)</title><rect x="7.5182%" y="533" width="0.2190%" height="15" fill="rgb(252,106,19)" fg:x="103" fg:w="3"/><text x="7.7682%" y="543.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (2 samples, 0.15%)</title><rect x="7.5912%" y="517" width="0.1460%" height="15" fill="rgb(206,74,20)" fg:x="104" fg:w="2"/><text x="7.8412%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.29%)</title><rect x="7.7372%" y="661" width="0.2920%" height="15" fill="rgb(230,138,44)" fg:x="106" fg:w="4"/><text x="7.9872%" y="671.50"></text></g><g><title>__poll (1 samples, 0.07%)</title><rect x="8.0292%" y="661" width="0.0730%" height="15" fill="rgb(235,182,43)" fg:x="110" fg:w="1"/><text x="8.2792%" y="671.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="8.1022%" y="661" width="0.0730%" height="15" fill="rgb(242,16,51)" fg:x="111" fg:w="1"/><text x="8.3522%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (1 samples, 0.07%)</title><rect x="8.1752%" y="661" width="0.0730%" height="15" fill="rgb(248,9,4)" fg:x="112" fg:w="1"/><text x="8.4252%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (1 samples, 0.07%)</title><rect x="8.1752%" y="645" width="0.0730%" height="15" fill="rgb(210,31,22)" fg:x="112" fg:w="1"/><text x="8.4252%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="8.1752%" y="629" width="0.0730%" height="15" fill="rgb(239,54,39)" fg:x="112" fg:w="1"/><text x="8.4252%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (2 samples, 0.15%)</title><rect x="8.2482%" y="645" width="0.1460%" height="15" fill="rgb(230,99,41)" fg:x="113" fg:w="2"/><text x="8.4982%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="8.2482%" y="629" width="0.1460%" height="15" fill="rgb(253,106,12)" fg:x="113" fg:w="2"/><text x="8.4982%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (2 samples, 0.15%)</title><rect x="8.2482%" y="613" width="0.1460%" height="15" fill="rgb(213,46,41)" fg:x="113" fg:w="2"/><text x="8.4982%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (2 samples, 0.15%)</title><rect x="8.2482%" y="597" width="0.1460%" height="15" fill="rgb(215,133,35)" fg:x="113" fg:w="2"/><text x="8.4982%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.15%)</title><rect x="8.2482%" y="581" width="0.1460%" height="15" fill="rgb(213,28,5)" fg:x="113" fg:w="2"/><text x="8.4982%" y="591.50"></text></g><g><title>cli::run::{{closure}}::{{closure}} (3 samples, 0.22%)</title><rect x="8.2482%" y="661" width="0.2190%" height="15" fill="rgb(215,77,49)" fg:x="113" fg:w="3"/><text x="8.4982%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.07%)</title><rect x="8.3942%" y="645" width="0.0730%" height="15" fill="rgb(248,100,22)" fg:x="115" fg:w="1"/><text x="8.6442%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.07%)</title><rect x="8.3942%" y="629" width="0.0730%" height="15" fill="rgb(208,67,9)" fg:x="115" fg:w="1"/><text x="8.6442%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.07%)</title><rect x="8.3942%" y="613" width="0.0730%" height="15" fill="rgb(219,133,21)" fg:x="115" fg:w="1"/><text x="8.6442%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.07%)</title><rect x="8.3942%" y="597" width="0.0730%" height="15" fill="rgb(246,46,29)" fg:x="115" fg:w="1"/><text x="8.6442%" y="607.50"></text></g><g><title>pa_context_ref (1 samples, 0.07%)</title><rect x="8.4672%" y="661" width="0.0730%" height="15" fill="rgb(246,185,52)" fg:x="116" fg:w="1"/><text x="8.7172%" y="671.50"></text></g><g><title>pa_detect_fork (1 samples, 0.07%)</title><rect x="8.5401%" y="661" width="0.0730%" height="15" fill="rgb(252,136,11)" fg:x="117" fg:w="1"/><text x="8.7901%" y="671.50"></text></g><g><title>pa_threaded_mainloop_unlock (1 samples, 0.07%)</title><rect x="8.6131%" y="661" width="0.0730%" height="15" fill="rgb(219,138,53)" fg:x="118" fg:w="1"/><text x="8.8631%" y="671.50"></text></g><g><title>[[heap]] (17 samples, 1.24%)</title><rect x="7.5182%" y="677" width="1.2409%" height="15" fill="rgb(211,51,23)" fg:x="103" fg:w="17"/><text x="7.7682%" y="687.50"></text></g><g><title>snd_pcm_status (1 samples, 0.07%)</title><rect x="8.6861%" y="661" width="0.0730%" height="15" fill="rgb(247,221,28)" fg:x="119" fg:w="1"/><text x="8.9361%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (8 samples, 0.58%)</title><rect x="9.1241%" y="517" width="0.5839%" height="15" fill="rgb(251,222,45)" fg:x="125" fg:w="8"/><text x="9.3741%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="10.4380%" y="501" width="0.0730%" height="15" fill="rgb(217,162,53)" fg:x="143" fg:w="1"/><text x="10.6880%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.07%)</title><rect x="10.4380%" y="485" width="0.0730%" height="15" fill="rgb(229,93,14)" fg:x="143" fg:w="1"/><text x="10.6880%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="10.4380%" y="469" width="0.0730%" height="15" fill="rgb(209,67,49)" fg:x="143" fg:w="1"/><text x="10.6880%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (31 samples, 2.26%)</title><rect x="9.1241%" y="549" width="2.2628%" height="15" fill="rgb(213,87,29)" fg:x="125" fg:w="31"/><text x="9.3741%" y="559.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (31 samples, 2.26%)</title><rect x="9.1241%" y="533" width="2.2628%" height="15" fill="rgb(205,151,52)" fg:x="125" fg:w="31"/><text x="9.3741%" y="543.50">c..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (23 samples, 1.68%)</title><rect x="9.7080%" y="517" width="1.6788%" height="15" fill="rgb(253,215,39)" fg:x="133" fg:w="23"/><text x="9.9580%" y="527.50"></text></g><g><title>audio::grain::Grain::next_frame (12 samples, 0.88%)</title><rect x="10.5109%" y="501" width="0.8759%" height="15" fill="rgb(221,220,41)" fg:x="144" fg:w="12"/><text x="10.7609%" y="511.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (36 samples, 2.63%)</title><rect x="8.8321%" y="645" width="2.6277%" height="15" fill="rgb(218,133,21)" fg:x="121" fg:w="36"/><text x="9.0821%" y="655.50">au..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (36 samples, 2.63%)</title><rect x="8.8321%" y="629" width="2.6277%" height="15" fill="rgb(221,193,43)" fg:x="121" fg:w="36"/><text x="9.0821%" y="639.50">co..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 2.63%)</title><rect x="8.8321%" y="613" width="2.6277%" height="15" fill="rgb(240,128,52)" fg:x="121" fg:w="36"/><text x="9.0821%" y="623.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 2.63%)</title><rect x="8.8321%" y="597" width="2.6277%" height="15" fill="rgb(253,114,12)" fg:x="121" fg:w="36"/><text x="9.0821%" y="607.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 2.63%)</title><rect x="8.8321%" y="581" width="2.6277%" height="15" fill="rgb(215,223,47)" fg:x="121" fg:w="36"/><text x="9.0821%" y="591.50">co..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (36 samples, 2.63%)</title><rect x="8.8321%" y="565" width="2.6277%" height="15" fill="rgb(248,225,23)" fg:x="121" fg:w="36"/><text x="9.0821%" y="575.50">co..</text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (1 samples, 0.07%)</title><rect x="11.3869%" y="549" width="0.0730%" height="15" fill="rgb(250,108,0)" fg:x="156" fg:w="1"/><text x="11.6369%" y="559.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="11.3869%" y="533" width="0.0730%" height="15" fill="rgb(228,208,7)" fg:x="156" fg:w="1"/><text x="11.6369%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="11.5328%" y="629" width="0.1460%" height="15" fill="rgb(244,45,10)" fg:x="158" fg:w="2"/><text x="11.7828%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="11.6058%" y="613" width="0.0730%" height="15" fill="rgb(207,125,25)" fg:x="159" fg:w="1"/><text x="11.8558%" y="623.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (41 samples, 2.99%)</title><rect x="8.7591%" y="661" width="2.9927%" height="15" fill="rgb(210,195,18)" fg:x="120" fg:w="41"/><text x="9.0091%" y="671.50">&lt;au..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (4 samples, 0.29%)</title><rect x="11.4599%" y="645" width="0.2920%" height="15" fill="rgb(249,80,12)" fg:x="157" fg:w="4"/><text x="11.7099%" y="655.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1 samples, 0.07%)</title><rect x="11.6788%" y="629" width="0.0730%" height="15" fill="rgb(221,65,9)" fg:x="160" fg:w="1"/><text x="11.9288%" y="639.50"></text></g><g><title>[libc.so.6] (8 samples, 0.58%)</title><rect x="11.7518%" y="661" width="0.5839%" height="15" fill="rgb(235,49,36)" fg:x="161" fg:w="8"/><text x="12.0018%" y="671.50"></text></g><g><title>__libc_calloc (4 samples, 0.29%)</title><rect x="12.3358%" y="661" width="0.2920%" height="15" fill="rgb(225,32,20)" fg:x="169" fg:w="4"/><text x="12.5858%" y="671.50"></text></g><g><title>__poll (2 samples, 0.15%)</title><rect x="12.6277%" y="661" width="0.1460%" height="15" fill="rgb(215,141,46)" fg:x="173" fg:w="2"/><text x="12.8777%" y="671.50"></text></g><g><title>__rdl_alloc_zeroed (1 samples, 0.07%)</title><rect x="12.7737%" y="661" width="0.0730%" height="15" fill="rgb(250,160,47)" fg:x="175" fg:w="1"/><text x="13.0237%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (1 samples, 0.07%)</title><rect x="12.7737%" y="645" width="0.0730%" height="15" fill="rgb(216,222,40)" fg:x="175" fg:w="1"/><text x="13.0237%" y="655.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.07%)</title><rect x="12.8467%" y="661" width="0.0730%" height="15" fill="rgb(234,217,39)" fg:x="176" fg:w="1"/><text x="13.0967%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.07%)</title><rect x="12.8467%" y="645" width="0.0730%" height="15" fill="rgb(207,178,40)" fg:x="176" fg:w="1"/><text x="13.0967%" y="655.50"></text></g><g><title>__rust_alloc_zeroed (1 samples, 0.07%)</title><rect x="12.9197%" y="661" width="0.0730%" height="15" fill="rgb(221,136,13)" fg:x="177" fg:w="1"/><text x="13.1697%" y="671.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.07%)</title><rect x="12.9927%" y="645" width="0.0730%" height="15" fill="rgb(249,199,10)" fg:x="178" fg:w="1"/><text x="13.2427%" y="655.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.07%)</title><rect x="12.9927%" y="629" width="0.0730%" height="15" fill="rgb(249,222,13)" fg:x="178" fg:w="1"/><text x="13.2427%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.07%)</title><rect x="12.9927%" y="613" width="0.0730%" height="15" fill="rgb(244,185,38)" fg:x="178" fg:w="1"/><text x="13.2427%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="12.9927%" y="597" width="0.0730%" height="15" fill="rgb(236,202,9)" fg:x="178" fg:w="1"/><text x="13.2427%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1 samples, 0.07%)</title><rect x="12.9927%" y="581" width="0.0730%" height="15" fill="rgb(250,229,37)" fg:x="178" fg:w="1"/><text x="13.2427%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="12.9927%" y="565" width="0.0730%" height="15" fill="rgb(206,174,23)" fg:x="178" fg:w="1"/><text x="13.2427%" y="575.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1 samples, 0.07%)</title><rect x="12.9927%" y="549" width="0.0730%" height="15" fill="rgb(211,33,43)" fg:x="178" fg:w="1"/><text x="13.2427%" y="559.50"></text></g><g><title>pa_memblock_release (1 samples, 0.07%)</title><rect x="12.9927%" y="533" width="0.0730%" height="15" fill="rgb(245,58,50)" fg:x="178" fg:w="1"/><text x="13.2427%" y="543.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (3 samples, 0.22%)</title><rect x="12.9927%" y="661" width="0.2190%" height="15" fill="rgb(244,68,36)" fg:x="178" fg:w="3"/><text x="13.2427%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (2 samples, 0.15%)</title><rect x="13.0657%" y="645" width="0.1460%" height="15" fill="rgb(232,229,15)" fg:x="179" fg:w="2"/><text x="13.3157%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="13.0657%" y="629" width="0.1460%" height="15" fill="rgb(254,30,23)" fg:x="179" fg:w="2"/><text x="13.3157%" y="639.50"></text></g><g><title>cfree (2 samples, 0.15%)</title><rect x="13.2117%" y="661" width="0.1460%" height="15" fill="rgb(235,160,14)" fg:x="181" fg:w="2"/><text x="13.4617%" y="671.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.07%)</title><rect x="13.5766%" y="613" width="0.0730%" height="15" fill="rgb(212,155,44)" fg:x="186" fg:w="1"/><text x="13.8266%" y="623.50"></text></g><g><title>std::thread::panicking (1 samples, 0.07%)</title><rect x="13.5766%" y="597" width="0.0730%" height="15" fill="rgb(226,2,50)" fg:x="186" fg:w="1"/><text x="13.8266%" y="607.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.07%)</title><rect x="13.5766%" y="581" width="0.0730%" height="15" fill="rgb(234,177,6)" fg:x="186" fg:w="1"/><text x="13.8266%" y="591.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.07%)</title><rect x="13.5766%" y="565" width="0.0730%" height="15" fill="rgb(217,24,9)" fg:x="186" fg:w="1"/><text x="13.8266%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (8 samples, 0.58%)</title><rect x="13.5766%" y="645" width="0.5839%" height="15" fill="rgb(220,13,46)" fg:x="186" fg:w="8"/><text x="13.8266%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.58%)</title><rect x="13.5766%" y="629" width="0.5839%" height="15" fill="rgb(239,221,27)" fg:x="186" fg:w="8"/><text x="13.8266%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (7 samples, 0.51%)</title><rect x="13.6496%" y="613" width="0.5109%" height="15" fill="rgb(222,198,25)" fg:x="187" fg:w="7"/><text x="13.8996%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (7 samples, 0.51%)</title><rect x="13.6496%" y="597" width="0.5109%" height="15" fill="rgb(211,99,13)" fg:x="187" fg:w="7"/><text x="13.8996%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.51%)</title><rect x="13.6496%" y="581" width="0.5109%" height="15" fill="rgb(232,111,31)" fg:x="187" fg:w="7"/><text x="13.8996%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="14.1606%" y="629" width="0.0730%" height="15" fill="rgb(245,82,37)" fg:x="194" fg:w="1"/><text x="14.4106%" y="639.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.07%)</title><rect x="14.1606%" y="613" width="0.0730%" height="15" fill="rgb(227,149,46)" fg:x="194" fg:w="1"/><text x="14.4106%" y="623.50"></text></g><g><title>std::thread::panicking (1 samples, 0.07%)</title><rect x="14.1606%" y="597" width="0.0730%" height="15" fill="rgb(218,36,50)" fg:x="194" fg:w="1"/><text x="14.4106%" y="607.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.07%)</title><rect x="14.1606%" y="581" width="0.0730%" height="15" fill="rgb(226,80,48)" fg:x="194" fg:w="1"/><text x="14.4106%" y="591.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.07%)</title><rect x="14.1606%" y="565" width="0.0730%" height="15" fill="rgb(238,224,15)" fg:x="194" fg:w="1"/><text x="14.4106%" y="575.50"></text></g><g><title>cli::run::{{closure}}::{{closure}} (21 samples, 1.53%)</title><rect x="13.3577%" y="661" width="1.5328%" height="15" fill="rgb(241,136,10)" fg:x="183" fg:w="21"/><text x="13.6077%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.73%)</title><rect x="14.1606%" y="645" width="0.7299%" height="15" fill="rgb(208,32,45)" fg:x="194" fg:w="10"/><text x="14.4106%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (9 samples, 0.66%)</title><rect x="14.2336%" y="629" width="0.6569%" height="15" fill="rgb(207,135,9)" fg:x="195" fg:w="9"/><text x="14.4836%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (9 samples, 0.66%)</title><rect x="14.2336%" y="613" width="0.6569%" height="15" fill="rgb(206,86,44)" fg:x="195" fg:w="9"/><text x="14.4836%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.66%)</title><rect x="14.2336%" y="597" width="0.6569%" height="15" fill="rgb(245,177,15)" fg:x="195" fg:w="9"/><text x="14.4836%" y="607.50"></text></g><g><title>cli::write_data (1 samples, 0.07%)</title><rect x="14.8905%" y="661" width="0.0730%" height="15" fill="rgb(206,64,50)" fg:x="204" fg:w="1"/><text x="15.1405%" y="671.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (1 samples, 0.07%)</title><rect x="14.9635%" y="661" width="0.0730%" height="15" fill="rgb(234,36,40)" fg:x="205" fg:w="1"/><text x="15.2135%" y="671.50"></text></g><g><title>pa_bytes_to_usec (1 samples, 0.07%)</title><rect x="15.0365%" y="661" width="0.0730%" height="15" fill="rgb(213,64,8)" fg:x="206" fg:w="1"/><text x="15.2865%" y="671.50"></text></g><g><title>pa_mainloop_wakeup (2 samples, 0.15%)</title><rect x="15.1095%" y="661" width="0.1460%" height="15" fill="rgb(210,75,36)" fg:x="207" fg:w="2"/><text x="15.3595%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (2 samples, 0.15%)</title><rect x="15.1095%" y="645" width="0.1460%" height="15" fill="rgb(229,88,21)" fg:x="207" fg:w="2"/><text x="15.3595%" y="655.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (2 samples, 0.15%)</title><rect x="15.1095%" y="629" width="0.1460%" height="15" fill="rgb(252,204,47)" fg:x="207" fg:w="2"/><text x="15.3595%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.15%)</title><rect x="15.1095%" y="613" width="0.1460%" height="15" fill="rgb(208,77,27)" fg:x="207" fg:w="2"/><text x="15.3595%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="15.1095%" y="597" width="0.1460%" height="15" fill="rgb(221,76,26)" fg:x="207" fg:w="2"/><text x="15.3595%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="15.1095%" y="581" width="0.1460%" height="15" fill="rgb(225,139,18)" fg:x="207" fg:w="2"/><text x="15.3595%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.15%)</title><rect x="15.1095%" y="565" width="0.1460%" height="15" fill="rgb(230,137,11)" fg:x="207" fg:w="2"/><text x="15.3595%" y="575.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (2 samples, 0.15%)</title><rect x="15.1095%" y="549" width="0.1460%" height="15" fill="rgb(212,28,1)" fg:x="207" fg:w="2"/><text x="15.3595%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.15%)</title><rect x="15.1095%" y="533" width="0.1460%" height="15" fill="rgb(248,164,17)" fg:x="207" fg:w="2"/><text x="15.3595%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.15%)</title><rect x="15.1095%" y="517" width="0.1460%" height="15" fill="rgb(222,171,42)" fg:x="207" fg:w="2"/><text x="15.3595%" y="527.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (2 samples, 0.15%)</title><rect x="15.1095%" y="501" width="0.1460%" height="15" fill="rgb(243,84,45)" fg:x="207" fg:w="2"/><text x="15.3595%" y="511.50"></text></g><g><title>pa_timeval_load (1 samples, 0.07%)</title><rect x="15.2555%" y="661" width="0.0730%" height="15" fill="rgb(252,49,23)" fg:x="209" fg:w="1"/><text x="15.5055%" y="671.50"></text></g><g><title>[anon] (91 samples, 6.64%)</title><rect x="8.7591%" y="677" width="6.6423%" height="15" fill="rgb(215,19,7)" fg:x="120" fg:w="91"/><text x="9.0091%" y="687.50">[anon]</text></g><g><title>pthread_cond_wait (1 samples, 0.07%)</title><rect x="15.3285%" y="661" width="0.0730%" height="15" fill="rgb(238,81,41)" fg:x="210" fg:w="1"/><text x="15.5785%" y="671.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.07%)</title><rect x="15.4015%" y="357" width="0.0730%" height="15" fill="rgb(210,199,37)" fg:x="211" fg:w="1"/><text x="15.6515%" y="367.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="15.4015%" y="341" width="0.0730%" height="15" fill="rgb(244,192,49)" fg:x="211" fg:w="1"/><text x="15.6515%" y="351.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.15%)</title><rect x="15.4015%" y="389" width="0.1460%" height="15" fill="rgb(226,211,11)" fg:x="211" fg:w="2"/><text x="15.6515%" y="399.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.15%)</title><rect x="15.4015%" y="373" width="0.1460%" height="15" fill="rgb(236,162,54)" fg:x="211" fg:w="2"/><text x="15.6515%" y="383.50"></text></g><g><title>pa_threaded_mainloop_lock (1 samples, 0.07%)</title><rect x="15.4745%" y="357" width="0.0730%" height="15" fill="rgb(220,229,9)" fg:x="212" fg:w="1"/><text x="15.7245%" y="367.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="15.4745%" y="341" width="0.0730%" height="15" fill="rgb(250,87,22)" fg:x="212" fg:w="1"/><text x="15.7245%" y="351.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (3 samples, 0.22%)</title><rect x="15.4015%" y="421" width="0.2190%" height="15" fill="rgb(239,43,17)" fg:x="211" fg:w="3"/><text x="15.6515%" y="431.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (3 samples, 0.22%)</title><rect x="15.4015%" y="405" width="0.2190%" height="15" fill="rgb(231,177,25)" fg:x="211" fg:w="3"/><text x="15.6515%" y="415.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (1 samples, 0.07%)</title><rect x="15.5474%" y="389" width="0.0730%" height="15" fill="rgb(219,179,1)" fg:x="213" fg:w="1"/><text x="15.7974%" y="399.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (1 samples, 0.07%)</title><rect x="15.5474%" y="373" width="0.0730%" height="15" fill="rgb(238,219,53)" fg:x="213" fg:w="1"/><text x="15.7974%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="15.5474%" y="357" width="0.0730%" height="15" fill="rgb(232,167,36)" fg:x="213" fg:w="1"/><text x="15.7974%" y="367.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="15.6204%" y="421" width="0.0730%" height="15" fill="rgb(244,19,51)" fg:x="214" fg:w="1"/><text x="15.8704%" y="431.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (1 samples, 0.07%)</title><rect x="15.6204%" y="405" width="0.0730%" height="15" fill="rgb(224,6,22)" fg:x="214" fg:w="1"/><text x="15.8704%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="15.6204%" y="389" width="0.0730%" height="15" fill="rgb(224,145,5)" fg:x="214" fg:w="1"/><text x="15.8704%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="15.6204%" y="373" width="0.0730%" height="15" fill="rgb(234,130,49)" fg:x="214" fg:w="1"/><text x="15.8704%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="15.6204%" y="357" width="0.0730%" height="15" fill="rgb(254,6,2)" fg:x="214" fg:w="1"/><text x="15.8704%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="15.6204%" y="341" width="0.0730%" height="15" fill="rgb(208,96,46)" fg:x="214" fg:w="1"/><text x="15.8704%" y="351.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="15.6204%" y="325" width="0.0730%" height="15" fill="rgb(239,3,39)" fg:x="214" fg:w="1"/><text x="15.8704%" y="335.50"></text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (1 samples, 0.07%)</title><rect x="15.6204%" y="309" width="0.0730%" height="15" fill="rgb(233,210,1)" fg:x="214" fg:w="1"/><text x="15.8704%" y="319.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="15.6204%" y="293" width="0.0730%" height="15" fill="rgb(244,137,37)" fg:x="214" fg:w="1"/><text x="15.8704%" y="303.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (5 samples, 0.36%)</title><rect x="15.4015%" y="437" width="0.3650%" height="15" fill="rgb(240,136,2)" fg:x="211" fg:w="5"/><text x="15.6515%" y="447.50"></text></g><g><title>alsa::pcm::PCM::status (1 samples, 0.07%)</title><rect x="15.6934%" y="421" width="0.0730%" height="15" fill="rgb(239,18,37)" fg:x="215" fg:w="1"/><text x="15.9434%" y="431.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (1 samples, 0.07%)</title><rect x="15.6934%" y="405" width="0.0730%" height="15" fill="rgb(218,185,22)" fg:x="215" fg:w="1"/><text x="15.9434%" y="415.50"></text></g><g><title>snd_pcm_status (1 samples, 0.07%)</title><rect x="15.6934%" y="389" width="0.0730%" height="15" fill="rgb(225,218,4)" fg:x="215" fg:w="1"/><text x="15.9434%" y="399.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="15.6934%" y="373" width="0.0730%" height="15" fill="rgb(230,182,32)" fg:x="215" fg:w="1"/><text x="15.9434%" y="383.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (1 samples, 0.07%)</title><rect x="15.6934%" y="357" width="0.0730%" height="15" fill="rgb(242,56,43)" fg:x="215" fg:w="1"/><text x="15.9434%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="15.6934%" y="341" width="0.0730%" height="15" fill="rgb(233,99,24)" fg:x="215" fg:w="1"/><text x="15.9434%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="15.6934%" y="325" width="0.0730%" height="15" fill="rgb(234,209,42)" fg:x="215" fg:w="1"/><text x="15.9434%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="15.6934%" y="309" width="0.0730%" height="15" fill="rgb(227,7,12)" fg:x="215" fg:w="1"/><text x="15.9434%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="15.6934%" y="293" width="0.0730%" height="15" fill="rgb(245,203,43)" fg:x="215" fg:w="1"/><text x="15.9434%" y="303.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="15.6934%" y="277" width="0.0730%" height="15" fill="rgb(238,205,33)" fg:x="215" fg:w="1"/><text x="15.9434%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.07%)</title><rect x="15.6934%" y="261" width="0.0730%" height="15" fill="rgb(231,56,7)" fg:x="215" fg:w="1"/><text x="15.9434%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="15.6934%" y="245" width="0.0730%" height="15" fill="rgb(244,186,29)" fg:x="215" fg:w="1"/><text x="15.9434%" y="255.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (1 samples, 0.07%)</title><rect x="15.6934%" y="229" width="0.0730%" height="15" fill="rgb(234,111,31)" fg:x="215" fg:w="1"/><text x="15.9434%" y="239.50"></text></g><g><title>audio::grain::Grain::next_frame (1 samples, 0.07%)</title><rect x="15.6934%" y="213" width="0.0730%" height="15" fill="rgb(241,149,10)" fg:x="215" fg:w="1"/><text x="15.9434%" y="223.50"></text></g><g><title>__divti3 (1 samples, 0.07%)</title><rect x="15.7664%" y="421" width="0.0730%" height="15" fill="rgb(249,206,44)" fg:x="216" fg:w="1"/><text x="16.0164%" y="431.50"></text></g><g><title>compiler_builtins::int::sdiv::__divti3 (1 samples, 0.07%)</title><rect x="15.7664%" y="405" width="0.0730%" height="15" fill="rgb(251,153,30)" fg:x="216" fg:w="1"/><text x="16.0164%" y="415.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (1 samples, 0.07%)</title><rect x="15.7664%" y="389" width="0.0730%" height="15" fill="rgb(239,152,38)" fg:x="216" fg:w="1"/><text x="16.0164%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="15.7664%" y="373" width="0.0730%" height="15" fill="rgb(249,139,47)" fg:x="216" fg:w="1"/><text x="16.0164%" y="383.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (1 samples, 0.07%)</title><rect x="15.8394%" y="421" width="0.0730%" height="15" fill="rgb(244,64,35)" fg:x="217" fg:w="1"/><text x="16.0894%" y="431.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.07%)</title><rect x="15.8394%" y="405" width="0.0730%" height="15" fill="rgb(216,46,15)" fg:x="217" fg:w="1"/><text x="16.0894%" y="415.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.07%)</title><rect x="15.8394%" y="389" width="0.0730%" height="15" fill="rgb(250,74,19)" fg:x="217" fg:w="1"/><text x="16.0894%" y="399.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.07%)</title><rect x="15.8394%" y="373" width="0.0730%" height="15" fill="rgb(249,42,33)" fg:x="217" fg:w="1"/><text x="16.0894%" y="383.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.07%)</title><rect x="15.8394%" y="357" width="0.0730%" height="15" fill="rgb(242,149,17)" fg:x="217" fg:w="1"/><text x="16.0894%" y="367.50"></text></g><g><title>pulse_wait_operation (1 samples, 0.07%)</title><rect x="15.8394%" y="341" width="0.0730%" height="15" fill="rgb(244,29,21)" fg:x="217" fg:w="1"/><text x="16.0894%" y="351.50"></text></g><g><title>pa_threaded_mainloop_wait (1 samples, 0.07%)</title><rect x="15.8394%" y="325" width="0.0730%" height="15" fill="rgb(220,130,37)" fg:x="217" fg:w="1"/><text x="16.0894%" y="335.50"></text></g><g><title>pthread_cond_wait (1 samples, 0.07%)</title><rect x="15.8394%" y="309" width="0.0730%" height="15" fill="rgb(211,67,2)" fg:x="217" fg:w="1"/><text x="16.0894%" y="319.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="15.9124%" y="261" width="0.0730%" height="15" fill="rgb(235,68,52)" fg:x="218" fg:w="1"/><text x="16.1624%" y="271.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (2 samples, 0.15%)</title><rect x="15.9124%" y="405" width="0.1460%" height="15" fill="rgb(246,142,3)" fg:x="218" fg:w="2"/><text x="16.1624%" y="415.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (2 samples, 0.15%)</title><rect x="15.9124%" y="389" width="0.1460%" height="15" fill="rgb(241,25,7)" fg:x="218" fg:w="2"/><text x="16.1624%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.15%)</title><rect x="15.9124%" y="373" width="0.1460%" height="15" fill="rgb(242,119,39)" fg:x="218" fg:w="2"/><text x="16.1624%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="15.9124%" y="357" width="0.1460%" height="15" fill="rgb(241,98,45)" fg:x="218" fg:w="2"/><text x="16.1624%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="15.9124%" y="341" width="0.1460%" height="15" fill="rgb(254,28,30)" fg:x="218" fg:w="2"/><text x="16.1624%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.15%)</title><rect x="15.9124%" y="325" width="0.1460%" height="15" fill="rgb(241,142,54)" fg:x="218" fg:w="2"/><text x="16.1624%" y="335.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (2 samples, 0.15%)</title><rect x="15.9124%" y="309" width="0.1460%" height="15" fill="rgb(222,85,15)" fg:x="218" fg:w="2"/><text x="16.1624%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.15%)</title><rect x="15.9124%" y="293" width="0.1460%" height="15" fill="rgb(210,85,47)" fg:x="218" fg:w="2"/><text x="16.1624%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.15%)</title><rect x="15.9124%" y="277" width="0.1460%" height="15" fill="rgb(224,206,25)" fg:x="218" fg:w="2"/><text x="16.1624%" y="287.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (1 samples, 0.07%)</title><rect x="15.9854%" y="261" width="0.0730%" height="15" fill="rgb(243,201,19)" fg:x="219" fg:w="1"/><text x="16.2354%" y="271.50"></text></g><g><title>audio::grain::Grain::next_frame (1 samples, 0.07%)</title><rect x="15.9854%" y="245" width="0.0730%" height="15" fill="rgb(236,59,4)" fg:x="219" fg:w="1"/><text x="16.2354%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="16.0584%" y="405" width="0.0730%" height="15" fill="rgb(254,179,45)" fg:x="220" fg:w="1"/><text x="16.3084%" y="415.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (2 samples, 0.15%)</title><rect x="16.2044%" y="373" width="0.1460%" height="15" fill="rgb(226,14,10)" fg:x="222" fg:w="2"/><text x="16.4544%" y="383.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (49 samples, 3.58%)</title><rect x="17.2263%" y="245" width="3.5766%" height="15" fill="rgb(244,27,41)" fg:x="236" fg:w="49"/><text x="17.4763%" y="255.50">&lt;aud..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 1.31%)</title><rect x="25.3285%" y="229" width="1.3139%" height="15" fill="rgb(235,35,32)" fg:x="347" fg:w="18"/><text x="25.5785%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (18 samples, 1.31%)</title><rect x="25.3285%" y="213" width="1.3139%" height="15" fill="rgb(218,68,31)" fg:x="347" fg:w="18"/><text x="25.5785%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (18 samples, 1.31%)</title><rect x="25.3285%" y="197" width="1.3139%" height="15" fill="rgb(207,120,37)" fg:x="347" fg:w="18"/><text x="25.5785%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (12 samples, 0.88%)</title><rect x="26.6423%" y="229" width="0.8759%" height="15" fill="rgb(227,98,0)" fg:x="365" fg:w="12"/><text x="26.8923%" y="239.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.88%)</title><rect x="26.6423%" y="213" width="0.8759%" height="15" fill="rgb(207,7,3)" fg:x="365" fg:w="12"/><text x="26.8923%" y="223.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.88%)</title><rect x="26.6423%" y="197" width="0.8759%" height="15" fill="rgb(206,98,19)" fg:x="365" fg:w="12"/><text x="26.8923%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (177 samples, 12.92%)</title><rect x="17.2263%" y="277" width="12.9197%" height="15" fill="rgb(217,5,26)" fg:x="236" fg:w="177"/><text x="17.4763%" y="287.50">&lt;core::iter::adapte..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (177 samples, 12.92%)</title><rect x="17.2263%" y="261" width="12.9197%" height="15" fill="rgb(235,190,38)" fg:x="236" fg:w="177"/><text x="17.4763%" y="271.50">core::iter::traits:..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (128 samples, 9.34%)</title><rect x="20.8029%" y="245" width="9.3431%" height="15" fill="rgb(247,86,24)" fg:x="285" fg:w="128"/><text x="21.0529%" y="255.50">audio::granul..</text></g><g><title>audio::grain::Grain::next_frame (36 samples, 2.63%)</title><rect x="27.5182%" y="229" width="2.6277%" height="15" fill="rgb(205,101,16)" fg:x="377" fg:w="36"/><text x="27.7682%" y="239.50">au..</text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (14 samples, 1.02%)</title><rect x="30.1460%" y="261" width="1.0219%" height="15" fill="rgb(246,168,33)" fg:x="413" fg:w="14"/><text x="30.3960%" y="271.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (213 samples, 15.55%)</title><rect x="16.3504%" y="373" width="15.5474%" height="15" fill="rgb(231,114,1)" fg:x="224" fg:w="213"/><text x="16.6004%" y="383.50">audio::granular_synthesi..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (213 samples, 15.55%)</title><rect x="16.3504%" y="357" width="15.5474%" height="15" fill="rgb(207,184,53)" fg:x="224" fg:w="213"/><text x="16.6004%" y="367.50">core::iter::traits::iter..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (213 samples, 15.55%)</title><rect x="16.3504%" y="341" width="15.5474%" height="15" fill="rgb(224,95,51)" fg:x="224" fg:w="213"/><text x="16.6004%" y="351.50">&lt;core::iter::adapters::e..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (213 samples, 15.55%)</title><rect x="16.3504%" y="325" width="15.5474%" height="15" fill="rgb(212,188,45)" fg:x="224" fg:w="213"/><text x="16.6004%" y="335.50">&lt;core::iter::adapters::f..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (213 samples, 15.55%)</title><rect x="16.3504%" y="309" width="15.5474%" height="15" fill="rgb(223,154,38)" fg:x="224" fg:w="213"/><text x="16.6004%" y="319.50">core::iter::traits::iter..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (213 samples, 15.55%)</title><rect x="16.3504%" y="293" width="15.5474%" height="15" fill="rgb(251,22,52)" fg:x="224" fg:w="213"/><text x="16.6004%" y="303.50">core::iter::adapters::fi..</text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (24 samples, 1.75%)</title><rect x="30.1460%" y="277" width="1.7518%" height="15" fill="rgb(229,209,22)" fg:x="413" fg:w="24"/><text x="30.3960%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (10 samples, 0.73%)</title><rect x="31.1679%" y="261" width="0.7299%" height="15" fill="rgb(234,138,34)" fg:x="427" fg:w="10"/><text x="31.4179%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.58%)</title><rect x="32.1168%" y="357" width="0.5839%" height="15" fill="rgb(212,95,11)" fg:x="440" fg:w="8"/><text x="32.3668%" y="367.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::num_channels_for_frame (6 samples, 0.44%)</title><rect x="32.7007%" y="357" width="0.4380%" height="15" fill="rgb(240,179,47)" fg:x="448" fg:w="6"/><text x="32.9507%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (6 samples, 0.44%)</title><rect x="33.1387%" y="357" width="0.4380%" height="15" fill="rgb(240,163,11)" fg:x="454" fg:w="6"/><text x="33.3887%" y="367.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (240 samples, 17.52%)</title><rect x="16.1314%" y="389" width="17.5182%" height="15" fill="rgb(236,37,12)" fg:x="221" fg:w="240"/><text x="16.3814%" y="399.50">&lt;audio::granular_synthesize..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (24 samples, 1.75%)</title><rect x="31.8978%" y="373" width="1.7518%" height="15" fill="rgb(232,164,16)" fg:x="437" fg:w="24"/><text x="32.1478%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.07%)</title><rect x="33.5766%" y="357" width="0.0730%" height="15" fill="rgb(244,205,15)" fg:x="460" fg:w="1"/><text x="33.8266%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.07%)</title><rect x="33.5766%" y="341" width="0.0730%" height="15" fill="rgb(223,117,47)" fg:x="460" fg:w="1"/><text x="33.8266%" y="351.50"></text></g><g><title>__libc_calloc (11 samples, 0.80%)</title><rect x="33.6496%" y="389" width="0.8029%" height="15" fill="rgb(244,107,35)" fg:x="461" fg:w="11"/><text x="33.8996%" y="399.50"></text></g><g><title>[libc.so.6] (12 samples, 0.88%)</title><rect x="34.5985%" y="261" width="0.8759%" height="15" fill="rgb(205,140,8)" fg:x="474" fg:w="12"/><text x="34.8485%" y="271.50"></text></g><g><title>__poll (1 samples, 0.07%)</title><rect x="35.7664%" y="245" width="0.0730%" height="15" fill="rgb(228,84,46)" fg:x="490" fg:w="1"/><text x="36.0164%" y="255.50"></text></g><g><title>__libc_calloc (8 samples, 0.58%)</title><rect x="35.4745%" y="261" width="0.5839%" height="15" fill="rgb(254,188,9)" fg:x="486" fg:w="8"/><text x="35.7245%" y="271.50"></text></g><g><title>cfree (3 samples, 0.22%)</title><rect x="35.8394%" y="245" width="0.2190%" height="15" fill="rgb(206,112,54)" fg:x="491" fg:w="3"/><text x="36.0894%" y="255.50"></text></g><g><title>alloc::vec::from_elem (27 samples, 1.97%)</title><rect x="34.5985%" y="373" width="1.9708%" height="15" fill="rgb(216,84,49)" fg:x="474" fg:w="27"/><text x="34.8485%" y="383.50">a..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (27 samples, 1.97%)</title><rect x="34.5985%" y="357" width="1.9708%" height="15" fill="rgb(214,194,35)" fg:x="474" fg:w="27"/><text x="34.8485%" y="367.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (27 samples, 1.97%)</title><rect x="34.5985%" y="341" width="1.9708%" height="15" fill="rgb(249,28,3)" fg:x="474" fg:w="27"/><text x="34.8485%" y="351.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 1.97%)</title><rect x="34.5985%" y="325" width="1.9708%" height="15" fill="rgb(222,56,52)" fg:x="474" fg:w="27"/><text x="34.8485%" y="335.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (27 samples, 1.97%)</title><rect x="34.5985%" y="309" width="1.9708%" height="15" fill="rgb(245,217,50)" fg:x="474" fg:w="27"/><text x="34.8485%" y="319.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 1.97%)</title><rect x="34.5985%" y="293" width="1.9708%" height="15" fill="rgb(213,201,24)" fg:x="474" fg:w="27"/><text x="34.8485%" y="303.50">a..</text></g><g><title>alloc::alloc::alloc_zeroed (27 samples, 1.97%)</title><rect x="34.5985%" y="277" width="1.9708%" height="15" fill="rgb(248,116,28)" fg:x="474" fg:w="27"/><text x="34.8485%" y="287.50">a..</text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (7 samples, 0.51%)</title><rect x="36.0584%" y="261" width="0.5109%" height="15" fill="rgb(219,72,43)" fg:x="494" fg:w="7"/><text x="36.3084%" y="271.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (7 samples, 0.51%)</title><rect x="36.0584%" y="245" width="0.5109%" height="15" fill="rgb(209,138,14)" fg:x="494" fg:w="7"/><text x="36.3084%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.51%)</title><rect x="36.0584%" y="229" width="0.5109%" height="15" fill="rgb(222,18,33)" fg:x="494" fg:w="7"/><text x="36.3084%" y="239.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (38 samples, 2.77%)</title><rect x="34.4526%" y="389" width="2.7737%" height="15" fill="rgb(213,199,7)" fg:x="472" fg:w="38"/><text x="34.7026%" y="399.50">au..</text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (9 samples, 0.66%)</title><rect x="36.5693%" y="373" width="0.6569%" height="15" fill="rgb(250,110,10)" fg:x="501" fg:w="9"/><text x="36.8193%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.66%)</title><rect x="36.5693%" y="357" width="0.6569%" height="15" fill="rgb(248,123,6)" fg:x="501" fg:w="9"/><text x="36.8193%" y="367.50"></text></g><g><title>[libc.so.6] (302 samples, 22.04%)</title><rect x="15.4015%" y="677" width="22.0438%" height="15" fill="rgb(206,91,31)" fg:x="211" fg:w="302"/><text x="15.6515%" y="687.50">[libc.so.6]</text></g><g><title>[libc.so.6] (302 samples, 22.04%)</title><rect x="15.4015%" y="661" width="22.0438%" height="15" fill="rgb(211,154,13)" fg:x="211" fg:w="302"/><text x="15.6515%" y="671.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (302 samples, 22.04%)</title><rect x="15.4015%" y="645" width="22.0438%" height="15" fill="rgb(225,148,7)" fg:x="211" fg:w="302"/><text x="15.6515%" y="655.50">std::sys::unix::thread::Thread::new..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (302 samples, 22.04%)</title><rect x="15.4015%" y="629" width="22.0438%" height="15" fill="rgb(220,160,43)" fg:x="211" fg:w="302"/><text x="15.6515%" y="639.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (302 samples, 22.04%)</title><rect x="15.4015%" y="613" width="22.0438%" height="15" fill="rgb(213,52,39)" fg:x="211" fg:w="302"/><text x="15.6515%" y="623.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (302 samples, 22.04%)</title><rect x="15.4015%" y="597" width="22.0438%" height="15" fill="rgb(243,137,7)" fg:x="211" fg:w="302"/><text x="15.6515%" y="607.50">core::ops::function::FnOnce::call_o..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (302 samples, 22.04%)</title><rect x="15.4015%" y="581" width="22.0438%" height="15" fill="rgb(230,79,13)" fg:x="211" fg:w="302"/><text x="15.6515%" y="591.50">std::thread::Builder::spawn_uncheck..</text></g><g><title>std::panic::catch_unwind (302 samples, 22.04%)</title><rect x="15.4015%" y="565" width="22.0438%" height="15" fill="rgb(247,105,23)" fg:x="211" fg:w="302"/><text x="15.6515%" y="575.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (302 samples, 22.04%)</title><rect x="15.4015%" y="549" width="22.0438%" height="15" fill="rgb(223,179,41)" fg:x="211" fg:w="302"/><text x="15.6515%" y="559.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (302 samples, 22.04%)</title><rect x="15.4015%" y="533" width="22.0438%" height="15" fill="rgb(218,9,34)" fg:x="211" fg:w="302"/><text x="15.6515%" y="543.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (302 samples, 22.04%)</title><rect x="15.4015%" y="517" width="22.0438%" height="15" fill="rgb(222,106,8)" fg:x="211" fg:w="302"/><text x="15.6515%" y="527.50">&lt;core::panic::unwind_safe::AssertUn..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (302 samples, 22.04%)</title><rect x="15.4015%" y="501" width="22.0438%" height="15" fill="rgb(211,220,0)" fg:x="211" fg:w="302"/><text x="15.6515%" y="511.50">std::thread::Builder::spawn_uncheck..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (302 samples, 22.04%)</title><rect x="15.4015%" y="485" width="22.0438%" height="15" fill="rgb(229,52,16)" fg:x="211" fg:w="302"/><text x="15.6515%" y="495.50">std::sys_common::backtrace::__rust_..</text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (302 samples, 22.04%)</title><rect x="15.4015%" y="469" width="22.0438%" height="15" fill="rgb(212,155,18)" fg:x="211" fg:w="302"/><text x="15.6515%" y="479.50">cpal::host::alsa::Stream::new_outpu..</text></g><g><title>cpal::host::alsa::output_stream_worker (302 samples, 22.04%)</title><rect x="15.4015%" y="453" width="22.0438%" height="15" fill="rgb(242,21,14)" fg:x="211" fg:w="302"/><text x="15.6515%" y="463.50">cpal::host::alsa::output_stream_wor..</text></g><g><title>cpal::host::alsa::process_output (297 samples, 21.68%)</title><rect x="15.7664%" y="437" width="21.6788%" height="15" fill="rgb(222,19,48)" fg:x="216" fg:w="297"/><text x="16.0164%" y="447.50">cpal::host::alsa::process_output</text></g><g><title>cli::write_data (295 samples, 21.53%)</title><rect x="15.9124%" y="421" width="21.5328%" height="15" fill="rgb(232,45,27)" fg:x="218" fg:w="295"/><text x="16.1624%" y="431.50">cli::write_data</text></g><g><title>cli::run::{{closure}}::{{closure}} (292 samples, 21.31%)</title><rect x="16.1314%" y="405" width="21.3139%" height="15" fill="rgb(249,103,42)" fg:x="221" fg:w="292"/><text x="16.3814%" y="415.50">cli::run::{{closure}}::{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (3 samples, 0.22%)</title><rect x="37.2263%" y="389" width="0.2190%" height="15" fill="rgb(246,81,33)" fg:x="510" fg:w="3"/><text x="37.4763%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.22%)</title><rect x="37.2263%" y="373" width="0.2190%" height="15" fill="rgb(252,33,42)" fg:x="510" fg:w="3"/><text x="37.4763%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (3 samples, 0.22%)</title><rect x="37.2263%" y="357" width="0.2190%" height="15" fill="rgb(209,212,41)" fg:x="510" fg:w="3"/><text x="37.4763%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (2 samples, 0.15%)</title><rect x="37.2993%" y="341" width="0.1460%" height="15" fill="rgb(207,154,6)" fg:x="511" fg:w="2"/><text x="37.5493%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.15%)</title><rect x="37.2993%" y="325" width="0.1460%" height="15" fill="rgb(223,64,47)" fg:x="511" fg:w="2"/><text x="37.5493%" y="335.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="37.4453%" y="677" width="0.0730%" height="15" fill="rgb(211,161,38)" fg:x="513" fg:w="1"/><text x="37.6953%" y="687.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="37.4453%" y="661" width="0.0730%" height="15" fill="rgb(219,138,40)" fg:x="513" fg:w="1"/><text x="37.6953%" y="671.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (1 samples, 0.07%)</title><rect x="37.5182%" y="661" width="0.0730%" height="15" fill="rgb(241,228,46)" fg:x="514" fg:w="1"/><text x="37.7682%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (2 samples, 0.15%)</title><rect x="37.9562%" y="645" width="0.1460%" height="15" fill="rgb(223,209,38)" fg:x="520" fg:w="2"/><text x="38.2062%" y="655.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::refresh_interval (2 samples, 0.15%)</title><rect x="38.1022%" y="645" width="0.1460%" height="15" fill="rgb(236,164,45)" fg:x="522" fg:w="2"/><text x="38.3522%" y="655.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (21 samples, 1.53%)</title><rect x="39.0511%" y="517" width="1.5328%" height="15" fill="rgb(231,15,5)" fg:x="535" fg:w="21"/><text x="39.3011%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.58%)</title><rect x="42.9197%" y="501" width="0.5839%" height="15" fill="rgb(252,35,15)" fg:x="588" fg:w="8"/><text x="43.1697%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (8 samples, 0.58%)</title><rect x="42.9197%" y="485" width="0.5839%" height="15" fill="rgb(248,181,18)" fg:x="588" fg:w="8"/><text x="43.1697%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (8 samples, 0.58%)</title><rect x="42.9197%" y="469" width="0.5839%" height="15" fill="rgb(233,39,42)" fg:x="588" fg:w="8"/><text x="43.1697%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.51%)</title><rect x="43.5036%" y="501" width="0.5109%" height="15" fill="rgb(238,110,33)" fg:x="596" fg:w="7"/><text x="43.7536%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7 samples, 0.51%)</title><rect x="43.5036%" y="485" width="0.5109%" height="15" fill="rgb(233,195,10)" fg:x="596" fg:w="7"/><text x="43.7536%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.51%)</title><rect x="43.5036%" y="469" width="0.5109%" height="15" fill="rgb(254,105,3)" fg:x="596" fg:w="7"/><text x="43.7536%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (85 samples, 6.20%)</title><rect x="39.0511%" y="549" width="6.2044%" height="15" fill="rgb(221,225,9)" fg:x="535" fg:w="85"/><text x="39.3011%" y="559.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (85 samples, 6.20%)</title><rect x="39.0511%" y="533" width="6.2044%" height="15" fill="rgb(224,227,45)" fg:x="535" fg:w="85"/><text x="39.3011%" y="543.50">core::it..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (64 samples, 4.67%)</title><rect x="40.5839%" y="517" width="4.6715%" height="15" fill="rgb(229,198,43)" fg:x="556" fg:w="64"/><text x="40.8339%" y="527.50">audio..</text></g><g><title>audio::grain::Grain::next_frame (17 samples, 1.24%)</title><rect x="44.0146%" y="501" width="1.2409%" height="15" fill="rgb(206,209,35)" fg:x="603" fg:w="17"/><text x="44.2646%" y="511.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (12 samples, 0.88%)</title><rect x="45.2555%" y="533" width="0.8759%" height="15" fill="rgb(245,195,53)" fg:x="620" fg:w="12"/><text x="45.5055%" y="543.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (114 samples, 8.32%)</title><rect x="38.2482%" y="645" width="8.3212%" height="15" fill="rgb(240,92,26)" fg:x="524" fg:w="114"/><text x="38.4982%" y="655.50">audio::granu..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (114 samples, 8.32%)</title><rect x="38.2482%" y="629" width="8.3212%" height="15" fill="rgb(207,40,23)" fg:x="524" fg:w="114"/><text x="38.4982%" y="639.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (114 samples, 8.32%)</title><rect x="38.2482%" y="613" width="8.3212%" height="15" fill="rgb(223,111,35)" fg:x="524" fg:w="114"/><text x="38.4982%" y="623.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (114 samples, 8.32%)</title><rect x="38.2482%" y="597" width="8.3212%" height="15" fill="rgb(229,147,28)" fg:x="524" fg:w="114"/><text x="38.4982%" y="607.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (114 samples, 8.32%)</title><rect x="38.2482%" y="581" width="8.3212%" height="15" fill="rgb(211,29,28)" fg:x="524" fg:w="114"/><text x="38.4982%" y="591.50">core::iter::..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (114 samples, 8.32%)</title><rect x="38.2482%" y="565" width="8.3212%" height="15" fill="rgb(228,72,33)" fg:x="524" fg:w="114"/><text x="38.4982%" y="575.50">core::iter::..</text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (18 samples, 1.31%)</title><rect x="45.2555%" y="549" width="1.3139%" height="15" fill="rgb(205,214,31)" fg:x="620" fg:w="18"/><text x="45.5055%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (6 samples, 0.44%)</title><rect x="46.1314%" y="533" width="0.4380%" height="15" fill="rgb(224,111,15)" fg:x="632" fg:w="6"/><text x="46.3814%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="47.0073%" y="629" width="0.0730%" height="15" fill="rgb(253,21,26)" fg:x="644" fg:w="1"/><text x="47.2573%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.07%)</title><rect x="47.0803%" y="629" width="0.0730%" height="15" fill="rgb(245,139,43)" fg:x="645" fg:w="1"/><text x="47.3303%" y="639.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::num_channels_for_frame (4 samples, 0.29%)</title><rect x="47.1533%" y="629" width="0.2920%" height="15" fill="rgb(252,170,7)" fg:x="646" fg:w="4"/><text x="47.4033%" y="639.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (137 samples, 10.00%)</title><rect x="37.5912%" y="661" width="10.0000%" height="15" fill="rgb(231,118,14)" fg:x="515" fg:w="137"/><text x="37.8412%" y="671.50">&lt;audio::granul..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (14 samples, 1.02%)</title><rect x="46.5693%" y="645" width="1.0219%" height="15" fill="rgb(238,83,0)" fg:x="638" fg:w="14"/><text x="46.8193%" y="655.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (2 samples, 0.15%)</title><rect x="47.4453%" y="629" width="0.1460%" height="15" fill="rgb(221,39,39)" fg:x="650" fg:w="2"/><text x="47.6953%" y="639.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="47.5912%" y="661" width="0.0730%" height="15" fill="rgb(222,119,46)" fg:x="652" fg:w="1"/><text x="47.8412%" y="671.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.15%)</title><rect x="47.6642%" y="661" width="0.1460%" height="15" fill="rgb(222,165,49)" fg:x="653" fg:w="2"/><text x="47.9142%" y="671.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.07%)</title><rect x="47.8102%" y="661" width="0.0730%" height="15" fill="rgb(219,113,52)" fg:x="655" fg:w="1"/><text x="48.0602%" y="671.50"></text></g><g><title>[libc.so.6] (31 samples, 2.26%)</title><rect x="47.8832%" y="661" width="2.2628%" height="15" fill="rgb(214,7,15)" fg:x="656" fg:w="31"/><text x="48.1332%" y="671.50">[..</text></g><g><title>[libpulse.so.0.24.1] (3 samples, 0.22%)</title><rect x="50.1460%" y="661" width="0.2190%" height="15" fill="rgb(235,32,4)" fg:x="687" fg:w="3"/><text x="50.3960%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.15%)</title><rect x="50.3650%" y="661" width="0.1460%" height="15" fill="rgb(238,90,54)" fg:x="690" fg:w="2"/><text x="50.6150%" y="671.50"></text></g><g><title>__libc_calloc (41 samples, 2.99%)</title><rect x="50.5109%" y="661" width="2.9927%" height="15" fill="rgb(213,208,19)" fg:x="692" fg:w="41"/><text x="50.7609%" y="671.50">__l..</text></g><g><title>__rdl_alloc_zeroed (3 samples, 0.22%)</title><rect x="53.5036%" y="661" width="0.2190%" height="15" fill="rgb(233,156,4)" fg:x="733" fg:w="3"/><text x="53.7536%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3 samples, 0.22%)</title><rect x="53.5036%" y="645" width="0.2190%" height="15" fill="rgb(207,194,5)" fg:x="733" fg:w="3"/><text x="53.7536%" y="655.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.15%)</title><rect x="53.7226%" y="661" width="0.1460%" height="15" fill="rgb(206,111,30)" fg:x="736" fg:w="2"/><text x="53.9726%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.15%)</title><rect x="53.7226%" y="645" width="0.1460%" height="15" fill="rgb(243,70,54)" fg:x="736" fg:w="2"/><text x="53.9726%" y="655.50"></text></g><g><title>alsa::poll::poll (1 samples, 0.07%)</title><rect x="53.8686%" y="661" width="0.0730%" height="15" fill="rgb(242,28,8)" fg:x="738" fg:w="1"/><text x="54.1186%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 5.04%)</title><rect x="54.3066%" y="629" width="5.0365%" height="15" fill="rgb(219,106,18)" fg:x="744" fg:w="69"/><text x="54.5566%" y="639.50">&lt;core:..</text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (79 samples, 5.77%)</title><rect x="53.9416%" y="661" width="5.7664%" height="15" fill="rgb(244,222,10)" fg:x="739" fg:w="79"/><text x="54.1916%" y="671.50">audio::..</text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (74 samples, 5.40%)</title><rect x="54.3066%" y="645" width="5.4015%" height="15" fill="rgb(236,179,52)" fg:x="744" fg:w="74"/><text x="54.5566%" y="655.50">audio::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (5 samples, 0.36%)</title><rect x="59.3431%" y="629" width="0.3650%" height="15" fill="rgb(213,23,39)" fg:x="813" fg:w="5"/><text x="59.5931%" y="639.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (5 samples, 0.36%)</title><rect x="59.3431%" y="613" width="0.3650%" height="15" fill="rgb(238,48,10)" fg:x="813" fg:w="5"/><text x="59.5931%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.36%)</title><rect x="59.3431%" y="597" width="0.3650%" height="15" fill="rgb(251,196,23)" fg:x="813" fg:w="5"/><text x="59.5931%" y="607.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.07%)</title><rect x="59.6350%" y="581" width="0.0730%" height="15" fill="rgb(250,152,24)" fg:x="817" fg:w="1"/><text x="59.8850%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.07%)</title><rect x="59.6350%" y="565" width="0.0730%" height="15" fill="rgb(209,150,17)" fg:x="817" fg:w="1"/><text x="59.8850%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.07%)</title><rect x="59.6350%" y="549" width="0.0730%" height="15" fill="rgb(234,202,34)" fg:x="817" fg:w="1"/><text x="59.8850%" y="559.50"></text></g><g><title>cfree (2 samples, 0.15%)</title><rect x="59.7080%" y="661" width="0.1460%" height="15" fill="rgb(253,148,53)" fg:x="818" fg:w="2"/><text x="59.9580%" y="671.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.07%)</title><rect x="59.9270%" y="613" width="0.0730%" height="15" fill="rgb(218,129,16)" fg:x="821" fg:w="1"/><text x="60.1770%" y="623.50"></text></g><g><title>std::thread::panicking (1 samples, 0.07%)</title><rect x="59.9270%" y="597" width="0.0730%" height="15" fill="rgb(216,85,19)" fg:x="821" fg:w="1"/><text x="60.1770%" y="607.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.07%)</title><rect x="59.9270%" y="581" width="0.0730%" height="15" fill="rgb(235,228,7)" fg:x="821" fg:w="1"/><text x="60.1770%" y="591.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.07%)</title><rect x="59.9270%" y="565" width="0.0730%" height="15" fill="rgb(245,175,0)" fg:x="821" fg:w="1"/><text x="60.1770%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (10 samples, 0.73%)</title><rect x="59.9270%" y="645" width="0.7299%" height="15" fill="rgb(208,168,36)" fg:x="821" fg:w="10"/><text x="60.1770%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.73%)</title><rect x="59.9270%" y="629" width="0.7299%" height="15" fill="rgb(246,171,24)" fg:x="821" fg:w="10"/><text x="60.1770%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (9 samples, 0.66%)</title><rect x="60.0000%" y="613" width="0.6569%" height="15" fill="rgb(215,142,24)" fg:x="822" fg:w="9"/><text x="60.2500%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (8 samples, 0.58%)</title><rect x="60.0730%" y="597" width="0.5839%" height="15" fill="rgb(250,187,7)" fg:x="823" fg:w="8"/><text x="60.3230%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.58%)</title><rect x="60.0730%" y="581" width="0.5839%" height="15" fill="rgb(228,66,33)" fg:x="823" fg:w="8"/><text x="60.3230%" y="591.50"></text></g><g><title>cli::run::{{closure}}::{{closure}} (16 samples, 1.17%)</title><rect x="59.8540%" y="661" width="1.1679%" height="15" fill="rgb(234,215,21)" fg:x="820" fg:w="16"/><text x="60.1040%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.36%)</title><rect x="60.6569%" y="645" width="0.3650%" height="15" fill="rgb(222,191,20)" fg:x="831" fg:w="5"/><text x="60.9069%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (5 samples, 0.36%)</title><rect x="60.6569%" y="629" width="0.3650%" height="15" fill="rgb(245,79,54)" fg:x="831" fg:w="5"/><text x="60.9069%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.36%)</title><rect x="60.6569%" y="613" width="0.3650%" height="15" fill="rgb(240,10,37)" fg:x="831" fg:w="5"/><text x="60.9069%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.36%)</title><rect x="60.6569%" y="597" width="0.3650%" height="15" fill="rgb(214,192,32)" fg:x="831" fg:w="5"/><text x="60.9069%" y="607.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (1 samples, 0.07%)</title><rect x="61.0219%" y="661" width="0.0730%" height="15" fill="rgb(209,36,54)" fg:x="836" fg:w="1"/><text x="61.2719%" y="671.50"></text></g><g><title>pa_frame_size (1 samples, 0.07%)</title><rect x="61.0949%" y="661" width="0.0730%" height="15" fill="rgb(220,10,11)" fg:x="837" fg:w="1"/><text x="61.3449%" y="671.50"></text></g><g><title>pa_mainloop_wakeup (1 samples, 0.07%)</title><rect x="61.1679%" y="661" width="0.0730%" height="15" fill="rgb(221,106,17)" fg:x="838" fg:w="1"/><text x="61.4179%" y="671.50"></text></g><g><title>pa_smoother_2_get (1 samples, 0.07%)</title><rect x="61.2409%" y="661" width="0.0730%" height="15" fill="rgb(251,142,44)" fg:x="839" fg:w="1"/><text x="61.4909%" y="671.50"></text></g><g><title>pa_thread_self (1 samples, 0.07%)</title><rect x="61.3139%" y="661" width="0.0730%" height="15" fill="rgb(238,13,15)" fg:x="840" fg:w="1"/><text x="61.5639%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.07%)</title><rect x="61.3869%" y="661" width="0.0730%" height="15" fill="rgb(208,107,27)" fg:x="841" fg:w="1"/><text x="61.6369%" y="671.50"></text></g><g><title>pthread_cond_wait (1 samples, 0.07%)</title><rect x="61.4599%" y="661" width="0.0730%" height="15" fill="rgb(205,136,37)" fg:x="842" fg:w="1"/><text x="61.7099%" y="671.50"></text></g><g><title>snd_pcm_state (1 samples, 0.07%)</title><rect x="61.5328%" y="661" width="0.0730%" height="15" fill="rgb(250,205,27)" fg:x="843" fg:w="1"/><text x="61.7828%" y="671.50"></text></g><g><title>snd_pcm_status (3 samples, 0.22%)</title><rect x="61.6058%" y="661" width="0.2190%" height="15" fill="rgb(210,80,43)" fg:x="844" fg:w="3"/><text x="61.8558%" y="671.50"></text></g><g><title>[unknown] (334 samples, 24.38%)</title><rect x="37.5182%" y="677" width="24.3796%" height="15" fill="rgb(247,160,36)" fg:x="514" fg:w="334"/><text x="37.7682%" y="687.50">[unknown]</text></g><g><title>write (1 samples, 0.07%)</title><rect x="61.8248%" y="661" width="0.0730%" height="15" fill="rgb(234,13,49)" fg:x="847" fg:w="1"/><text x="62.0748%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="61.8978%" y="661" width="0.0730%" height="15" fill="rgb(234,122,0)" fg:x="848" fg:w="1"/><text x="62.1478%" y="671.50"></text></g><g><title>cpal_alsa_out (747 samples, 54.53%)</title><rect x="7.5182%" y="693" width="54.5255%" height="15" fill="rgb(207,146,38)" fg:x="103" fg:w="747"/><text x="7.7682%" y="703.50">cpal_alsa_out</text></g><g><title>std::panicking::HOOK (2 samples, 0.15%)</title><rect x="61.8978%" y="677" width="0.1460%" height="15" fill="rgb(207,177,25)" fg:x="848" fg:w="2"/><text x="62.1478%" y="687.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="61.9708%" y="661" width="0.0730%" height="15" fill="rgb(211,178,42)" fg:x="849" fg:w="1"/><text x="62.2208%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="62.0438%" y="661" width="0.0730%" height="15" fill="rgb(230,69,54)" fg:x="850" fg:w="1"/><text x="62.2938%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (1 samples, 0.07%)</title><rect x="62.0438%" y="645" width="0.0730%" height="15" fill="rgb(214,135,41)" fg:x="850" fg:w="1"/><text x="62.2938%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="62.0438%" y="629" width="0.0730%" height="15" fill="rgb(237,67,25)" fg:x="850" fg:w="1"/><text x="62.2938%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="62.0438%" y="613" width="0.0730%" height="15" fill="rgb(222,189,50)" fg:x="850" fg:w="1"/><text x="62.2938%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="62.0438%" y="597" width="0.0730%" height="15" fill="rgb(245,148,34)" fg:x="850" fg:w="1"/><text x="62.2938%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="62.0438%" y="581" width="0.0730%" height="15" fill="rgb(222,29,6)" fg:x="850" fg:w="1"/><text x="62.2938%" y="591.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="62.0438%" y="565" width="0.0730%" height="15" fill="rgb(221,189,43)" fg:x="850" fg:w="1"/><text x="62.2938%" y="575.50"></text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (1 samples, 0.07%)</title><rect x="62.0438%" y="549" width="0.0730%" height="15" fill="rgb(207,36,27)" fg:x="850" fg:w="1"/><text x="62.2938%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.07%)</title><rect x="62.0438%" y="533" width="0.0730%" height="15" fill="rgb(217,90,24)" fg:x="850" fg:w="1"/><text x="62.2938%" y="543.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="62.1168%" y="661" width="0.1460%" height="15" fill="rgb(224,66,35)" fg:x="851" fg:w="2"/><text x="62.3668%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (5 samples, 0.36%)</title><rect x="62.2628%" y="661" width="0.3650%" height="15" fill="rgb(221,13,50)" fg:x="853" fg:w="5"/><text x="62.5128%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="62.5547%" y="645" width="0.0730%" height="15" fill="rgb(236,68,49)" fg:x="857" fg:w="1"/><text x="62.8047%" y="655.50"></text></g><g><title>[libpulsecommon-15.99.so] (13 samples, 0.95%)</title><rect x="62.6277%" y="661" width="0.9489%" height="15" fill="rgb(229,146,28)" fg:x="858" fg:w="13"/><text x="62.8777%" y="671.50"></text></g><g><title>__errno_location (1 samples, 0.07%)</title><rect x="63.5766%" y="661" width="0.0730%" height="15" fill="rgb(225,31,38)" fg:x="871" fg:w="1"/><text x="63.8266%" y="671.50"></text></g><g><title>__libc_calloc (2 samples, 0.15%)</title><rect x="63.6496%" y="661" width="0.1460%" height="15" fill="rgb(250,208,3)" fg:x="872" fg:w="2"/><text x="63.8996%" y="671.50"></text></g><g><title>__poll (2 samples, 0.15%)</title><rect x="63.7956%" y="661" width="0.1460%" height="15" fill="rgb(246,54,23)" fg:x="874" fg:w="2"/><text x="64.0456%" y="671.50"></text></g><g><title>__poll_chk (1 samples, 0.07%)</title><rect x="63.9416%" y="661" width="0.0730%" height="15" fill="rgb(243,76,11)" fg:x="876" fg:w="1"/><text x="64.1916%" y="671.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="64.0146%" y="661" width="0.0730%" height="15" fill="rgb(245,21,50)" fg:x="877" fg:w="1"/><text x="64.2646%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.07%)</title><rect x="64.0876%" y="661" width="0.0730%" height="15" fill="rgb(228,9,43)" fg:x="878" fg:w="1"/><text x="64.3376%" y="671.50"></text></g><g><title>pa_context_ref (1 samples, 0.07%)</title><rect x="64.1606%" y="661" width="0.0730%" height="15" fill="rgb(208,100,47)" fg:x="879" fg:w="1"/><text x="64.4106%" y="671.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (1 samples, 0.07%)</title><rect x="64.2336%" y="661" width="0.0730%" height="15" fill="rgb(232,26,8)" fg:x="880" fg:w="1"/><text x="64.4836%" y="671.50"></text></g><g><title>pa_mainloop_dispatch (3 samples, 0.22%)</title><rect x="64.3066%" y="661" width="0.2190%" height="15" fill="rgb(216,166,38)" fg:x="881" fg:w="3"/><text x="64.5566%" y="671.50"></text></g><g><title>pa_mainloop_iterate (2 samples, 0.15%)</title><rect x="64.5255%" y="661" width="0.1460%" height="15" fill="rgb(251,202,51)" fg:x="884" fg:w="2"/><text x="64.7755%" y="671.50"></text></g><g><title>pa_memblock_acquire (1 samples, 0.07%)</title><rect x="64.6715%" y="661" width="0.0730%" height="15" fill="rgb(254,216,34)" fg:x="886" fg:w="1"/><text x="64.9215%" y="671.50"></text></g><g><title>pa_pstream_unref (1 samples, 0.07%)</title><rect x="64.7445%" y="661" width="0.0730%" height="15" fill="rgb(251,32,27)" fg:x="887" fg:w="1"/><text x="64.9945%" y="671.50"></text></g><g><title>pa_run_once (1 samples, 0.07%)</title><rect x="64.8175%" y="661" width="0.0730%" height="15" fill="rgb(208,127,28)" fg:x="888" fg:w="1"/><text x="65.0675%" y="671.50"></text></g><g><title>pa_stream_get_state (1 samples, 0.07%)</title><rect x="64.8905%" y="661" width="0.0730%" height="15" fill="rgb(224,137,22)" fg:x="889" fg:w="1"/><text x="65.1405%" y="671.50"></text></g><g><title>pa_write (1 samples, 0.07%)</title><rect x="64.9635%" y="661" width="0.0730%" height="15" fill="rgb(254,70,32)" fg:x="890" fg:w="1"/><text x="65.2135%" y="671.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.07%)</title><rect x="64.9635%" y="645" width="0.0730%" height="15" fill="rgb(229,75,37)" fg:x="890" fg:w="1"/><text x="65.2135%" y="655.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.07%)</title><rect x="65.0365%" y="661" width="0.0730%" height="15" fill="rgb(252,64,23)" fg:x="891" fg:w="1"/><text x="65.2865%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (1 samples, 0.07%)</title><rect x="65.0365%" y="645" width="0.0730%" height="15" fill="rgb(232,162,48)" fg:x="891" fg:w="1"/><text x="65.2865%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (1 samples, 0.07%)</title><rect x="65.0365%" y="629" width="0.0730%" height="15" fill="rgb(246,160,12)" fg:x="891" fg:w="1"/><text x="65.2865%" y="639.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="65.0365%" y="613" width="0.0730%" height="15" fill="rgb(247,166,0)" fg:x="891" fg:w="1"/><text x="65.2865%" y="623.50"></text></g><g><title>[[heap]] (44 samples, 3.21%)</title><rect x="62.0438%" y="677" width="3.2117%" height="15" fill="rgb(249,219,21)" fg:x="850" fg:w="44"/><text x="62.2938%" y="687.50">[[h..</text></g><g><title>write (2 samples, 0.15%)</title><rect x="65.1095%" y="661" width="0.1460%" height="15" fill="rgb(205,209,3)" fg:x="892" fg:w="2"/><text x="65.3595%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="65.2555%" y="661" width="0.0730%" height="15" fill="rgb(243,44,1)" fg:x="894" fg:w="1"/><text x="65.5055%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="65.3285%" y="661" width="0.0730%" height="15" fill="rgb(206,159,16)" fg:x="895" fg:w="1"/><text x="65.5785%" y="671.50"></text></g><g><title>__poll (1 samples, 0.07%)</title><rect x="65.4015%" y="661" width="0.0730%" height="15" fill="rgb(244,77,30)" fg:x="896" fg:w="1"/><text x="65.6515%" y="671.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="65.4745%" y="661" width="0.0730%" height="15" fill="rgb(218,69,12)" fg:x="897" fg:w="1"/><text x="65.7245%" y="671.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.07%)</title><rect x="65.5474%" y="661" width="0.0730%" height="15" fill="rgb(212,87,7)" fg:x="898" fg:w="1"/><text x="65.7974%" y="671.50"></text></g><g><title>[[stack]] (6 samples, 0.44%)</title><rect x="65.2555%" y="677" width="0.4380%" height="15" fill="rgb(245,114,25)" fg:x="894" fg:w="6"/><text x="65.5055%" y="687.50"></text></g><g><title>write (1 samples, 0.07%)</title><rect x="65.6204%" y="661" width="0.0730%" height="15" fill="rgb(210,61,42)" fg:x="899" fg:w="1"/><text x="65.8704%" y="671.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.07%)</title><rect x="65.6934%" y="661" width="0.0730%" height="15" fill="rgb(211,52,33)" fg:x="900" fg:w="1"/><text x="65.9434%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (1 samples, 0.07%)</title><rect x="65.6934%" y="645" width="0.0730%" height="15" fill="rgb(234,58,33)" fg:x="900" fg:w="1"/><text x="65.9434%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="65.6934%" y="629" width="0.0730%" height="15" fill="rgb(220,115,36)" fg:x="900" fg:w="1"/><text x="65.9434%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="65.6934%" y="613" width="0.0730%" height="15" fill="rgb(243,153,54)" fg:x="900" fg:w="1"/><text x="65.9434%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="65.6934%" y="597" width="0.0730%" height="15" fill="rgb(251,47,18)" fg:x="900" fg:w="1"/><text x="65.9434%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="65.6934%" y="581" width="0.0730%" height="15" fill="rgb(242,102,42)" fg:x="900" fg:w="1"/><text x="65.9434%" y="591.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="65.6934%" y="565" width="0.0730%" height="15" fill="rgb(234,31,38)" fg:x="900" fg:w="1"/><text x="65.9434%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.07%)</title><rect x="65.6934%" y="549" width="0.0730%" height="15" fill="rgb(221,117,51)" fg:x="900" fg:w="1"/><text x="65.9434%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="65.6934%" y="533" width="0.0730%" height="15" fill="rgb(212,20,18)" fg:x="900" fg:w="1"/><text x="65.9434%" y="543.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (1 samples, 0.07%)</title><rect x="65.6934%" y="517" width="0.0730%" height="15" fill="rgb(245,133,36)" fg:x="900" fg:w="1"/><text x="65.9434%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.07%)</title><rect x="65.6934%" y="501" width="0.0730%" height="15" fill="rgb(212,6,19)" fg:x="900" fg:w="1"/><text x="65.9434%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.07%)</title><rect x="65.6934%" y="485" width="0.0730%" height="15" fill="rgb(218,1,36)" fg:x="900" fg:w="1"/><text x="65.9434%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.07%)</title><rect x="65.6934%" y="469" width="0.0730%" height="15" fill="rgb(246,84,54)" fg:x="900" fg:w="1"/><text x="65.9434%" y="479.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.15%)</title><rect x="65.7664%" y="661" width="0.1460%" height="15" fill="rgb(242,110,6)" fg:x="901" fg:w="2"/><text x="66.0164%" y="671.50"></text></g><g><title>[libc.so.6] (57 samples, 4.16%)</title><rect x="65.9124%" y="661" width="4.1606%" height="15" fill="rgb(214,47,5)" fg:x="903" fg:w="57"/><text x="66.1624%" y="671.50">[libc..</text></g><g><title>[libpulse.so.0.24.1] (8 samples, 0.58%)</title><rect x="70.0730%" y="661" width="0.5839%" height="15" fill="rgb(218,159,25)" fg:x="960" fg:w="8"/><text x="70.3230%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (16 samples, 1.17%)</title><rect x="70.6569%" y="661" width="1.1679%" height="15" fill="rgb(215,211,28)" fg:x="968" fg:w="16"/><text x="70.9069%" y="671.50"></text></g><g><title>__ctype_init (1 samples, 0.07%)</title><rect x="71.8248%" y="661" width="0.0730%" height="15" fill="rgb(238,59,32)" fg:x="984" fg:w="1"/><text x="72.0748%" y="671.50"></text></g><g><title>__errno_location (1 samples, 0.07%)</title><rect x="71.8978%" y="661" width="0.0730%" height="15" fill="rgb(226,82,3)" fg:x="985" fg:w="1"/><text x="72.1478%" y="671.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="71.9708%" y="661" width="0.0730%" height="15" fill="rgb(240,164,32)" fg:x="986" fg:w="1"/><text x="72.2208%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (1 samples, 0.07%)</title><rect x="72.0438%" y="661" width="0.0730%" height="15" fill="rgb(232,46,7)" fg:x="987" fg:w="1"/><text x="72.2938%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (1 samples, 0.07%)</title><rect x="72.0438%" y="645" width="0.0730%" height="15" fill="rgb(229,129,53)" fg:x="987" fg:w="1"/><text x="72.2938%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="72.0438%" y="629" width="0.0730%" height="15" fill="rgb(234,188,29)" fg:x="987" fg:w="1"/><text x="72.2938%" y="639.50"></text></g><g><title>clock_gettime (2 samples, 0.15%)</title><rect x="72.1168%" y="661" width="0.1460%" height="15" fill="rgb(246,141,4)" fg:x="988" fg:w="2"/><text x="72.3668%" y="671.50"></text></g><g><title>pa_context_ref (1 samples, 0.07%)</title><rect x="72.2628%" y="661" width="0.0730%" height="15" fill="rgb(229,23,39)" fg:x="990" fg:w="1"/><text x="72.5128%" y="671.50"></text></g><g><title>pa_detect_fork (2 samples, 0.15%)</title><rect x="72.3358%" y="661" width="0.1460%" height="15" fill="rgb(206,12,3)" fg:x="991" fg:w="2"/><text x="72.5858%" y="671.50"></text></g><g><title>pa_flist_push (1 samples, 0.07%)</title><rect x="72.4818%" y="661" width="0.0730%" height="15" fill="rgb(252,226,20)" fg:x="993" fg:w="1"/><text x="72.7318%" y="671.50"></text></g><g><title>pa_iochannel_is_readable (3 samples, 0.22%)</title><rect x="72.5547%" y="661" width="0.2190%" height="15" fill="rgb(216,123,35)" fg:x="994" fg:w="3"/><text x="72.8047%" y="671.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (2 samples, 0.15%)</title><rect x="72.7737%" y="661" width="0.1460%" height="15" fill="rgb(212,68,40)" fg:x="997" fg:w="2"/><text x="73.0237%" y="671.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.07%)</title><rect x="72.9197%" y="661" width="0.0730%" height="15" fill="rgb(254,125,32)" fg:x="999" fg:w="1"/><text x="73.1697%" y="671.50"></text></g><g><title>pa_mainloop_poll (2 samples, 0.15%)</title><rect x="72.9927%" y="661" width="0.1460%" height="15" fill="rgb(253,97,22)" fg:x="1000" fg:w="2"/><text x="73.2427%" y="671.50"></text></g><g><title>pa_mainloop_prepare (3 samples, 0.22%)</title><rect x="73.1387%" y="661" width="0.2190%" height="15" fill="rgb(241,101,14)" fg:x="1002" fg:w="3"/><text x="73.3887%" y="671.50"></text></g><g><title>pa_memblock_release (1 samples, 0.07%)</title><rect x="73.3577%" y="661" width="0.0730%" height="15" fill="rgb(238,103,29)" fg:x="1005" fg:w="1"/><text x="73.6077%" y="671.50"></text></g><g><title>pa_once_begin (1 samples, 0.07%)</title><rect x="73.4307%" y="661" width="0.0730%" height="15" fill="rgb(233,195,47)" fg:x="1006" fg:w="1"/><text x="73.6807%" y="671.50"></text></g><g><title>pa_pstream_ref (1 samples, 0.07%)</title><rect x="73.5036%" y="661" width="0.0730%" height="15" fill="rgb(246,218,30)" fg:x="1007" fg:w="1"/><text x="73.7536%" y="671.50"></text></g><g><title>pa_pstream_send_tagstruct_with_creds (1 samples, 0.07%)</title><rect x="73.5766%" y="661" width="0.0730%" height="15" fill="rgb(219,145,47)" fg:x="1008" fg:w="1"/><text x="73.8266%" y="671.50"></text></g><g><title>pa_pstream_unref (1 samples, 0.07%)</title><rect x="73.6496%" y="661" width="0.0730%" height="15" fill="rgb(243,12,26)" fg:x="1009" fg:w="1"/><text x="73.8996%" y="671.50"></text></g><g><title>pa_run_once (1 samples, 0.07%)</title><rect x="73.7226%" y="661" width="0.0730%" height="15" fill="rgb(214,87,16)" fg:x="1010" fg:w="1"/><text x="73.9726%" y="671.50"></text></g><g><title>pa_tagstruct_put_timeval (1 samples, 0.07%)</title><rect x="73.7956%" y="661" width="0.0730%" height="15" fill="rgb(208,99,42)" fg:x="1011" fg:w="1"/><text x="74.0456%" y="671.50"></text></g><g><title>pa_xfree (1 samples, 0.07%)</title><rect x="73.8686%" y="661" width="0.0730%" height="15" fill="rgb(253,99,2)" fg:x="1012" fg:w="1"/><text x="74.1186%" y="671.50"></text></g><g><title>pa_xmalloc0 (2 samples, 0.15%)</title><rect x="73.9416%" y="661" width="0.1460%" height="15" fill="rgb(220,168,23)" fg:x="1013" fg:w="2"/><text x="74.1916%" y="671.50"></text></g><g><title>pthread_mutex_lock (4 samples, 0.29%)</title><rect x="74.0876%" y="661" width="0.2920%" height="15" fill="rgb(242,38,24)" fg:x="1015" fg:w="4"/><text x="74.3376%" y="671.50"></text></g><g><title>pthread_mutex_unlock (2 samples, 0.15%)</title><rect x="74.3796%" y="661" width="0.1460%" height="15" fill="rgb(225,182,9)" fg:x="1019" fg:w="2"/><text x="74.6296%" y="671.50"></text></g><g><title>pulse_check_connection (1 samples, 0.07%)</title><rect x="74.5255%" y="661" width="0.0730%" height="15" fill="rgb(243,178,37)" fg:x="1021" fg:w="1"/><text x="74.7755%" y="671.50"></text></g><g><title>read (1 samples, 0.07%)</title><rect x="74.5985%" y="661" width="0.0730%" height="15" fill="rgb(232,139,19)" fg:x="1022" fg:w="1"/><text x="74.8485%" y="671.50"></text></g><g><title>recvmsg (2 samples, 0.15%)</title><rect x="74.6715%" y="661" width="0.1460%" height="15" fill="rgb(225,201,24)" fg:x="1023" fg:w="2"/><text x="74.9215%" y="671.50"></text></g><g><title>[anon] (127 samples, 9.27%)</title><rect x="65.6934%" y="677" width="9.2701%" height="15" fill="rgb(221,47,46)" fg:x="900" fg:w="127"/><text x="65.9434%" y="687.50">[anon]</text></g><g><title>write (2 samples, 0.15%)</title><rect x="74.8175%" y="661" width="0.1460%" height="15" fill="rgb(249,23,13)" fg:x="1025" fg:w="2"/><text x="75.0675%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="75.0365%" y="613" width="0.0730%" height="15" fill="rgb(219,9,5)" fg:x="1028" fg:w="1"/><text x="75.2865%" y="623.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="75.1095%" y="597" width="0.0730%" height="15" fill="rgb(254,171,16)" fg:x="1029" fg:w="1"/><text x="75.3595%" y="607.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.07%)</title><rect x="75.1825%" y="597" width="0.0730%" height="15" fill="rgb(230,171,20)" fg:x="1030" fg:w="1"/><text x="75.4325%" y="607.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="75.2555%" y="581" width="0.0730%" height="15" fill="rgb(210,71,41)" fg:x="1031" fg:w="1"/><text x="75.5055%" y="591.50"></text></g><g><title>__errno_location (1 samples, 0.07%)</title><rect x="75.3285%" y="581" width="0.0730%" height="15" fill="rgb(206,173,20)" fg:x="1032" fg:w="1"/><text x="75.5785%" y="591.50"></text></g><g><title>__libc_calloc (2 samples, 0.15%)</title><rect x="75.4015%" y="581" width="0.1460%" height="15" fill="rgb(233,88,34)" fg:x="1033" fg:w="2"/><text x="75.6515%" y="591.50"></text></g><g><title>pa_context_rttime_restart (1 samples, 0.07%)</title><rect x="75.7664%" y="533" width="0.0730%" height="15" fill="rgb(223,209,46)" fg:x="1038" fg:w="1"/><text x="76.0164%" y="543.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="75.7664%" y="517" width="0.0730%" height="15" fill="rgb(250,43,18)" fg:x="1038" fg:w="1"/><text x="76.0164%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (4 samples, 0.29%)</title><rect x="75.6204%" y="565" width="0.2920%" height="15" fill="rgb(208,13,10)" fg:x="1036" fg:w="4"/><text x="75.8704%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.15%)</title><rect x="75.7664%" y="549" width="0.1460%" height="15" fill="rgb(212,200,36)" fg:x="1038" fg:w="2"/><text x="76.0164%" y="559.50"></text></g><g><title>pa_stream_update_timing_info (1 samples, 0.07%)</title><rect x="75.8394%" y="533" width="0.0730%" height="15" fill="rgb(225,90,30)" fg:x="1039" fg:w="1"/><text x="76.0894%" y="543.50"></text></g><g><title>pa_pdispatch_register_reply (1 samples, 0.07%)</title><rect x="75.8394%" y="517" width="0.0730%" height="15" fill="rgb(236,182,39)" fg:x="1039" fg:w="1"/><text x="76.0894%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="75.8394%" y="501" width="0.0730%" height="15" fill="rgb(212,144,35)" fg:x="1039" fg:w="1"/><text x="76.0894%" y="511.50"></text></g><g><title>pa_xmalloc0 (1 samples, 0.07%)</title><rect x="75.8394%" y="485" width="0.0730%" height="15" fill="rgb(228,63,44)" fg:x="1039" fg:w="1"/><text x="76.0894%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="75.8394%" y="469" width="0.0730%" height="15" fill="rgb(228,109,6)" fg:x="1039" fg:w="1"/><text x="76.0894%" y="479.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="75.9854%" y="469" width="0.0730%" height="15" fill="rgb(238,117,24)" fg:x="1041" fg:w="1"/><text x="76.2354%" y="479.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="76.0584%" y="453" width="0.0730%" height="15" fill="rgb(242,26,26)" fg:x="1042" fg:w="1"/><text x="76.3084%" y="463.50"></text></g><g><title>pa_queue_pop (1 samples, 0.07%)</title><rect x="76.1314%" y="453" width="0.0730%" height="15" fill="rgb(221,92,48)" fg:x="1043" fg:w="1"/><text x="76.3814%" y="463.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.07%)</title><rect x="76.2044%" y="421" width="0.0730%" height="15" fill="rgb(209,209,32)" fg:x="1044" fg:w="1"/><text x="76.4544%" y="431.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (5 samples, 0.36%)</title><rect x="75.9854%" y="485" width="0.3650%" height="15" fill="rgb(221,70,22)" fg:x="1041" fg:w="5"/><text x="76.2354%" y="495.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (4 samples, 0.29%)</title><rect x="76.0584%" y="469" width="0.2920%" height="15" fill="rgb(248,145,5)" fg:x="1042" fg:w="4"/><text x="76.3084%" y="479.50"></text></g><g><title>pa_stream_writable_size (2 samples, 0.15%)</title><rect x="76.2044%" y="453" width="0.1460%" height="15" fill="rgb(226,116,26)" fg:x="1044" fg:w="2"/><text x="76.4544%" y="463.50"></text></g><g><title>pa_detect_fork (2 samples, 0.15%)</title><rect x="76.2044%" y="437" width="0.1460%" height="15" fill="rgb(244,5,17)" fg:x="1044" fg:w="2"/><text x="76.4544%" y="447.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="76.2774%" y="421" width="0.0730%" height="15" fill="rgb(252,159,33)" fg:x="1045" fg:w="1"/><text x="76.5274%" y="431.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.15%)</title><rect x="76.3504%" y="485" width="0.1460%" height="15" fill="rgb(206,71,0)" fg:x="1046" fg:w="2"/><text x="76.6004%" y="495.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="76.4964%" y="485" width="0.0730%" height="15" fill="rgb(233,118,54)" fg:x="1048" fg:w="1"/><text x="76.7464%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (9 samples, 0.66%)</title><rect x="75.9854%" y="501" width="0.6569%" height="15" fill="rgb(234,83,48)" fg:x="1041" fg:w="9"/><text x="76.2354%" y="511.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.07%)</title><rect x="76.5693%" y="485" width="0.0730%" height="15" fill="rgb(228,3,54)" fg:x="1049" fg:w="1"/><text x="76.8193%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="76.5693%" y="469" width="0.0730%" height="15" fill="rgb(226,155,13)" fg:x="1049" fg:w="1"/><text x="76.8193%" y="479.50"></text></g><g><title>pa_flist_push (1 samples, 0.07%)</title><rect x="76.6423%" y="485" width="0.0730%" height="15" fill="rgb(241,28,37)" fg:x="1050" fg:w="1"/><text x="76.8923%" y="495.50"></text></g><g><title>__poll_chk (1 samples, 0.07%)</title><rect x="76.6423%" y="469" width="0.0730%" height="15" fill="rgb(233,93,10)" fg:x="1050" fg:w="1"/><text x="76.8923%" y="479.50"></text></g><g><title>pa_tagstruct_free (2 samples, 0.15%)</title><rect x="76.6423%" y="501" width="0.1460%" height="15" fill="rgb(225,113,19)" fg:x="1050" fg:w="2"/><text x="76.8923%" y="511.50"></text></g><g><title>pa_mainloop_poll (1 samples, 0.07%)</title><rect x="76.7153%" y="485" width="0.0730%" height="15" fill="rgb(241,2,18)" fg:x="1051" fg:w="1"/><text x="76.9653%" y="495.50"></text></g><g><title>pa_pdispatch_run (12 samples, 0.88%)</title><rect x="75.9854%" y="517" width="0.8759%" height="15" fill="rgb(228,207,21)" fg:x="1041" fg:w="12"/><text x="76.2354%" y="527.50"></text></g><g><title>pa_tagstruct_new_fixed (1 samples, 0.07%)</title><rect x="76.7883%" y="501" width="0.0730%" height="15" fill="rgb(213,211,35)" fg:x="1052" fg:w="1"/><text x="77.0383%" y="511.50"></text></g><g><title>pa_flist_pop (1 samples, 0.07%)</title><rect x="76.7883%" y="485" width="0.0730%" height="15" fill="rgb(209,83,10)" fg:x="1052" fg:w="1"/><text x="77.0383%" y="495.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="76.7883%" y="469" width="0.0730%" height="15" fill="rgb(209,164,1)" fg:x="1052" fg:w="1"/><text x="77.0383%" y="479.50"></text></g><g><title>pa_pstream_ref (1 samples, 0.07%)</title><rect x="76.8613%" y="517" width="0.0730%" height="15" fill="rgb(213,184,43)" fg:x="1053" fg:w="1"/><text x="77.1113%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (14 samples, 1.02%)</title><rect x="75.9854%" y="533" width="1.0219%" height="15" fill="rgb(231,61,34)" fg:x="1041" fg:w="14"/><text x="76.2354%" y="543.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="76.9343%" y="517" width="0.0730%" height="15" fill="rgb(235,75,3)" fg:x="1054" fg:w="1"/><text x="77.1843%" y="527.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.07%)</title><rect x="77.0073%" y="533" width="0.0730%" height="15" fill="rgb(220,106,47)" fg:x="1055" fg:w="1"/><text x="77.2573%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="77.0803%" y="517" width="0.0730%" height="15" fill="rgb(210,196,33)" fg:x="1056" fg:w="1"/><text x="77.3303%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.15%)</title><rect x="77.1533%" y="485" width="0.1460%" height="15" fill="rgb(229,154,42)" fg:x="1057" fg:w="2"/><text x="77.4033%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="77.2263%" y="469" width="0.0730%" height="15" fill="rgb(228,114,26)" fg:x="1058" fg:w="1"/><text x="77.4763%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="77.2993%" y="469" width="0.0730%" height="15" fill="rgb(208,144,1)" fg:x="1059" fg:w="1"/><text x="77.5493%" y="479.50"></text></g><g><title>[libpulse.so.0.24.1] (4 samples, 0.29%)</title><rect x="77.1533%" y="501" width="0.2920%" height="15" fill="rgb(239,112,37)" fg:x="1057" fg:w="4"/><text x="77.4033%" y="511.50"></text></g><g><title>pa_xmalloc0 (2 samples, 0.15%)</title><rect x="77.2993%" y="485" width="0.1460%" height="15" fill="rgb(210,96,50)" fg:x="1059" fg:w="2"/><text x="77.5493%" y="495.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="77.3723%" y="469" width="0.0730%" height="15" fill="rgb(222,178,2)" fg:x="1060" fg:w="1"/><text x="77.6223%" y="479.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="77.3723%" y="453" width="0.0730%" height="15" fill="rgb(226,74,18)" fg:x="1060" fg:w="1"/><text x="77.6223%" y="463.50"></text></g><g><title>[libpulsecommon-15.99.so] (5 samples, 0.36%)</title><rect x="77.1533%" y="517" width="0.3650%" height="15" fill="rgb(225,67,54)" fg:x="1057" fg:w="5"/><text x="77.4033%" y="527.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.07%)</title><rect x="77.4453%" y="501" width="0.0730%" height="15" fill="rgb(251,92,32)" fg:x="1061" fg:w="1"/><text x="77.6953%" y="511.50"></text></g><g><title>clock_gettime (1 samples, 0.07%)</title><rect x="77.5182%" y="517" width="0.0730%" height="15" fill="rgb(228,149,22)" fg:x="1062" fg:w="1"/><text x="77.7682%" y="527.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (8 samples, 0.58%)</title><rect x="77.0803%" y="533" width="0.5839%" height="15" fill="rgb(243,54,13)" fg:x="1056" fg:w="8"/><text x="77.3303%" y="543.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.07%)</title><rect x="77.5912%" y="517" width="0.0730%" height="15" fill="rgb(243,180,28)" fg:x="1063" fg:w="1"/><text x="77.8412%" y="527.50"></text></g><g><title>pa_iochannel_write (1 samples, 0.07%)</title><rect x="77.6642%" y="533" width="0.0730%" height="15" fill="rgb(208,167,24)" fg:x="1064" fg:w="1"/><text x="77.9142%" y="543.50"></text></g><g><title>pa_write (1 samples, 0.07%)</title><rect x="77.6642%" y="517" width="0.0730%" height="15" fill="rgb(245,73,45)" fg:x="1064" fg:w="1"/><text x="77.9142%" y="527.50"></text></g><g><title>__send (1 samples, 0.07%)</title><rect x="77.6642%" y="501" width="0.0730%" height="15" fill="rgb(237,203,48)" fg:x="1064" fg:w="1"/><text x="77.9142%" y="511.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="77.6642%" y="485" width="0.0730%" height="15" fill="rgb(211,197,16)" fg:x="1064" fg:w="1"/><text x="77.9142%" y="495.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.07%)</title><rect x="77.7372%" y="533" width="0.0730%" height="15" fill="rgb(243,99,51)" fg:x="1065" fg:w="1"/><text x="77.9872%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="77.8102%" y="517" width="0.0730%" height="15" fill="rgb(215,123,29)" fg:x="1066" fg:w="1"/><text x="78.0602%" y="527.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.07%)</title><rect x="77.8832%" y="517" width="0.0730%" height="15" fill="rgb(239,186,37)" fg:x="1067" fg:w="1"/><text x="78.1332%" y="527.50"></text></g><g><title>read (1 samples, 0.07%)</title><rect x="77.9562%" y="501" width="0.0730%" height="15" fill="rgb(252,136,39)" fg:x="1068" fg:w="1"/><text x="78.2062%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="77.9562%" y="485" width="0.0730%" height="15" fill="rgb(223,213,32)" fg:x="1068" fg:w="1"/><text x="78.2062%" y="495.50"></text></g><g><title>pa_mainloop_wakeup (4 samples, 0.29%)</title><rect x="77.8102%" y="533" width="0.2920%" height="15" fill="rgb(233,115,5)" fg:x="1066" fg:w="4"/><text x="78.0602%" y="543.50"></text></g><g><title>pa_write (2 samples, 0.15%)</title><rect x="77.9562%" y="517" width="0.1460%" height="15" fill="rgb(207,226,44)" fg:x="1068" fg:w="2"/><text x="78.2062%" y="527.50"></text></g><g><title>write (1 samples, 0.07%)</title><rect x="78.0292%" y="501" width="0.0730%" height="15" fill="rgb(208,126,0)" fg:x="1069" fg:w="1"/><text x="78.2792%" y="511.50"></text></g><g><title>__errno_location (1 samples, 0.07%)</title><rect x="78.0292%" y="485" width="0.0730%" height="15" fill="rgb(244,66,21)" fg:x="1069" fg:w="1"/><text x="78.2792%" y="495.50"></text></g><g><title>pa_memblock_acquire_chunk (1 samples, 0.07%)</title><rect x="78.1022%" y="533" width="0.0730%" height="15" fill="rgb(222,97,12)" fg:x="1070" fg:w="1"/><text x="78.3522%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="78.1022%" y="517" width="0.0730%" height="15" fill="rgb(219,213,19)" fg:x="1070" fg:w="1"/><text x="78.3522%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="78.1752%" y="501" width="0.0730%" height="15" fill="rgb(252,169,30)" fg:x="1071" fg:w="1"/><text x="78.4252%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="78.2482%" y="501" width="0.0730%" height="15" fill="rgb(206,32,51)" fg:x="1072" fg:w="1"/><text x="78.4982%" y="511.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.07%)</title><rect x="78.3212%" y="501" width="0.0730%" height="15" fill="rgb(250,172,42)" fg:x="1073" fg:w="1"/><text x="78.5712%" y="511.50"></text></g><g><title>pa_memblock_unref (4 samples, 0.29%)</title><rect x="78.1752%" y="533" width="0.2920%" height="15" fill="rgb(209,34,43)" fg:x="1071" fg:w="4"/><text x="78.4252%" y="543.50"></text></g><g><title>pa_flist_push (4 samples, 0.29%)</title><rect x="78.1752%" y="517" width="0.2920%" height="15" fill="rgb(223,11,35)" fg:x="1071" fg:w="4"/><text x="78.4252%" y="527.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="78.3942%" y="501" width="0.0730%" height="15" fill="rgb(251,219,26)" fg:x="1074" fg:w="1"/><text x="78.6442%" y="511.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="78.4672%" y="501" width="0.0730%" height="15" fill="rgb(231,119,3)" fg:x="1075" fg:w="1"/><text x="78.7172%" y="511.50"></text></g><g><title>pa_flist_pop (3 samples, 0.22%)</title><rect x="78.4672%" y="517" width="0.2190%" height="15" fill="rgb(216,97,11)" fg:x="1075" fg:w="3"/><text x="78.7172%" y="527.50"></text></g><g><title>__poll_chk (2 samples, 0.15%)</title><rect x="78.5401%" y="501" width="0.1460%" height="15" fill="rgb(223,59,9)" fg:x="1076" fg:w="2"/><text x="78.7901%" y="511.50"></text></g><g><title>pa_once_begin (1 samples, 0.07%)</title><rect x="78.6861%" y="517" width="0.0730%" height="15" fill="rgb(233,93,31)" fg:x="1078" fg:w="1"/><text x="78.9361%" y="527.50"></text></g><g><title>pa_run_once (1 samples, 0.07%)</title><rect x="78.7591%" y="517" width="0.0730%" height="15" fill="rgb(239,81,33)" fg:x="1079" fg:w="1"/><text x="79.0091%" y="527.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.07%)</title><rect x="78.7591%" y="501" width="0.0730%" height="15" fill="rgb(213,120,34)" fg:x="1079" fg:w="1"/><text x="79.0091%" y="511.50"></text></g><g><title>pa_packet_new (6 samples, 0.44%)</title><rect x="78.4672%" y="533" width="0.4380%" height="15" fill="rgb(243,49,53)" fg:x="1075" fg:w="6"/><text x="78.7172%" y="543.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="78.8321%" y="517" width="0.0730%" height="15" fill="rgb(247,216,33)" fg:x="1080" fg:w="1"/><text x="79.0821%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="78.9051%" y="501" width="0.0730%" height="15" fill="rgb(226,26,14)" fg:x="1081" fg:w="1"/><text x="79.1551%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (42 samples, 3.07%)</title><rect x="75.9854%" y="549" width="3.0657%" height="15" fill="rgb(215,49,53)" fg:x="1041" fg:w="42"/><text x="76.2354%" y="559.50">[li..</text></g><g><title>pa_queue_pop (2 samples, 0.15%)</title><rect x="78.9051%" y="533" width="0.1460%" height="15" fill="rgb(245,162,40)" fg:x="1081" fg:w="2"/><text x="79.1551%" y="543.50"></text></g><g><title>pa_flist_push (2 samples, 0.15%)</title><rect x="78.9051%" y="517" width="0.1460%" height="15" fill="rgb(229,68,17)" fg:x="1081" fg:w="2"/><text x="79.1551%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="78.9781%" y="501" width="0.0730%" height="15" fill="rgb(213,182,10)" fg:x="1082" fg:w="1"/><text x="79.2281%" y="511.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="79.0511%" y="549" width="0.0730%" height="15" fill="rgb(245,125,30)" fg:x="1083" fg:w="1"/><text x="79.3011%" y="559.50"></text></g><g><title>clock_gettime (3 samples, 0.22%)</title><rect x="79.1241%" y="549" width="0.2190%" height="15" fill="rgb(232,202,2)" fg:x="1084" fg:w="3"/><text x="79.3741%" y="559.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.07%)</title><rect x="79.3431%" y="549" width="0.0730%" height="15" fill="rgb(237,140,51)" fg:x="1087" fg:w="1"/><text x="79.5931%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (49 samples, 3.58%)</title><rect x="75.9124%" y="565" width="3.5766%" height="15" fill="rgb(236,157,25)" fg:x="1040" fg:w="49"/><text x="76.1624%" y="575.50">[lib..</text></g><g><title>pa_packet_new_data (1 samples, 0.07%)</title><rect x="79.4161%" y="549" width="0.0730%" height="15" fill="rgb(219,209,0)" fg:x="1088" fg:w="1"/><text x="79.6661%" y="559.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.07%)</title><rect x="79.4891%" y="565" width="0.0730%" height="15" fill="rgb(240,116,54)" fg:x="1089" fg:w="1"/><text x="79.7391%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="79.5620%" y="549" width="0.0730%" height="15" fill="rgb(216,10,36)" fg:x="1090" fg:w="1"/><text x="79.8120%" y="559.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="79.6350%" y="549" width="0.0730%" height="15" fill="rgb(222,72,44)" fg:x="1091" fg:w="1"/><text x="79.8850%" y="559.50"></text></g><g><title>pa_context_unref (1 samples, 0.07%)</title><rect x="79.7080%" y="549" width="0.0730%" height="15" fill="rgb(232,159,9)" fg:x="1092" fg:w="1"/><text x="79.9580%" y="559.50"></text></g><g><title>__poll_chk (1 samples, 0.07%)</title><rect x="79.7810%" y="533" width="0.0730%" height="15" fill="rgb(210,39,32)" fg:x="1093" fg:w="1"/><text x="80.0310%" y="543.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="79.8540%" y="517" width="0.0730%" height="15" fill="rgb(216,194,45)" fg:x="1094" fg:w="1"/><text x="80.1040%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="79.8540%" y="501" width="0.0730%" height="15" fill="rgb(218,18,35)" fg:x="1094" fg:w="1"/><text x="80.1040%" y="511.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.15%)</title><rect x="79.9270%" y="517" width="0.1460%" height="15" fill="rgb(207,83,51)" fg:x="1095" fg:w="2"/><text x="80.1770%" y="527.50"></text></g><g><title>pa_rtclock_now (8 samples, 0.58%)</title><rect x="79.5620%" y="565" width="0.5839%" height="15" fill="rgb(225,63,43)" fg:x="1090" fg:w="8"/><text x="79.8120%" y="575.50"></text></g><g><title>pa_rtclock_get (5 samples, 0.36%)</title><rect x="79.7810%" y="549" width="0.3650%" height="15" fill="rgb(207,57,36)" fg:x="1093" fg:w="5"/><text x="80.0310%" y="559.50"></text></g><g><title>clock_gettime (4 samples, 0.29%)</title><rect x="79.8540%" y="533" width="0.2920%" height="15" fill="rgb(216,99,33)" fg:x="1094" fg:w="4"/><text x="80.1040%" y="543.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.07%)</title><rect x="80.0730%" y="517" width="0.0730%" height="15" fill="rgb(225,42,16)" fg:x="1097" fg:w="1"/><text x="80.3230%" y="527.50"></text></g><g><title>pa_mainloop_dispatch (64 samples, 4.67%)</title><rect x="75.5474%" y="581" width="4.6715%" height="15" fill="rgb(220,201,45)" fg:x="1035" fg:w="64"/><text x="75.7974%" y="591.50">pa_ma..</text></g><g><title>read (1 samples, 0.07%)</title><rect x="80.1460%" y="565" width="0.0730%" height="15" fill="rgb(225,33,4)" fg:x="1098" fg:w="1"/><text x="80.3960%" y="575.50"></text></g><g><title>[libc.so.6] (5 samples, 0.36%)</title><rect x="80.2190%" y="565" width="0.3650%" height="15" fill="rgb(224,33,50)" fg:x="1099" fg:w="5"/><text x="80.4690%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="80.5109%" y="549" width="0.0730%" height="15" fill="rgb(246,198,51)" fg:x="1103" fg:w="1"/><text x="80.7609%" y="559.50"></text></g><g><title>[[vdso]] (2 samples, 0.15%)</title><rect x="80.7299%" y="549" width="0.1460%" height="15" fill="rgb(205,22,4)" fg:x="1106" fg:w="2"/><text x="80.9799%" y="559.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="80.8759%" y="549" width="0.1460%" height="15" fill="rgb(206,3,8)" fg:x="1108" fg:w="2"/><text x="81.1259%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (7 samples, 0.51%)</title><rect x="81.0219%" y="549" width="0.5109%" height="15" fill="rgb(251,23,15)" fg:x="1110" fg:w="7"/><text x="81.2719%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (3 samples, 0.22%)</title><rect x="81.5328%" y="549" width="0.2190%" height="15" fill="rgb(252,88,28)" fg:x="1117" fg:w="3"/><text x="81.7828%" y="559.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="82.2628%" y="533" width="0.1460%" height="15" fill="rgb(212,127,14)" fg:x="1127" fg:w="2"/><text x="82.5128%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.15%)</title><rect x="82.4088%" y="533" width="0.1460%" height="15" fill="rgb(247,145,37)" fg:x="1129" fg:w="2"/><text x="82.6588%" y="543.50"></text></g><g><title>__poll (13 samples, 0.95%)</title><rect x="81.7518%" y="549" width="0.9489%" height="15" fill="rgb(209,117,53)" fg:x="1120" fg:w="13"/><text x="82.0018%" y="559.50"></text></g><g><title>pa_detect_fork (2 samples, 0.15%)</title><rect x="82.5547%" y="533" width="0.1460%" height="15" fill="rgb(212,90,42)" fg:x="1131" fg:w="2"/><text x="82.8047%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.07%)</title><rect x="82.7007%" y="549" width="0.0730%" height="15" fill="rgb(218,164,37)" fg:x="1133" fg:w="1"/><text x="82.9507%" y="559.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.07%)</title><rect x="82.7737%" y="549" width="0.0730%" height="15" fill="rgb(246,65,34)" fg:x="1134" fg:w="1"/><text x="83.0237%" y="559.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.07%)</title><rect x="82.8467%" y="549" width="0.0730%" height="15" fill="rgb(231,100,33)" fg:x="1135" fg:w="1"/><text x="83.0967%" y="559.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="82.9197%" y="533" width="0.0730%" height="15" fill="rgb(228,126,14)" fg:x="1136" fg:w="1"/><text x="83.1697%" y="543.50"></text></g><g><title>[libc.so.6] (5 samples, 0.36%)</title><rect x="82.9927%" y="533" width="0.3650%" height="15" fill="rgb(215,173,21)" fg:x="1137" fg:w="5"/><text x="83.2427%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="83.3577%" y="533" width="0.0730%" height="15" fill="rgb(210,6,40)" fg:x="1142" fg:w="1"/><text x="83.6077%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="83.4307%" y="533" width="0.0730%" height="15" fill="rgb(212,48,18)" fg:x="1143" fg:w="1"/><text x="83.6807%" y="543.50"></text></g><g><title>clock_gettime (1 samples, 0.07%)</title><rect x="83.5036%" y="533" width="0.0730%" height="15" fill="rgb(230,214,11)" fg:x="1144" fg:w="1"/><text x="83.7536%" y="543.50"></text></g><g><title>pa_mutex_lock (2 samples, 0.15%)</title><rect x="83.5766%" y="533" width="0.1460%" height="15" fill="rgb(254,105,39)" fg:x="1145" fg:w="2"/><text x="83.8266%" y="543.50"></text></g><g><title>pa_mutex_lock (12 samples, 0.88%)</title><rect x="82.9197%" y="549" width="0.8759%" height="15" fill="rgb(245,158,5)" fg:x="1136" fg:w="12"/><text x="83.1697%" y="559.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="83.7226%" y="533" width="0.0730%" height="15" fill="rgb(249,208,11)" fg:x="1147" fg:w="1"/><text x="83.9726%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="83.7956%" y="533" width="0.0730%" height="15" fill="rgb(210,39,28)" fg:x="1148" fg:w="1"/><text x="84.0456%" y="543.50"></text></g><g><title>pa_mutex_unlock (2 samples, 0.15%)</title><rect x="83.7956%" y="549" width="0.1460%" height="15" fill="rgb(211,56,53)" fg:x="1148" fg:w="2"/><text x="84.0456%" y="559.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.07%)</title><rect x="83.8686%" y="533" width="0.0730%" height="15" fill="rgb(226,201,30)" fg:x="1149" fg:w="1"/><text x="84.1186%" y="543.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.07%)</title><rect x="83.9416%" y="549" width="0.0730%" height="15" fill="rgb(239,101,34)" fg:x="1150" fg:w="1"/><text x="84.1916%" y="559.50"></text></g><g><title>pthread_mutex_lock (3 samples, 0.22%)</title><rect x="84.0146%" y="549" width="0.2190%" height="15" fill="rgb(226,209,5)" fg:x="1151" fg:w="3"/><text x="84.2646%" y="559.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="84.2336%" y="549" width="0.0730%" height="15" fill="rgb(250,105,47)" fg:x="1154" fg:w="1"/><text x="84.4836%" y="559.50"></text></g><g><title>recvmsg (1 samples, 0.07%)</title><rect x="84.3066%" y="549" width="0.0730%" height="15" fill="rgb(230,72,3)" fg:x="1155" fg:w="1"/><text x="84.5566%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (53 samples, 3.87%)</title><rect x="80.5839%" y="565" width="3.8686%" height="15" fill="rgb(232,218,39)" fg:x="1104" fg:w="53"/><text x="80.8339%" y="575.50">[lib..</text></g><g><title>write (1 samples, 0.07%)</title><rect x="84.3796%" y="549" width="0.0730%" height="15" fill="rgb(248,166,6)" fg:x="1156" fg:w="1"/><text x="84.6296%" y="559.50"></text></g><g><title>__send (1 samples, 0.07%)</title><rect x="84.4526%" y="565" width="0.0730%" height="15" fill="rgb(247,89,20)" fg:x="1157" fg:w="1"/><text x="84.7026%" y="575.50"></text></g><g><title>pa_mainloop_poll (60 samples, 4.38%)</title><rect x="80.2190%" y="581" width="4.3796%" height="15" fill="rgb(248,130,54)" fg:x="1099" fg:w="60"/><text x="80.4690%" y="591.50">pa_ma..</text></g><g><title>pa_xmalloc0 (1 samples, 0.07%)</title><rect x="84.5255%" y="565" width="0.0730%" height="15" fill="rgb(234,196,4)" fg:x="1158" fg:w="1"/><text x="84.7755%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="84.5985%" y="565" width="0.0730%" height="15" fill="rgb(250,143,31)" fg:x="1159" fg:w="1"/><text x="84.8485%" y="575.50"></text></g><g><title>[libpulsecommon-15.99.so] (3 samples, 0.22%)</title><rect x="84.6715%" y="565" width="0.2190%" height="15" fill="rgb(211,110,34)" fg:x="1160" fg:w="3"/><text x="84.9215%" y="575.50"></text></g><g><title>__errno_location (1 samples, 0.07%)</title><rect x="84.8905%" y="565" width="0.0730%" height="15" fill="rgb(215,124,48)" fg:x="1163" fg:w="1"/><text x="85.1405%" y="575.50"></text></g><g><title>__poll (1 samples, 0.07%)</title><rect x="84.9635%" y="565" width="0.0730%" height="15" fill="rgb(216,46,13)" fg:x="1164" fg:w="1"/><text x="85.2135%" y="575.50"></text></g><g><title>[[vdso]] (1 samples, 0.07%)</title><rect x="85.0365%" y="549" width="0.0730%" height="15" fill="rgb(205,184,25)" fg:x="1165" fg:w="1"/><text x="85.2865%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="85.1095%" y="549" width="0.0730%" height="15" fill="rgb(228,1,10)" fg:x="1166" fg:w="1"/><text x="85.3595%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="85.1825%" y="549" width="0.0730%" height="15" fill="rgb(213,116,27)" fg:x="1167" fg:w="1"/><text x="85.4325%" y="559.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="85.2555%" y="549" width="0.0730%" height="15" fill="rgb(241,95,50)" fg:x="1168" fg:w="1"/><text x="85.5055%" y="559.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.07%)</title><rect x="85.3285%" y="549" width="0.0730%" height="15" fill="rgb(238,48,32)" fg:x="1169" fg:w="1"/><text x="85.5785%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="85.3285%" y="533" width="0.0730%" height="15" fill="rgb(235,113,49)" fg:x="1169" fg:w="1"/><text x="85.5785%" y="543.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.07%)</title><rect x="85.4015%" y="549" width="0.0730%" height="15" fill="rgb(205,127,43)" fg:x="1170" fg:w="1"/><text x="85.6515%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="85.4745%" y="533" width="0.0730%" height="15" fill="rgb(250,162,2)" fg:x="1171" fg:w="1"/><text x="85.7245%" y="543.50"></text></g><g><title>pa_read (8 samples, 0.58%)</title><rect x="85.0365%" y="565" width="0.5839%" height="15" fill="rgb(220,13,41)" fg:x="1165" fg:w="8"/><text x="85.2865%" y="575.50"></text></g><g><title>read (2 samples, 0.15%)</title><rect x="85.4745%" y="549" width="0.1460%" height="15" fill="rgb(249,221,25)" fg:x="1171" fg:w="2"/><text x="85.7245%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="85.5474%" y="533" width="0.0730%" height="15" fill="rgb(215,208,19)" fg:x="1172" fg:w="1"/><text x="85.7974%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="85.6204%" y="549" width="0.0730%" height="15" fill="rgb(236,175,2)" fg:x="1173" fg:w="1"/><text x="85.8704%" y="559.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.07%)</title><rect x="85.6934%" y="549" width="0.0730%" height="15" fill="rgb(241,52,2)" fg:x="1174" fg:w="1"/><text x="85.9434%" y="559.50"></text></g><g><title>pa_packet_new (1 samples, 0.07%)</title><rect x="85.7664%" y="549" width="0.0730%" height="15" fill="rgb(248,140,14)" fg:x="1175" fg:w="1"/><text x="86.0164%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.15%)</title><rect x="85.8394%" y="533" width="0.1460%" height="15" fill="rgb(253,22,42)" fg:x="1176" fg:w="2"/><text x="86.0894%" y="543.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="85.9854%" y="517" width="0.1460%" height="15" fill="rgb(234,61,47)" fg:x="1178" fg:w="2"/><text x="86.2354%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="86.1314%" y="517" width="0.0730%" height="15" fill="rgb(208,226,15)" fg:x="1180" fg:w="1"/><text x="86.3814%" y="527.50"></text></g><g><title>clock_gettime (4 samples, 0.29%)</title><rect x="85.9854%" y="533" width="0.2920%" height="15" fill="rgb(217,221,4)" fg:x="1178" fg:w="4"/><text x="86.2354%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="86.2044%" y="517" width="0.0730%" height="15" fill="rgb(212,174,34)" fg:x="1181" fg:w="1"/><text x="86.4544%" y="527.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.07%)</title><rect x="86.2774%" y="533" width="0.0730%" height="15" fill="rgb(253,83,4)" fg:x="1182" fg:w="1"/><text x="86.5274%" y="543.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.07%)</title><rect x="86.3504%" y="533" width="0.0730%" height="15" fill="rgb(250,195,49)" fg:x="1183" fg:w="1"/><text x="86.6004%" y="543.50"></text></g><g><title>pa_packet_new (1 samples, 0.07%)</title><rect x="86.4234%" y="533" width="0.0730%" height="15" fill="rgb(241,192,25)" fg:x="1184" fg:w="1"/><text x="86.6734%" y="543.50"></text></g><g><title>pa_rtclock_get (10 samples, 0.73%)</title><rect x="85.8394%" y="549" width="0.7299%" height="15" fill="rgb(208,124,10)" fg:x="1176" fg:w="10"/><text x="86.0894%" y="559.50"></text></g><g><title>recvmsg (1 samples, 0.07%)</title><rect x="86.4964%" y="533" width="0.0730%" height="15" fill="rgb(222,33,0)" fg:x="1185" fg:w="1"/><text x="86.7464%" y="543.50"></text></g><g><title>pa_rtclock_now (14 samples, 1.02%)</title><rect x="85.6204%" y="565" width="1.0219%" height="15" fill="rgb(234,209,28)" fg:x="1173" fg:w="14"/><text x="85.8704%" y="575.50"></text></g><g><title>pa_write (1 samples, 0.07%)</title><rect x="86.5693%" y="549" width="0.0730%" height="15" fill="rgb(224,11,23)" fg:x="1186" fg:w="1"/><text x="86.8193%" y="559.50"></text></g><g><title>pa_mainloop_iterate (157 samples, 11.46%)</title><rect x="75.2555%" y="597" width="11.4599%" height="15" fill="rgb(232,99,1)" fg:x="1031" fg:w="157"/><text x="75.5055%" y="607.50">pa_mainloop_itera..</text></g><g><title>pa_mainloop_prepare (29 samples, 2.12%)</title><rect x="84.5985%" y="581" width="2.1168%" height="15" fill="rgb(237,95,45)" fg:x="1159" fg:w="29"/><text x="84.8485%" y="591.50">p..</text></g><g><title>write (1 samples, 0.07%)</title><rect x="86.6423%" y="565" width="0.0730%" height="15" fill="rgb(208,109,11)" fg:x="1187" fg:w="1"/><text x="86.8923%" y="575.50"></text></g><g><title>[libc.so.6] (162 samples, 11.82%)</title><rect x="74.9635%" y="661" width="11.8248%" height="15" fill="rgb(216,190,48)" fg:x="1027" fg:w="162"/><text x="75.2135%" y="671.50">[libc.so.6]</text></g><g><title>[libpulsecommon-15.99.so] (161 samples, 11.75%)</title><rect x="75.0365%" y="645" width="11.7518%" height="15" fill="rgb(251,171,36)" fg:x="1028" fg:w="161"/><text x="75.2865%" y="655.50">[libpulsecommon-1..</text></g><g><title>[libpulse.so.0.24.1] (161 samples, 11.75%)</title><rect x="75.0365%" y="629" width="11.7518%" height="15" fill="rgb(230,62,22)" fg:x="1028" fg:w="161"/><text x="75.2865%" y="639.50">[libpulse.so.0.24..</text></g><g><title>pa_mainloop_run (160 samples, 11.68%)</title><rect x="75.1095%" y="613" width="11.6788%" height="15" fill="rgb(225,114,35)" fg:x="1029" fg:w="160"/><text x="75.3595%" y="623.50">pa_mainloop_run</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.07%)</title><rect x="86.7153%" y="597" width="0.0730%" height="15" fill="rgb(215,118,42)" fg:x="1188" fg:w="1"/><text x="86.9653%" y="607.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="86.7883%" y="661" width="0.0730%" height="15" fill="rgb(243,119,21)" fg:x="1189" fg:w="1"/><text x="87.0383%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.15%)</title><rect x="86.8613%" y="661" width="0.1460%" height="15" fill="rgb(252,177,53)" fg:x="1190" fg:w="2"/><text x="87.1113%" y="671.50"></text></g><g><title>__libc_calloc (3 samples, 0.22%)</title><rect x="87.0073%" y="661" width="0.2190%" height="15" fill="rgb(237,209,29)" fg:x="1192" fg:w="3"/><text x="87.2573%" y="671.50"></text></g><g><title>__poll (1 samples, 0.07%)</title><rect x="87.2263%" y="661" width="0.0730%" height="15" fill="rgb(212,65,23)" fg:x="1195" fg:w="1"/><text x="87.4763%" y="671.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.07%)</title><rect x="87.2993%" y="661" width="0.0730%" height="15" fill="rgb(230,222,46)" fg:x="1196" fg:w="1"/><text x="87.5493%" y="671.50"></text></g><g><title>pa_pdispatch_run (1 samples, 0.07%)</title><rect x="87.3723%" y="661" width="0.0730%" height="15" fill="rgb(215,135,32)" fg:x="1197" fg:w="1"/><text x="87.6223%" y="671.50"></text></g><g><title>[libc.so.6] (172 samples, 12.55%)</title><rect x="74.9635%" y="677" width="12.5547%" height="15" fill="rgb(246,101,22)" fg:x="1027" fg:w="172"/><text x="75.2135%" y="687.50">[libc.so.6]</text></g><g><title>pa_rtclock_get (1 samples, 0.07%)</title><rect x="87.4453%" y="661" width="0.0730%" height="15" fill="rgb(206,107,13)" fg:x="1198" fg:w="1"/><text x="87.6953%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.15%)</title><rect x="87.5182%" y="677" width="0.1460%" height="15" fill="rgb(250,100,44)" fg:x="1199" fg:w="2"/><text x="87.7682%" y="687.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.07%)</title><rect x="87.6642%" y="661" width="0.0730%" height="15" fill="rgb(231,147,38)" fg:x="1201" fg:w="1"/><text x="87.9142%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="87.7372%" y="661" width="0.0730%" height="15" fill="rgb(229,8,40)" fg:x="1202" fg:w="1"/><text x="87.9872%" y="671.50"></text></g><g><title>pa_mainloop_poll (1 samples, 0.07%)</title><rect x="87.8102%" y="661" width="0.0730%" height="15" fill="rgb(221,135,30)" fg:x="1203" fg:w="1"/><text x="88.0602%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (4 samples, 0.29%)</title><rect x="87.6642%" y="677" width="0.2920%" height="15" fill="rgb(249,193,18)" fg:x="1201" fg:w="4"/><text x="87.9142%" y="687.50"></text></g><g><title>pa_pstream_unref (1 samples, 0.07%)</title><rect x="87.8832%" y="661" width="0.0730%" height="15" fill="rgb(209,133,39)" fg:x="1204" fg:w="1"/><text x="88.1332%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="88.3212%" y="645" width="0.0730%" height="15" fill="rgb(232,100,14)" fg:x="1210" fg:w="1"/><text x="88.5712%" y="655.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.07%)</title><rect x="88.3942%" y="645" width="0.0730%" height="15" fill="rgb(224,185,1)" fg:x="1211" fg:w="1"/><text x="88.6442%" y="655.50"></text></g><g><title>[[vdso]] (8 samples, 0.58%)</title><rect x="87.9562%" y="661" width="0.5839%" height="15" fill="rgb(223,139,8)" fg:x="1205" fg:w="8"/><text x="88.2062%" y="671.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="88.4672%" y="645" width="0.0730%" height="15" fill="rgb(232,213,38)" fg:x="1212" fg:w="1"/><text x="88.7172%" y="655.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.07%)</title><rect x="88.5401%" y="661" width="0.0730%" height="15" fill="rgb(207,94,22)" fg:x="1213" fg:w="1"/><text x="88.7901%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.07%)</title><rect x="91.7518%" y="645" width="0.0730%" height="15" fill="rgb(219,183,54)" fg:x="1257" fg:w="1"/><text x="92.0018%" y="655.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.07%)</title><rect x="91.8248%" y="645" width="0.0730%" height="15" fill="rgb(216,185,54)" fg:x="1258" fg:w="1"/><text x="92.0748%" y="655.50"></text></g><g><title>pa_queue_pop (1 samples, 0.07%)</title><rect x="91.8978%" y="645" width="0.0730%" height="15" fill="rgb(254,217,39)" fg:x="1259" fg:w="1"/><text x="92.1478%" y="655.50"></text></g><g><title>[libc.so.6] (47 samples, 3.43%)</title><rect x="88.6131%" y="661" width="3.4307%" height="15" fill="rgb(240,178,23)" fg:x="1214" fg:w="47"/><text x="88.8631%" y="671.50">[li..</text></g><g><title>pa_stream_get_state (1 samples, 0.07%)</title><rect x="91.9708%" y="645" width="0.0730%" height="15" fill="rgb(218,11,47)" fg:x="1260" fg:w="1"/><text x="92.2208%" y="655.50"></text></g><g><title>[libpulse.so.0.24.1] (10 samples, 0.73%)</title><rect x="92.0438%" y="661" width="0.7299%" height="15" fill="rgb(218,51,51)" fg:x="1261" fg:w="10"/><text x="92.2938%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (17 samples, 1.24%)</title><rect x="92.7737%" y="661" width="1.2409%" height="15" fill="rgb(238,126,27)" fg:x="1271" fg:w="17"/><text x="93.0237%" y="671.50"></text></g><g><title>__getpid (1 samples, 0.07%)</title><rect x="94.0146%" y="661" width="0.0730%" height="15" fill="rgb(249,202,22)" fg:x="1288" fg:w="1"/><text x="94.2646%" y="671.50"></text></g><g><title>__libc_calloc (7 samples, 0.51%)</title><rect x="94.0876%" y="661" width="0.5109%" height="15" fill="rgb(254,195,49)" fg:x="1289" fg:w="7"/><text x="94.3376%" y="671.50"></text></g><g><title>__poll (2 samples, 0.15%)</title><rect x="94.5985%" y="661" width="0.1460%" height="15" fill="rgb(208,123,14)" fg:x="1296" fg:w="2"/><text x="94.8485%" y="671.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.07%)</title><rect x="94.7445%" y="661" width="0.0730%" height="15" fill="rgb(224,200,8)" fg:x="1298" fg:w="1"/><text x="94.9945%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple (3 samples, 0.22%)</title><rect x="94.8175%" y="661" width="0.2190%" height="15" fill="rgb(217,61,36)" fg:x="1299" fg:w="3"/><text x="95.0675%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (2 samples, 0.15%)</title><rect x="94.8905%" y="645" width="0.1460%" height="15" fill="rgb(206,35,45)" fg:x="1300" fg:w="2"/><text x="95.1405%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="94.8905%" y="629" width="0.1460%" height="15" fill="rgb(217,65,33)" fg:x="1300" fg:w="2"/><text x="95.1405%" y="639.50"></text></g><g><title>cfree (1 samples, 0.07%)</title><rect x="95.0365%" y="661" width="0.0730%" height="15" fill="rgb(222,158,48)" fg:x="1302" fg:w="1"/><text x="95.2865%" y="671.50"></text></g><g><title>cli::run::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="95.1095%" y="661" width="0.0730%" height="15" fill="rgb(254,2,54)" fg:x="1303" fg:w="1"/><text x="95.3595%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.07%)</title><rect x="95.1095%" y="645" width="0.0730%" height="15" fill="rgb(250,143,38)" fg:x="1303" fg:w="1"/><text x="95.3595%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.07%)</title><rect x="95.1095%" y="629" width="0.0730%" height="15" fill="rgb(248,25,0)" fg:x="1303" fg:w="1"/><text x="95.3595%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.07%)</title><rect x="95.1095%" y="613" width="0.0730%" height="15" fill="rgb(206,152,27)" fg:x="1303" fg:w="1"/><text x="95.3595%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.07%)</title><rect x="95.1095%" y="597" width="0.0730%" height="15" fill="rgb(240,77,30)" fg:x="1303" fg:w="1"/><text x="95.3595%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.07%)</title><rect x="95.1825%" y="661" width="0.0730%" height="15" fill="rgb(231,5,3)" fg:x="1304" fg:w="1"/><text x="95.4325%" y="671.50"></text></g><g><title>pa_bytes_to_usec (1 samples, 0.07%)</title><rect x="95.2555%" y="661" width="0.0730%" height="15" fill="rgb(207,226,32)" fg:x="1305" fg:w="1"/><text x="95.5055%" y="671.50"></text></g><g><title>pa_flist_push (2 samples, 0.15%)</title><rect x="95.3285%" y="661" width="0.1460%" height="15" fill="rgb(222,207,47)" fg:x="1306" fg:w="2"/><text x="95.5785%" y="671.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (1 samples, 0.07%)</title><rect x="95.4745%" y="661" width="0.0730%" height="15" fill="rgb(229,115,45)" fg:x="1308" fg:w="1"/><text x="95.7245%" y="671.50"></text></g><g><title>pa_mainloop_dispatch (5 samples, 0.36%)</title><rect x="95.5474%" y="661" width="0.3650%" height="15" fill="rgb(224,191,6)" fg:x="1309" fg:w="5"/><text x="95.7974%" y="671.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.07%)</title><rect x="95.9124%" y="661" width="0.0730%" height="15" fill="rgb(230,227,24)" fg:x="1314" fg:w="1"/><text x="96.1624%" y="671.50"></text></g><g><title>pa_mainloop_poll (8 samples, 0.58%)</title><rect x="95.9854%" y="661" width="0.5839%" height="15" fill="rgb(228,80,19)" fg:x="1315" fg:w="8"/><text x="96.2354%" y="671.50"></text></g><g><title>pa_mainloop_prepare (4 samples, 0.29%)</title><rect x="96.5693%" y="661" width="0.2920%" height="15" fill="rgb(247,229,0)" fg:x="1323" fg:w="4"/><text x="96.8193%" y="671.50"></text></g><g><title>pa_mainloop_wakeup (1 samples, 0.07%)</title><rect x="96.8613%" y="661" width="0.0730%" height="15" fill="rgb(237,194,15)" fg:x="1327" fg:w="1"/><text x="97.1113%" y="671.50"></text></g><g><title>pa_memblock_ref (2 samples, 0.15%)</title><rect x="96.9343%" y="661" width="0.1460%" height="15" fill="rgb(219,203,20)" fg:x="1328" fg:w="2"/><text x="97.1843%" y="671.50"></text></g><g><title>pa_mempool_unref (1 samples, 0.07%)</title><rect x="97.0803%" y="661" width="0.0730%" height="15" fill="rgb(234,128,8)" fg:x="1330" fg:w="1"/><text x="97.3303%" y="671.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.07%)</title><rect x="97.1533%" y="661" width="0.0730%" height="15" fill="rgb(248,202,8)" fg:x="1331" fg:w="1"/><text x="97.4033%" y="671.50"></text></g><g><title>pa_packet_new (2 samples, 0.15%)</title><rect x="97.2263%" y="661" width="0.1460%" height="15" fill="rgb(206,104,37)" fg:x="1332" fg:w="2"/><text x="97.4763%" y="671.50"></text></g><g><title>pa_pstream_ref (1 samples, 0.07%)</title><rect x="97.3723%" y="661" width="0.0730%" height="15" fill="rgb(223,8,27)" fg:x="1334" fg:w="1"/><text x="97.6223%" y="671.50"></text></g><g><title>pa_read (1 samples, 0.07%)</title><rect x="97.4453%" y="661" width="0.0730%" height="15" fill="rgb(216,217,28)" fg:x="1335" fg:w="1"/><text x="97.6953%" y="671.50"></text></g><g><title>pa_stream_writable_size (1 samples, 0.07%)</title><rect x="97.5182%" y="661" width="0.0730%" height="15" fill="rgb(249,199,1)" fg:x="1336" fg:w="1"/><text x="97.7682%" y="671.50"></text></g><g><title>pa_tagstruct_free (1 samples, 0.07%)</title><rect x="97.5912%" y="661" width="0.0730%" height="15" fill="rgb(240,85,17)" fg:x="1337" fg:w="1"/><text x="97.8412%" y="671.50"></text></g><g><title>pa_tagstruct_getu32 (1 samples, 0.07%)</title><rect x="97.6642%" y="661" width="0.0730%" height="15" fill="rgb(206,108,45)" fg:x="1338" fg:w="1"/><text x="97.9142%" y="671.50"></text></g><g><title>pa_timeval_store (1 samples, 0.07%)</title><rect x="97.7372%" y="661" width="0.0730%" height="15" fill="rgb(245,210,41)" fg:x="1339" fg:w="1"/><text x="97.9872%" y="671.50"></text></g><g><title>pthread_mutex_lock (3 samples, 0.22%)</title><rect x="97.8102%" y="661" width="0.2190%" height="15" fill="rgb(206,13,37)" fg:x="1340" fg:w="3"/><text x="98.0602%" y="671.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="98.0292%" y="661" width="0.0730%" height="15" fill="rgb(250,61,18)" fg:x="1343" fg:w="1"/><text x="98.2792%" y="671.50"></text></g><g><title>pulse_check_connection (1 samples, 0.07%)</title><rect x="98.1022%" y="661" width="0.0730%" height="15" fill="rgb(235,172,48)" fg:x="1344" fg:w="1"/><text x="98.3522%" y="671.50"></text></g><g><title>read (1 samples, 0.07%)</title><rect x="98.1752%" y="661" width="0.0730%" height="15" fill="rgb(249,201,17)" fg:x="1345" fg:w="1"/><text x="98.4252%" y="671.50"></text></g><g><title>recvmsg (1 samples, 0.07%)</title><rect x="98.2482%" y="661" width="0.0730%" height="15" fill="rgb(219,208,6)" fg:x="1346" fg:w="1"/><text x="98.4982%" y="671.50"></text></g><g><title>[unknown] (145 samples, 10.58%)</title><rect x="87.9562%" y="677" width="10.5839%" height="15" fill="rgb(248,31,23)" fg:x="1205" fg:w="145"/><text x="88.2062%" y="687.50">[unknown]</text></g><g><title>write (3 samples, 0.22%)</title><rect x="98.3212%" y="661" width="0.2190%" height="15" fill="rgb(245,15,42)" fg:x="1347" fg:w="3"/><text x="98.5712%" y="671.50"></text></g><g><title>pa_mainloop_prepare (1 samples, 0.07%)</title><rect x="98.5401%" y="677" width="0.0730%" height="15" fill="rgb(222,217,39)" fg:x="1350" fg:w="1"/><text x="98.7901%" y="687.50"></text></g><g><title>threaded-ml (502 samples, 36.64%)</title><rect x="62.0438%" y="693" width="36.6423%" height="15" fill="rgb(210,219,27)" fg:x="850" fg:w="502"/><text x="62.2938%" y="703.50">threaded-ml</text></g><g><title>pa_memblock_unref (1 samples, 0.07%)</title><rect x="98.6131%" y="677" width="0.0730%" height="15" fill="rgb(252,166,36)" fg:x="1351" fg:w="1"/><text x="98.8631%" y="687.50"></text></g><g><title>[anon] (2 samples, 0.15%)</title><rect x="98.6861%" y="677" width="0.1460%" height="15" fill="rgb(245,132,34)" fg:x="1352" fg:w="2"/><text x="98.9361%" y="687.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="98.6861%" y="661" width="0.1460%" height="15" fill="rgb(236,54,3)" fg:x="1352" fg:w="2"/><text x="98.9361%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.07%)</title><rect x="98.9781%" y="341" width="0.0730%" height="15" fill="rgb(241,173,43)" fg:x="1356" fg:w="1"/><text x="99.2281%" y="351.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.07%)</title><rect x="99.0511%" y="341" width="0.0730%" height="15" fill="rgb(215,190,9)" fg:x="1357" fg:w="1"/><text x="99.3011%" y="351.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.07%)</title><rect x="99.0511%" y="325" width="0.0730%" height="15" fill="rgb(242,101,16)" fg:x="1357" fg:w="1"/><text x="99.3011%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.07%)</title><rect x="99.0511%" y="309" width="0.0730%" height="15" fill="rgb(223,190,21)" fg:x="1357" fg:w="1"/><text x="99.3011%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="99.0511%" y="293" width="0.0730%" height="15" fill="rgb(215,228,25)" fg:x="1357" fg:w="1"/><text x="99.3011%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.29%)</title><rect x="98.9781%" y="373" width="0.2920%" height="15" fill="rgb(225,36,22)" fg:x="1356" fg:w="4"/><text x="99.2281%" y="383.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.29%)</title><rect x="98.9781%" y="357" width="0.2920%" height="15" fill="rgb(251,106,46)" fg:x="1356" fg:w="4"/><text x="99.2281%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.15%)</title><rect x="99.1241%" y="341" width="0.1460%" height="15" fill="rgb(208,90,1)" fg:x="1358" fg:w="2"/><text x="99.3741%" y="351.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (2 samples, 0.15%)</title><rect x="99.1241%" y="325" width="0.1460%" height="15" fill="rgb(243,10,4)" fg:x="1358" fg:w="2"/><text x="99.3741%" y="335.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (2 samples, 0.15%)</title><rect x="99.1241%" y="309" width="0.1460%" height="15" fill="rgb(212,137,27)" fg:x="1358" fg:w="2"/><text x="99.3741%" y="319.50"></text></g><g><title>[libc.so.6] (8 samples, 0.58%)</title><rect x="98.8321%" y="677" width="0.5839%" height="15" fill="rgb(231,220,49)" fg:x="1354" fg:w="8"/><text x="99.0821%" y="687.50"></text></g><g><title>[libc.so.6] (7 samples, 0.51%)</title><rect x="98.9051%" y="661" width="0.5109%" height="15" fill="rgb(237,96,20)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.51%)</title><rect x="98.9051%" y="645" width="0.5109%" height="15" fill="rgb(239,229,30)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.51%)</title><rect x="98.9051%" y="629" width="0.5109%" height="15" fill="rgb(219,65,33)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.51%)</title><rect x="98.9051%" y="613" width="0.5109%" height="15" fill="rgb(243,134,7)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7 samples, 0.51%)</title><rect x="98.9051%" y="597" width="0.5109%" height="15" fill="rgb(216,177,54)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (7 samples, 0.51%)</title><rect x="98.9051%" y="581" width="0.5109%" height="15" fill="rgb(211,160,20)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="591.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.51%)</title><rect x="98.9051%" y="565" width="0.5109%" height="15" fill="rgb(239,85,39)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="575.50"></text></g><g><title>std::panicking::try (7 samples, 0.51%)</title><rect x="98.9051%" y="549" width="0.5109%" height="15" fill="rgb(232,125,22)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="559.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.51%)</title><rect x="98.9051%" y="533" width="0.5109%" height="15" fill="rgb(244,57,34)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="543.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.51%)</title><rect x="98.9051%" y="517" width="0.5109%" height="15" fill="rgb(214,203,32)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="527.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (7 samples, 0.51%)</title><rect x="98.9051%" y="501" width="0.5109%" height="15" fill="rgb(207,58,43)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.51%)</title><rect x="98.9051%" y="485" width="0.5109%" height="15" fill="rgb(215,193,15)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="495.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (7 samples, 0.51%)</title><rect x="98.9051%" y="469" width="0.5109%" height="15" fill="rgb(232,15,44)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="479.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (7 samples, 0.51%)</title><rect x="98.9051%" y="453" width="0.5109%" height="15" fill="rgb(212,3,48)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="463.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.51%)</title><rect x="98.9051%" y="437" width="0.5109%" height="15" fill="rgb(218,128,7)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.51%)</title><rect x="98.9051%" y="421" width="0.5109%" height="15" fill="rgb(226,216,39)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.51%)</title><rect x="98.9051%" y="405" width="0.5109%" height="15" fill="rgb(243,47,51)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="415.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.51%)</title><rect x="98.9051%" y="389" width="0.5109%" height="15" fill="rgb(241,183,40)" fg:x="1355" fg:w="7"/><text x="99.1551%" y="399.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.15%)</title><rect x="99.2701%" y="373" width="0.1460%" height="15" fill="rgb(231,217,32)" fg:x="1360" fg:w="2"/><text x="99.5201%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.15%)</title><rect x="99.4161%" y="661" width="0.1460%" height="15" fill="rgb(229,61,38)" fg:x="1362" fg:w="2"/><text x="99.6661%" y="671.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="99.5620%" y="661" width="0.0730%" height="15" fill="rgb(225,210,5)" fg:x="1364" fg:w="1"/><text x="99.8120%" y="671.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (1 samples, 0.07%)</title><rect x="99.6350%" y="661" width="0.0730%" height="15" fill="rgb(231,79,45)" fg:x="1365" fg:w="1"/><text x="99.8850%" y="671.50"></text></g><g><title>parking_lot_core::word_lock::with_thread_data (1 samples, 0.07%)</title><rect x="99.6350%" y="645" width="0.0730%" height="15" fill="rgb(224,100,7)" fg:x="1365" fg:w="1"/><text x="99.8850%" y="655.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow::{{closure}} (1 samples, 0.07%)</title><rect x="99.6350%" y="629" width="0.0730%" height="15" fill="rgb(241,198,18)" fg:x="1365" fg:w="1"/><text x="99.8850%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.07%)</title><rect x="99.6350%" y="613" width="0.0730%" height="15" fill="rgb(252,97,53)" fg:x="1365" fg:w="1"/><text x="99.8850%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="99.6350%" y="597" width="0.0730%" height="15" fill="rgb(220,88,7)" fg:x="1365" fg:w="1"/><text x="99.8850%" y="607.50"></text></g><g><title>posix_memalign (1 samples, 0.07%)</title><rect x="99.7080%" y="661" width="0.0730%" height="15" fill="rgb(213,176,14)" fg:x="1366" fg:w="1"/><text x="99.9580%" y="671.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.07%)</title><rect x="99.7810%" y="661" width="0.0730%" height="15" fill="rgb(246,73,7)" fg:x="1367" fg:w="1"/><text x="100.0310%" y="671.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.07%)</title><rect x="99.7810%" y="645" width="0.0730%" height="15" fill="rgb(245,64,36)" fg:x="1367" fg:w="1"/><text x="100.0310%" y="655.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.07%)</title><rect x="99.7810%" y="629" width="0.0730%" height="15" fill="rgb(245,80,10)" fg:x="1367" fg:w="1"/><text x="100.0310%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.07%)</title><rect x="99.7810%" y="613" width="0.0730%" height="15" fill="rgb(232,107,50)" fg:x="1367" fg:w="1"/><text x="100.0310%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="99.4161%" y="677" width="0.5109%" height="15" fill="rgb(253,3,0)" fg:x="1362" fg:w="7"/><text x="99.6661%" y="687.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.07%)</title><rect x="99.8540%" y="661" width="0.0730%" height="15" fill="rgb(212,99,53)" fg:x="1368" fg:w="1"/><text x="100.1040%" y="671.50"></text></g><g><title>all (1,370 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(249,111,54)" fg:x="0" fg:w="1370"/><text x="0.2500%" y="719.50"></text></g><g><title>tokio-runtime-w (18 samples, 1.31%)</title><rect x="98.6861%" y="693" width="1.3139%" height="15" fill="rgb(249,55,30)" fg:x="1352" fg:w="18"/><text x="98.9361%" y="703.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.07%)</title><rect x="99.9270%" y="677" width="0.0730%" height="15" fill="rgb(237,47,42)" fg:x="1369" fg:w="1"/><text x="100.1770%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.07%)</title><rect x="99.9270%" y="661" width="0.0730%" height="15" fill="rgb(211,20,18)" fg:x="1369" fg:w="1"/><text x="100.1770%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.07%)</title><rect x="99.9270%" y="645" width="0.0730%" height="15" fill="rgb(231,203,46)" fg:x="1369" fg:w="1"/><text x="100.1770%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.07%)</title><rect x="99.9270%" y="629" width="0.0730%" height="15" fill="rgb(237,142,3)" fg:x="1369" fg:w="1"/><text x="100.1770%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.07%)</title><rect x="99.9270%" y="613" width="0.0730%" height="15" fill="rgb(241,107,1)" fg:x="1369" fg:w="1"/><text x="100.1770%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.07%)</title><rect x="99.9270%" y="597" width="0.0730%" height="15" fill="rgb(229,83,13)" fg:x="1369" fg:w="1"/><text x="100.1770%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="99.9270%" y="581" width="0.0730%" height="15" fill="rgb(241,91,40)" fg:x="1369" fg:w="1"/><text x="100.1770%" y="591.50"></text></g></svg></svg>