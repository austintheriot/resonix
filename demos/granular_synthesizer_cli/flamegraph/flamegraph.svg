<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="757.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="886"><g><title>:262932 (1 samples, 0.11%)</title><rect x="0.0000%" y="709" width="0.1129%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.0000%" y="693" width="0.1129%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>:262933 (1 samples, 0.11%)</title><rect x="0.1129%" y="709" width="0.1129%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3629%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.1129%" y="693" width="0.1129%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.3629%" y="703.50"></text></g><g><title>:262935 (1 samples, 0.11%)</title><rect x="0.2257%" y="709" width="0.1129%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.4757%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.2257%" y="693" width="0.1129%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.4757%" y="703.50"></text></g><g><title>:262936 (1 samples, 0.11%)</title><rect x="0.3386%" y="709" width="0.1129%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.5886%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.3386%" y="693" width="0.1129%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.5886%" y="703.50"></text></g><g><title>:262937 (1 samples, 0.11%)</title><rect x="0.4515%" y="709" width="0.1129%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="1"/><text x="0.7015%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.4515%" y="693" width="0.1129%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="1"/><text x="0.7015%" y="703.50"></text></g><g><title>:262938 (1 samples, 0.11%)</title><rect x="0.5643%" y="709" width="0.1129%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="1"/><text x="0.8143%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.5643%" y="693" width="0.1129%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="1"/><text x="0.8143%" y="703.50"></text></g><g><title>:262939 (1 samples, 0.11%)</title><rect x="0.6772%" y="709" width="0.1129%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.9272%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.6772%" y="693" width="0.1129%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.9272%" y="703.50"></text></g><g><title>:262940 (1 samples, 0.11%)</title><rect x="0.7901%" y="709" width="0.1129%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="1.0401%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.7901%" y="693" width="0.1129%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="1.0401%" y="703.50"></text></g><g><title>:262941 (1 samples, 0.11%)</title><rect x="0.9029%" y="709" width="0.1129%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="1"/><text x="1.1529%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.9029%" y="693" width="0.1129%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="1"/><text x="1.1529%" y="703.50"></text></g><g><title>:262942 (1 samples, 0.11%)</title><rect x="1.0158%" y="709" width="0.1129%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="1"/><text x="1.2658%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="1.0158%" y="693" width="0.1129%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="1"/><text x="1.2658%" y="703.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="1.1287%" y="693" width="0.1129%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="1"/><text x="1.3787%" y="703.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (1 samples, 0.11%)</title><rect x="1.1287%" y="677" width="0.1129%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="1.3787%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="1.1287%" y="661" width="0.1129%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="1"/><text x="1.3787%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="1.1287%" y="645" width="0.1129%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="1.3787%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="1.1287%" y="629" width="0.1129%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="1.3787%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="1.1287%" y="613" width="0.1129%" height="15" fill="rgb(249,31,29)" fg:x="10" fg:w="1"/><text x="1.3787%" y="623.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="1.1287%" y="597" width="0.1129%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="1"/><text x="1.3787%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.11%)</title><rect x="1.1287%" y="581" width="0.1129%" height="15" fill="rgb(238,160,17)" fg:x="10" fg:w="1"/><text x="1.3787%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="1.1287%" y="565" width="0.1129%" height="15" fill="rgb(214,148,48)" fg:x="10" fg:w="1"/><text x="1.3787%" y="575.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (1 samples, 0.11%)</title><rect x="1.1287%" y="549" width="0.1129%" height="15" fill="rgb(232,36,49)" fg:x="10" fg:w="1"/><text x="1.3787%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="1.2415%" y="677" width="0.1129%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="1"/><text x="1.4915%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="1.2415%" y="661" width="0.1129%" height="15" fill="rgb(229,88,8)" fg:x="11" fg:w="1"/><text x="1.4915%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="1.2415%" y="645" width="0.1129%" height="15" fill="rgb(213,181,19)" fg:x="11" fg:w="1"/><text x="1.4915%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="1.2415%" y="629" width="0.1129%" height="15" fill="rgb(254,191,54)" fg:x="11" fg:w="1"/><text x="1.4915%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.11%)</title><rect x="1.3544%" y="565" width="0.1129%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="1"/><text x="1.6044%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="1.3544%" y="549" width="0.1129%" height="15" fill="rgb(233,36,39)" fg:x="12" fg:w="1"/><text x="1.6044%" y="559.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (1 samples, 0.11%)</title><rect x="1.3544%" y="533" width="0.1129%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="1"/><text x="1.6044%" y="543.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (2 samples, 0.23%)</title><rect x="1.3544%" y="677" width="0.2257%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="2"/><text x="1.6044%" y="687.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (2 samples, 0.23%)</title><rect x="1.3544%" y="661" width="0.2257%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="2"/><text x="1.6044%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.23%)</title><rect x="1.3544%" y="645" width="0.2257%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="2"/><text x="1.6044%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.23%)</title><rect x="1.3544%" y="629" width="0.2257%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="2"/><text x="1.6044%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.23%)</title><rect x="1.3544%" y="613" width="0.2257%" height="15" fill="rgb(208,69,12)" fg:x="12" fg:w="2"/><text x="1.6044%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.23%)</title><rect x="1.3544%" y="597" width="0.2257%" height="15" fill="rgb(235,93,37)" fg:x="12" fg:w="2"/><text x="1.6044%" y="607.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (2 samples, 0.23%)</title><rect x="1.3544%" y="581" width="0.2257%" height="15" fill="rgb(213,116,39)" fg:x="12" fg:w="2"/><text x="1.6044%" y="591.50"></text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (1 samples, 0.11%)</title><rect x="1.4673%" y="565" width="0.1129%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="1"/><text x="1.7173%" y="575.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="1.4673%" y="549" width="0.1129%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="1"/><text x="1.7173%" y="559.50"></text></g><g><title>[granular_synthesizer_cli] (1 samples, 0.11%)</title><rect x="1.5801%" y="677" width="0.1129%" height="15" fill="rgb(218,138,4)" fg:x="14" fg:w="1"/><text x="1.8301%" y="687.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="1.5801%" y="661" width="0.1129%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="1.8301%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (1 samples, 0.11%)</title><rect x="1.5801%" y="645" width="0.1129%" height="15" fill="rgb(239,60,40)" fg:x="14" fg:w="1"/><text x="1.8301%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="1.5801%" y="629" width="0.1129%" height="15" fill="rgb(206,27,48)" fg:x="14" fg:w="1"/><text x="1.8301%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="1.5801%" y="613" width="0.1129%" height="15" fill="rgb(225,35,8)" fg:x="14" fg:w="1"/><text x="1.8301%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="1.5801%" y="597" width="0.1129%" height="15" fill="rgb(250,213,24)" fg:x="14" fg:w="1"/><text x="1.8301%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="1.5801%" y="581" width="0.1129%" height="15" fill="rgb(247,123,22)" fg:x="14" fg:w="1"/><text x="1.8301%" y="591.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="1.5801%" y="565" width="0.1129%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="1"/><text x="1.8301%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.11%)</title><rect x="1.5801%" y="549" width="0.1129%" height="15" fill="rgb(231,145,46)" fg:x="14" fg:w="1"/><text x="1.8301%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="1.5801%" y="533" width="0.1129%" height="15" fill="rgb(251,118,11)" fg:x="14" fg:w="1"/><text x="1.8301%" y="543.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (1 samples, 0.11%)</title><rect x="1.5801%" y="517" width="0.1129%" height="15" fill="rgb(217,147,25)" fg:x="14" fg:w="1"/><text x="1.8301%" y="527.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.11%)</title><rect x="1.6930%" y="677" width="0.1129%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="1"/><text x="1.9430%" y="687.50"></text></g><g><title>[libc.so.6] (5 samples, 0.56%)</title><rect x="1.8059%" y="677" width="0.5643%" height="15" fill="rgb(209,12,38)" fg:x="16" fg:w="5"/><text x="2.0559%" y="687.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="2.3702%" y="677" width="0.1129%" height="15" fill="rgb(227,1,9)" fg:x="21" fg:w="1"/><text x="2.6202%" y="687.50"></text></g><g><title>__getpid (1 samples, 0.11%)</title><rect x="2.4831%" y="677" width="0.1129%" height="15" fill="rgb(248,47,43)" fg:x="22" fg:w="1"/><text x="2.7331%" y="687.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="2.5959%" y="677" width="0.1129%" height="15" fill="rgb(221,10,30)" fg:x="23" fg:w="1"/><text x="2.8459%" y="687.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.11%)</title><rect x="2.7088%" y="677" width="0.1129%" height="15" fill="rgb(210,229,1)" fg:x="24" fg:w="1"/><text x="2.9588%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 4.29%)</title><rect x="3.0474%" y="661" width="4.2889%" height="15" fill="rgb(222,148,37)" fg:x="27" fg:w="38"/><text x="3.2974%" y="671.50">&lt;core..</text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (47 samples, 5.30%)</title><rect x="2.8217%" y="677" width="5.3047%" height="15" fill="rgb(234,67,33)" fg:x="25" fg:w="47"/><text x="3.0717%" y="687.50">audio:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (7 samples, 0.79%)</title><rect x="7.3363%" y="661" width="0.7901%" height="15" fill="rgb(247,98,35)" fg:x="65" fg:w="7"/><text x="7.5863%" y="671.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (7 samples, 0.79%)</title><rect x="7.3363%" y="645" width="0.7901%" height="15" fill="rgb(247,138,52)" fg:x="65" fg:w="7"/><text x="7.5863%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.56%)</title><rect x="7.5621%" y="629" width="0.5643%" height="15" fill="rgb(213,79,30)" fg:x="67" fg:w="5"/><text x="7.8121%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (1 samples, 0.11%)</title><rect x="8.1264%" y="661" width="0.1129%" height="15" fill="rgb(246,177,23)" fg:x="72" fg:w="1"/><text x="8.3764%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="8.1264%" y="645" width="0.1129%" height="15" fill="rgb(230,62,27)" fg:x="72" fg:w="1"/><text x="8.3764%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.11%)</title><rect x="8.1264%" y="629" width="0.1129%" height="15" fill="rgb(216,154,8)" fg:x="72" fg:w="1"/><text x="8.3764%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.11%)</title><rect x="8.1264%" y="613" width="0.1129%" height="15" fill="rgb(244,35,45)" fg:x="72" fg:w="1"/><text x="8.3764%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.11%)</title><rect x="8.1264%" y="597" width="0.1129%" height="15" fill="rgb(251,115,12)" fg:x="72" fg:w="1"/><text x="8.3764%" y="607.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (2 samples, 0.23%)</title><rect x="8.1264%" y="677" width="0.2257%" height="15" fill="rgb(240,54,50)" fg:x="72" fg:w="2"/><text x="8.3764%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.11%)</title><rect x="8.2393%" y="661" width="0.1129%" height="15" fill="rgb(233,84,52)" fg:x="73" fg:w="1"/><text x="8.4893%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.11%)</title><rect x="8.2393%" y="645" width="0.1129%" height="15" fill="rgb(207,117,47)" fg:x="73" fg:w="1"/><text x="8.4893%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.11%)</title><rect x="8.2393%" y="629" width="0.1129%" height="15" fill="rgb(249,43,39)" fg:x="73" fg:w="1"/><text x="8.4893%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.11%)</title><rect x="8.2393%" y="613" width="0.1129%" height="15" fill="rgb(209,38,44)" fg:x="73" fg:w="1"/><text x="8.4893%" y="623.50"></text></g><g><title>pa_channels_valid (1 samples, 0.11%)</title><rect x="8.3521%" y="677" width="0.1129%" height="15" fill="rgb(236,212,23)" fg:x="74" fg:w="1"/><text x="8.6021%" y="687.50"></text></g><g><title>pa_detect_fork (1 samples, 0.11%)</title><rect x="8.4650%" y="677" width="0.1129%" height="15" fill="rgb(242,79,21)" fg:x="75" fg:w="1"/><text x="8.7150%" y="687.50"></text></g><g><title>pa_frame_align (1 samples, 0.11%)</title><rect x="8.5779%" y="677" width="0.1129%" height="15" fill="rgb(211,96,35)" fg:x="76" fg:w="1"/><text x="8.8279%" y="687.50"></text></g><g><title>pa_mempool_block_size_max (1 samples, 0.11%)</title><rect x="8.6907%" y="677" width="0.1129%" height="15" fill="rgb(253,215,40)" fg:x="77" fg:w="1"/><text x="8.9407%" y="687.50"></text></g><g><title>pa_sample_spec_valid (1 samples, 0.11%)</title><rect x="8.8036%" y="677" width="0.1129%" height="15" fill="rgb(211,81,21)" fg:x="78" fg:w="1"/><text x="9.0536%" y="687.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="8.9165%" y="677" width="0.1129%" height="15" fill="rgb(208,190,38)" fg:x="79" fg:w="1"/><text x="9.1665%" y="687.50"></text></g><g><title>[[heap]] (70 samples, 7.90%)</title><rect x="1.2415%" y="693" width="7.9007%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="70"/><text x="1.4915%" y="703.50">[[heap]]</text></g><g><title>snd_pcm_poll_descriptors_revents (1 samples, 0.11%)</title><rect x="9.0293%" y="677" width="0.1129%" height="15" fill="rgb(237,122,38)" fg:x="80" fg:w="1"/><text x="9.2793%" y="687.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="9.1422%" y="677" width="0.1129%" height="15" fill="rgb(244,218,35)" fg:x="81" fg:w="1"/><text x="9.3922%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (1 samples, 0.11%)</title><rect x="9.2551%" y="661" width="0.1129%" height="15" fill="rgb(240,68,47)" fg:x="82" fg:w="1"/><text x="9.5051%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="9.2551%" y="645" width="0.1129%" height="15" fill="rgb(210,16,53)" fg:x="82" fg:w="1"/><text x="9.5051%" y="655.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.11%)</title><rect x="9.2551%" y="629" width="0.1129%" height="15" fill="rgb(235,124,12)" fg:x="82" fg:w="1"/><text x="9.5051%" y="639.50"></text></g><g><title>std::thread::panicking (1 samples, 0.11%)</title><rect x="9.2551%" y="613" width="0.1129%" height="15" fill="rgb(224,169,11)" fg:x="82" fg:w="1"/><text x="9.5051%" y="623.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.11%)</title><rect x="9.2551%" y="597" width="0.1129%" height="15" fill="rgb(250,166,2)" fg:x="82" fg:w="1"/><text x="9.5051%" y="607.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.11%)</title><rect x="9.2551%" y="581" width="0.1129%" height="15" fill="rgb(242,216,29)" fg:x="82" fg:w="1"/><text x="9.5051%" y="591.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (5 samples, 0.56%)</title><rect x="9.2551%" y="677" width="0.5643%" height="15" fill="rgb(230,116,27)" fg:x="82" fg:w="5"/><text x="9.5051%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.45%)</title><rect x="9.3679%" y="661" width="0.4515%" height="15" fill="rgb(228,99,48)" fg:x="83" fg:w="4"/><text x="9.6179%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (4 samples, 0.45%)</title><rect x="9.3679%" y="645" width="0.4515%" height="15" fill="rgb(253,11,6)" fg:x="83" fg:w="4"/><text x="9.6179%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2 samples, 0.23%)</title><rect x="9.5937%" y="629" width="0.2257%" height="15" fill="rgb(247,143,39)" fg:x="85" fg:w="2"/><text x="9.8437%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.23%)</title><rect x="9.5937%" y="613" width="0.2257%" height="15" fill="rgb(236,97,10)" fg:x="85" fg:w="2"/><text x="9.8437%" y="623.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="9.8194%" y="661" width="0.1129%" height="15" fill="rgb(233,208,19)" fg:x="87" fg:w="1"/><text x="10.0694%" y="671.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (1 samples, 0.11%)</title><rect x="9.8194%" y="645" width="0.1129%" height="15" fill="rgb(216,164,2)" fg:x="87" fg:w="1"/><text x="10.0694%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="9.8194%" y="629" width="0.1129%" height="15" fill="rgb(220,129,5)" fg:x="87" fg:w="1"/><text x="10.0694%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="9.8194%" y="613" width="0.1129%" height="15" fill="rgb(242,17,10)" fg:x="87" fg:w="1"/><text x="10.0694%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="9.8194%" y="597" width="0.1129%" height="15" fill="rgb(242,107,0)" fg:x="87" fg:w="1"/><text x="10.0694%" y="607.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (1 samples, 0.11%)</title><rect x="9.8194%" y="581" width="0.1129%" height="15" fill="rgb(251,28,31)" fg:x="87" fg:w="1"/><text x="10.0694%" y="591.50"></text></g><g><title>&lt;&amp;f32 as core::ops::arith::Mul&lt;&amp;f32&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="9.8194%" y="565" width="0.1129%" height="15" fill="rgb(233,223,10)" fg:x="87" fg:w="1"/><text x="10.0694%" y="575.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.11%)</title><rect x="9.8194%" y="549" width="0.1129%" height="15" fill="rgb(215,21,27)" fg:x="87" fg:w="1"/><text x="10.0694%" y="559.50"></text></g><g><title>pa_mainloop_wakeup (2 samples, 0.23%)</title><rect x="9.8194%" y="677" width="0.2257%" height="15" fill="rgb(232,23,21)" fg:x="87" fg:w="2"/><text x="10.0694%" y="687.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.11%)</title><rect x="9.9323%" y="661" width="0.1129%" height="15" fill="rgb(244,5,23)" fg:x="88" fg:w="1"/><text x="10.1823%" y="671.50"></text></g><g><title>tokio::runtime::blocking::pool::SpawnerMetrics::dec_queue_depth (1 samples, 0.11%)</title><rect x="9.9323%" y="645" width="0.1129%" height="15" fill="rgb(226,81,46)" fg:x="88" fg:w="1"/><text x="10.1823%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.11%)</title><rect x="9.9323%" y="629" width="0.1129%" height="15" fill="rgb(247,70,30)" fg:x="88" fg:w="1"/><text x="10.1823%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.11%)</title><rect x="9.9323%" y="613" width="0.1129%" height="15" fill="rgb(212,68,19)" fg:x="88" fg:w="1"/><text x="10.1823%" y="623.50"></text></g><g><title>[anon] (9 samples, 1.02%)</title><rect x="9.1422%" y="693" width="1.0158%" height="15" fill="rgb(240,187,13)" fg:x="81" fg:w="9"/><text x="9.3922%" y="703.50"></text></g><g><title>pa_once_begin (1 samples, 0.11%)</title><rect x="10.0451%" y="677" width="0.1129%" height="15" fill="rgb(223,113,26)" fg:x="89" fg:w="1"/><text x="10.2951%" y="687.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="10.1580%" y="373" width="0.1129%" height="15" fill="rgb(206,192,2)" fg:x="90" fg:w="1"/><text x="10.4080%" y="383.50"></text></g><g><title>pulse_check_connection (1 samples, 0.11%)</title><rect x="10.1580%" y="357" width="0.1129%" height="15" fill="rgb(241,108,4)" fg:x="90" fg:w="1"/><text x="10.4080%" y="367.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (1 samples, 0.11%)</title><rect x="10.1580%" y="341" width="0.1129%" height="15" fill="rgb(247,173,49)" fg:x="90" fg:w="1"/><text x="10.4080%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="10.1580%" y="325" width="0.1129%" height="15" fill="rgb(224,114,35)" fg:x="90" fg:w="1"/><text x="10.4080%" y="335.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (2 samples, 0.23%)</title><rect x="10.1580%" y="437" width="0.2257%" height="15" fill="rgb(245,159,27)" fg:x="90" fg:w="2"/><text x="10.4080%" y="447.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (2 samples, 0.23%)</title><rect x="10.1580%" y="421" width="0.2257%" height="15" fill="rgb(245,172,44)" fg:x="90" fg:w="2"/><text x="10.4080%" y="431.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.23%)</title><rect x="10.1580%" y="405" width="0.2257%" height="15" fill="rgb(236,23,11)" fg:x="90" fg:w="2"/><text x="10.4080%" y="415.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.23%)</title><rect x="10.1580%" y="389" width="0.2257%" height="15" fill="rgb(205,117,38)" fg:x="90" fg:w="2"/><text x="10.4080%" y="399.50"></text></g><g><title>alsa::poll::poll (1 samples, 0.11%)</title><rect x="10.2709%" y="373" width="0.1129%" height="15" fill="rgb(237,72,25)" fg:x="91" fg:w="1"/><text x="10.5209%" y="383.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="10.3837%" y="437" width="0.1129%" height="15" fill="rgb(244,70,9)" fg:x="92" fg:w="1"/><text x="10.6337%" y="447.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (1 samples, 0.11%)</title><rect x="10.3837%" y="421" width="0.1129%" height="15" fill="rgb(217,125,39)" fg:x="92" fg:w="1"/><text x="10.6337%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="10.3837%" y="405" width="0.1129%" height="15" fill="rgb(235,36,10)" fg:x="92" fg:w="1"/><text x="10.6337%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="10.3837%" y="389" width="0.1129%" height="15" fill="rgb(251,123,47)" fg:x="92" fg:w="1"/><text x="10.6337%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="10.3837%" y="373" width="0.1129%" height="15" fill="rgb(221,13,13)" fg:x="92" fg:w="1"/><text x="10.6337%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="10.3837%" y="357" width="0.1129%" height="15" fill="rgb(238,131,9)" fg:x="92" fg:w="1"/><text x="10.6337%" y="367.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="10.3837%" y="341" width="0.1129%" height="15" fill="rgb(211,50,8)" fg:x="92" fg:w="1"/><text x="10.6337%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.11%)</title><rect x="10.3837%" y="325" width="0.1129%" height="15" fill="rgb(245,182,24)" fg:x="92" fg:w="1"/><text x="10.6337%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="10.3837%" y="309" width="0.1129%" height="15" fill="rgb(242,14,37)" fg:x="92" fg:w="1"/><text x="10.6337%" y="319.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (1 samples, 0.11%)</title><rect x="10.3837%" y="293" width="0.1129%" height="15" fill="rgb(246,228,12)" fg:x="92" fg:w="1"/><text x="10.6337%" y="303.50"></text></g><g><title>audio::grain::Grain::next_frame (1 samples, 0.11%)</title><rect x="10.3837%" y="277" width="0.1129%" height="15" fill="rgb(213,55,15)" fg:x="92" fg:w="1"/><text x="10.6337%" y="287.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (4 samples, 0.45%)</title><rect x="10.1580%" y="453" width="0.4515%" height="15" fill="rgb(209,9,3)" fg:x="90" fg:w="4"/><text x="10.4080%" y="463.50"></text></g><g><title>alsa::pcm::PCM::status (1 samples, 0.11%)</title><rect x="10.4966%" y="437" width="0.1129%" height="15" fill="rgb(230,59,30)" fg:x="93" fg:w="1"/><text x="10.7466%" y="447.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (1 samples, 0.11%)</title><rect x="10.4966%" y="421" width="0.1129%" height="15" fill="rgb(209,121,21)" fg:x="93" fg:w="1"/><text x="10.7466%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="10.4966%" y="405" width="0.1129%" height="15" fill="rgb(220,109,13)" fg:x="93" fg:w="1"/><text x="10.7466%" y="415.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (1 samples, 0.11%)</title><rect x="10.4966%" y="389" width="0.1129%" height="15" fill="rgb(232,18,1)" fg:x="93" fg:w="1"/><text x="10.7466%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="10.4966%" y="373" width="0.1129%" height="15" fill="rgb(215,41,42)" fg:x="93" fg:w="1"/><text x="10.7466%" y="383.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::refresh_interval (2 samples, 0.23%)</title><rect x="10.9481%" y="357" width="0.2257%" height="15" fill="rgb(224,123,36)" fg:x="97" fg:w="2"/><text x="11.1981%" y="367.50"></text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut (1 samples, 0.11%)</title><rect x="11.1738%" y="341" width="0.1129%" height="15" fill="rgb(240,125,3)" fg:x="99" fg:w="1"/><text x="11.4238%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="11.1738%" y="325" width="0.1129%" height="15" fill="rgb(205,98,50)" fg:x="99" fg:w="1"/><text x="11.4238%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="11.2867%" y="277" width="0.1129%" height="15" fill="rgb(205,185,37)" fg:x="100" fg:w="1"/><text x="11.5367%" y="287.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (53 samples, 5.98%)</title><rect x="12.5282%" y="229" width="5.9819%" height="15" fill="rgb(238,207,15)" fg:x="111" fg:w="53"/><text x="12.7782%" y="239.50">&lt;audio::..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 1.47%)</title><rect x="24.7178%" y="213" width="1.4673%" height="15" fill="rgb(213,199,42)" fg:x="219" fg:w="13"/><text x="24.9678%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (13 samples, 1.47%)</title><rect x="24.7178%" y="197" width="1.4673%" height="15" fill="rgb(235,201,11)" fg:x="219" fg:w="13"/><text x="24.9678%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (13 samples, 1.47%)</title><rect x="24.7178%" y="181" width="1.4673%" height="15" fill="rgb(207,46,11)" fg:x="219" fg:w="13"/><text x="24.9678%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (10 samples, 1.13%)</title><rect x="26.1851%" y="213" width="1.1287%" height="15" fill="rgb(241,35,35)" fg:x="232" fg:w="10"/><text x="26.4351%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (10 samples, 1.13%)</title><rect x="26.1851%" y="197" width="1.1287%" height="15" fill="rgb(243,32,47)" fg:x="232" fg:w="10"/><text x="26.4351%" y="207.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (10 samples, 1.13%)</title><rect x="26.1851%" y="181" width="1.1287%" height="15" fill="rgb(247,202,23)" fg:x="232" fg:w="10"/><text x="26.4351%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (167 samples, 18.85%)</title><rect x="12.5282%" y="261" width="18.8488%" height="15" fill="rgb(219,102,11)" fg:x="111" fg:w="167"/><text x="12.7782%" y="271.50">&lt;core::iter::adapters::enumer..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (167 samples, 18.85%)</title><rect x="12.5282%" y="245" width="18.8488%" height="15" fill="rgb(243,110,44)" fg:x="111" fg:w="167"/><text x="12.7782%" y="255.50">core::iter::traits::iterator:..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (114 samples, 12.87%)</title><rect x="18.5102%" y="229" width="12.8668%" height="15" fill="rgb(222,74,54)" fg:x="164" fg:w="114"/><text x="18.7602%" y="239.50">audio::granular_syn..</text></g><g><title>audio::grain::Grain::next_frame (36 samples, 4.06%)</title><rect x="27.3138%" y="213" width="4.0632%" height="15" fill="rgb(216,99,12)" fg:x="242" fg:w="36"/><text x="27.5638%" y="223.50">audi..</text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (17 samples, 1.92%)</title><rect x="31.3770%" y="245" width="1.9187%" height="15" fill="rgb(226,22,26)" fg:x="278" fg:w="17"/><text x="31.6270%" y="255.50">&lt;..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (213 samples, 24.04%)</title><rect x="11.1738%" y="357" width="24.0406%" height="15" fill="rgb(217,163,10)" fg:x="99" fg:w="213"/><text x="11.4238%" y="367.50">audio::granular_synthesizer::GranularS..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (212 samples, 23.93%)</title><rect x="11.2867%" y="341" width="23.9278%" height="15" fill="rgb(213,25,53)" fg:x="100" fg:w="212"/><text x="11.5367%" y="351.50">core::iter::traits::iterator::Iterator..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (212 samples, 23.93%)</title><rect x="11.2867%" y="325" width="23.9278%" height="15" fill="rgb(252,105,26)" fg:x="100" fg:w="212"/><text x="11.5367%" y="335.50">&lt;core::iter::adapters::enumerate::Enum..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (212 samples, 23.93%)</title><rect x="11.2867%" y="309" width="23.9278%" height="15" fill="rgb(220,39,43)" fg:x="100" fg:w="212"/><text x="11.5367%" y="319.50">&lt;core::iter::adapters::filter_map::Fil..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (212 samples, 23.93%)</title><rect x="11.2867%" y="293" width="23.9278%" height="15" fill="rgb(229,68,48)" fg:x="100" fg:w="212"/><text x="11.5367%" y="303.50">core::iter::traits::iterator::Iterator..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (211 samples, 23.81%)</title><rect x="11.3995%" y="277" width="23.8149%" height="15" fill="rgb(252,8,32)" fg:x="101" fg:w="211"/><text x="11.6495%" y="287.50">core::iter::adapters::filter_map::filt..</text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (34 samples, 3.84%)</title><rect x="31.3770%" y="261" width="3.8375%" height="15" fill="rgb(223,20,43)" fg:x="278" fg:w="34"/><text x="31.6270%" y="271.50">audi..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 1.92%)</title><rect x="33.2957%" y="245" width="1.9187%" height="15" fill="rgb(229,81,49)" fg:x="295" fg:w="17"/><text x="33.5457%" y="255.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.23%)</title><rect x="35.2144%" y="341" width="0.2257%" height="15" fill="rgb(236,28,36)" fg:x="312" fg:w="2"/><text x="35.4644%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.11%)</title><rect x="35.3273%" y="325" width="0.1129%" height="15" fill="rgb(249,185,26)" fg:x="313" fg:w="1"/><text x="35.5773%" y="335.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::num_channels_for_frame (2 samples, 0.23%)</title><rect x="35.4402%" y="341" width="0.2257%" height="15" fill="rgb(249,174,33)" fg:x="314" fg:w="2"/><text x="35.6902%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.68%)</title><rect x="35.6659%" y="309" width="0.6772%" height="15" fill="rgb(233,201,37)" fg:x="316" fg:w="6"/><text x="35.9159%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6 samples, 0.68%)</title><rect x="35.6659%" y="293" width="0.6772%" height="15" fill="rgb(221,78,26)" fg:x="316" fg:w="6"/><text x="35.9159%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 1.13%)</title><rect x="35.6659%" y="341" width="1.1287%" height="15" fill="rgb(250,127,30)" fg:x="316" fg:w="10"/><text x="35.9159%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 1.13%)</title><rect x="35.6659%" y="325" width="1.1287%" height="15" fill="rgb(230,49,44)" fg:x="316" fg:w="10"/><text x="35.9159%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.45%)</title><rect x="36.3431%" y="309" width="0.4515%" height="15" fill="rgb(229,67,23)" fg:x="322" fg:w="4"/><text x="36.5931%" y="319.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (4 samples, 0.45%)</title><rect x="36.3431%" y="293" width="0.4515%" height="15" fill="rgb(249,83,47)" fg:x="322" fg:w="4"/><text x="36.5931%" y="303.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (15 samples, 1.69%)</title><rect x="35.2144%" y="357" width="1.6930%" height="15" fill="rgb(215,43,3)" fg:x="312" fg:w="15"/><text x="35.4644%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.11%)</title><rect x="36.7946%" y="341" width="0.1129%" height="15" fill="rgb(238,154,13)" fg:x="326" fg:w="1"/><text x="37.0446%" y="351.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.11%)</title><rect x="36.7946%" y="325" width="0.1129%" height="15" fill="rgb(219,56,2)" fg:x="326" fg:w="1"/><text x="37.0446%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.11%)</title><rect x="36.7946%" y="309" width="0.1129%" height="15" fill="rgb(233,0,4)" fg:x="326" fg:w="1"/><text x="37.0446%" y="319.50"></text></g><g><title>core::cmp::min (1 samples, 0.11%)</title><rect x="36.7946%" y="293" width="0.1129%" height="15" fill="rgb(235,30,7)" fg:x="326" fg:w="1"/><text x="37.0446%" y="303.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.11%)</title><rect x="36.7946%" y="277" width="0.1129%" height="15" fill="rgb(250,79,13)" fg:x="326" fg:w="1"/><text x="37.0446%" y="287.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="36.7946%" y="261" width="0.1129%" height="15" fill="rgb(211,146,34)" fg:x="326" fg:w="1"/><text x="37.0446%" y="271.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (234 samples, 26.41%)</title><rect x="10.6095%" y="373" width="26.4108%" height="15" fill="rgb(228,22,38)" fg:x="94" fg:w="234"/><text x="10.8595%" y="383.50">&lt;audio::granular_synthesizer::GranularSynt..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::refresh_grain (1 samples, 0.11%)</title><rect x="36.9074%" y="357" width="0.1129%" height="15" fill="rgb(235,168,5)" fg:x="327" fg:w="1"/><text x="37.1574%" y="367.50"></text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::pop_first (1 samples, 0.11%)</title><rect x="36.9074%" y="341" width="0.1129%" height="15" fill="rgb(221,155,16)" fg:x="327" fg:w="1"/><text x="37.1574%" y="351.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="36.9074%" y="325" width="0.1129%" height="15" fill="rgb(215,215,53)" fg:x="327" fg:w="1"/><text x="37.1574%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.23%)</title><rect x="37.0203%" y="373" width="0.2257%" height="15" fill="rgb(223,4,10)" fg:x="328" fg:w="2"/><text x="37.2703%" y="383.50"></text></g><g><title>__getpid (1 samples, 0.11%)</title><rect x="37.2460%" y="373" width="0.1129%" height="15" fill="rgb(234,103,6)" fg:x="330" fg:w="1"/><text x="37.4960%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.47%)</title><rect x="37.3589%" y="357" width="1.4673%" height="15" fill="rgb(227,97,0)" fg:x="331" fg:w="13"/><text x="37.6089%" y="367.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (15 samples, 1.69%)</title><rect x="37.3589%" y="373" width="1.6930%" height="15" fill="rgb(234,150,53)" fg:x="331" fg:w="15"/><text x="37.6089%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (2 samples, 0.23%)</title><rect x="38.8262%" y="357" width="0.2257%" height="15" fill="rgb(228,201,54)" fg:x="344" fg:w="2"/><text x="39.0762%" y="367.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (2 samples, 0.23%)</title><rect x="38.8262%" y="341" width="0.2257%" height="15" fill="rgb(222,22,37)" fg:x="344" fg:w="2"/><text x="39.0762%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="38.9391%" y="325" width="0.1129%" height="15" fill="rgb(237,53,32)" fg:x="345" fg:w="1"/><text x="39.1891%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (1 samples, 0.11%)</title><rect x="39.0519%" y="373" width="0.1129%" height="15" fill="rgb(233,25,53)" fg:x="346" fg:w="1"/><text x="39.3019%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="39.0519%" y="357" width="0.1129%" height="15" fill="rgb(210,40,34)" fg:x="346" fg:w="1"/><text x="39.3019%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.11%)</title><rect x="39.0519%" y="341" width="0.1129%" height="15" fill="rgb(241,220,44)" fg:x="346" fg:w="1"/><text x="39.3019%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.11%)</title><rect x="39.0519%" y="325" width="0.1129%" height="15" fill="rgb(235,28,35)" fg:x="346" fg:w="1"/><text x="39.3019%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.11%)</title><rect x="39.0519%" y="309" width="0.1129%" height="15" fill="rgb(210,56,17)" fg:x="346" fg:w="1"/><text x="39.3019%" y="319.50"></text></g><g><title>[libc.so.6] (258 samples, 29.12%)</title><rect x="10.1580%" y="693" width="29.1196%" height="15" fill="rgb(224,130,29)" fg:x="90" fg:w="258"/><text x="10.4080%" y="703.50">[libc.so.6]</text></g><g><title>[libc.so.6] (258 samples, 29.12%)</title><rect x="10.1580%" y="677" width="29.1196%" height="15" fill="rgb(235,212,8)" fg:x="90" fg:w="258"/><text x="10.4080%" y="687.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (258 samples, 29.12%)</title><rect x="10.1580%" y="661" width="29.1196%" height="15" fill="rgb(223,33,50)" fg:x="90" fg:w="258"/><text x="10.4080%" y="671.50">std::sys::unix::thread::Thread::new::thread_sta..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (258 samples, 29.12%)</title><rect x="10.1580%" y="645" width="29.1196%" height="15" fill="rgb(219,149,13)" fg:x="90" fg:w="258"/><text x="10.4080%" y="655.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (258 samples, 29.12%)</title><rect x="10.1580%" y="629" width="29.1196%" height="15" fill="rgb(250,156,29)" fg:x="90" fg:w="258"/><text x="10.4080%" y="639.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (258 samples, 29.12%)</title><rect x="10.1580%" y="613" width="29.1196%" height="15" fill="rgb(216,193,19)" fg:x="90" fg:w="258"/><text x="10.4080%" y="623.50">core::ops::function::FnOnce::call_once{{vtable...</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (258 samples, 29.12%)</title><rect x="10.1580%" y="597" width="29.1196%" height="15" fill="rgb(216,135,14)" fg:x="90" fg:w="258"/><text x="10.4080%" y="607.50">std::thread::Builder::spawn_unchecked_::{{closu..</text></g><g><title>std::panic::catch_unwind (258 samples, 29.12%)</title><rect x="10.1580%" y="581" width="29.1196%" height="15" fill="rgb(241,47,5)" fg:x="90" fg:w="258"/><text x="10.4080%" y="591.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (258 samples, 29.12%)</title><rect x="10.1580%" y="565" width="29.1196%" height="15" fill="rgb(233,42,35)" fg:x="90" fg:w="258"/><text x="10.4080%" y="575.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (258 samples, 29.12%)</title><rect x="10.1580%" y="549" width="29.1196%" height="15" fill="rgb(231,13,6)" fg:x="90" fg:w="258"/><text x="10.4080%" y="559.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (258 samples, 29.12%)</title><rect x="10.1580%" y="533" width="29.1196%" height="15" fill="rgb(207,181,40)" fg:x="90" fg:w="258"/><text x="10.4080%" y="543.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; ..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (258 samples, 29.12%)</title><rect x="10.1580%" y="517" width="29.1196%" height="15" fill="rgb(254,173,49)" fg:x="90" fg:w="258"/><text x="10.4080%" y="527.50">std::thread::Builder::spawn_unchecked_::{{closu..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (258 samples, 29.12%)</title><rect x="10.1580%" y="501" width="29.1196%" height="15" fill="rgb(221,1,38)" fg:x="90" fg:w="258"/><text x="10.4080%" y="511.50">std::sys_common::backtrace::__rust_begin_short_..</text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (258 samples, 29.12%)</title><rect x="10.1580%" y="485" width="29.1196%" height="15" fill="rgb(206,124,46)" fg:x="90" fg:w="258"/><text x="10.4080%" y="495.50">cpal::host::alsa::Stream::new_output::{{closure..</text></g><g><title>cpal::host::alsa::output_stream_worker (258 samples, 29.12%)</title><rect x="10.1580%" y="469" width="29.1196%" height="15" fill="rgb(249,21,11)" fg:x="90" fg:w="258"/><text x="10.4080%" y="479.50">cpal::host::alsa::output_stream_worker</text></g><g><title>cpal::host::alsa::process_output (254 samples, 28.67%)</title><rect x="10.6095%" y="453" width="28.6682%" height="15" fill="rgb(222,201,40)" fg:x="94" fg:w="254"/><text x="10.8595%" y="463.50">cpal::host::alsa::process_output</text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (254 samples, 28.67%)</title><rect x="10.6095%" y="437" width="28.6682%" height="15" fill="rgb(235,61,29)" fg:x="94" fg:w="254"/><text x="10.8595%" y="447.50">cpal::traits::DeviceTrait::build_output_stream..</text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (254 samples, 28.67%)</title><rect x="10.6095%" y="421" width="28.6682%" height="15" fill="rgb(219,207,3)" fg:x="94" fg:w="254"/><text x="10.8595%" y="431.50">granular_synthesizer_cli::run::{{closure}}::{{..</text></g><g><title>granular_synthesizer_cli::write_data_to_frame_buffer (254 samples, 28.67%)</title><rect x="10.6095%" y="405" width="28.6682%" height="15" fill="rgb(222,56,46)" fg:x="94" fg:w="254"/><text x="10.8595%" y="415.50">granular_synthesizer_cli::write_data_to_frame_..</text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (254 samples, 28.67%)</title><rect x="10.6095%" y="389" width="28.6682%" height="15" fill="rgb(239,76,54)" fg:x="94" fg:w="254"/><text x="10.8595%" y="399.50">granular_synthesizer_cli::run::{{closure}}::{{..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.11%)</title><rect x="39.1648%" y="373" width="0.1129%" height="15" fill="rgb(231,124,27)" fg:x="347" fg:w="1"/><text x="39.4148%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (1 samples, 0.11%)</title><rect x="39.1648%" y="357" width="0.1129%" height="15" fill="rgb(249,195,6)" fg:x="347" fg:w="1"/><text x="39.4148%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.11%)</title><rect x="39.1648%" y="341" width="0.1129%" height="15" fill="rgb(237,174,47)" fg:x="347" fg:w="1"/><text x="39.4148%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.11%)</title><rect x="39.1648%" y="325" width="0.1129%" height="15" fill="rgb(206,201,31)" fg:x="347" fg:w="1"/><text x="39.4148%" y="335.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (17 samples, 1.92%)</title><rect x="40.4063%" y="533" width="1.9187%" height="15" fill="rgb(231,57,52)" fg:x="358" fg:w="17"/><text x="40.6563%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.68%)</title><rect x="44.8081%" y="517" width="0.6772%" height="15" fill="rgb(248,177,22)" fg:x="397" fg:w="6"/><text x="45.0581%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (6 samples, 0.68%)</title><rect x="44.8081%" y="501" width="0.6772%" height="15" fill="rgb(215,211,37)" fg:x="397" fg:w="6"/><text x="45.0581%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.68%)</title><rect x="44.8081%" y="485" width="0.6772%" height="15" fill="rgb(241,128,51)" fg:x="397" fg:w="6"/><text x="45.0581%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (8 samples, 0.90%)</title><rect x="45.4853%" y="517" width="0.9029%" height="15" fill="rgb(227,165,31)" fg:x="403" fg:w="8"/><text x="45.7353%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (8 samples, 0.90%)</title><rect x="45.4853%" y="501" width="0.9029%" height="15" fill="rgb(228,167,24)" fg:x="403" fg:w="8"/><text x="45.7353%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (8 samples, 0.90%)</title><rect x="45.4853%" y="485" width="0.9029%" height="15" fill="rgb(228,143,12)" fg:x="403" fg:w="8"/><text x="45.7353%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (63 samples, 7.11%)</title><rect x="40.4063%" y="565" width="7.1106%" height="15" fill="rgb(249,149,8)" fg:x="358" fg:w="63"/><text x="40.6563%" y="575.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (63 samples, 7.11%)</title><rect x="40.4063%" y="549" width="7.1106%" height="15" fill="rgb(243,35,44)" fg:x="358" fg:w="63"/><text x="40.6563%" y="559.50">core::iter..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples::{{closure}} (46 samples, 5.19%)</title><rect x="42.3251%" y="533" width="5.1919%" height="15" fill="rgb(246,89,9)" fg:x="375" fg:w="46"/><text x="42.5751%" y="543.50">audio:..</text></g><g><title>audio::grain::Grain::next_frame (10 samples, 1.13%)</title><rect x="46.3883%" y="517" width="1.1287%" height="15" fill="rgb(233,213,13)" fg:x="411" fg:w="10"/><text x="46.6383%" y="527.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (6 samples, 0.68%)</title><rect x="47.5169%" y="549" width="0.6772%" height="15" fill="rgb(233,141,41)" fg:x="421" fg:w="6"/><text x="47.7669%" y="559.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::fill_buffer_and_env_samples (80 samples, 9.03%)</title><rect x="39.5034%" y="661" width="9.0293%" height="15" fill="rgb(239,167,4)" fg:x="350" fg:w="80"/><text x="39.7534%" y="671.50">audio::granul..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (80 samples, 9.03%)</title><rect x="39.5034%" y="645" width="9.0293%" height="15" fill="rgb(209,217,16)" fg:x="350" fg:w="80"/><text x="39.7534%" y="655.50">core::iter::t..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 9.03%)</title><rect x="39.5034%" y="629" width="9.0293%" height="15" fill="rgb(219,88,35)" fg:x="350" fg:w="80"/><text x="39.7534%" y="639.50">&lt;core::iter::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 9.03%)</title><rect x="39.5034%" y="613" width="9.0293%" height="15" fill="rgb(220,193,23)" fg:x="350" fg:w="80"/><text x="39.7534%" y="623.50">&lt;core::iter::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (80 samples, 9.03%)</title><rect x="39.5034%" y="597" width="9.0293%" height="15" fill="rgb(230,90,52)" fg:x="350" fg:w="80"/><text x="39.7534%" y="607.50">core::iter::t..</text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (80 samples, 9.03%)</title><rect x="39.5034%" y="581" width="9.0293%" height="15" fill="rgb(252,106,19)" fg:x="350" fg:w="80"/><text x="39.7534%" y="591.50">core::iter::a..</text></g><g><title>audio::int_set::int_set_struct::IntSet&lt;V&gt;::iter_mut::{{closure}} (9 samples, 1.02%)</title><rect x="47.5169%" y="565" width="1.0158%" height="15" fill="rgb(206,74,20)" fg:x="421" fg:w="9"/><text x="47.7669%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.34%)</title><rect x="48.1941%" y="549" width="0.3386%" height="15" fill="rgb(230,138,44)" fg:x="427" fg:w="3"/><text x="48.4441%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.11%)</title><rect x="48.5327%" y="645" width="0.1129%" height="15" fill="rgb(235,182,43)" fg:x="430" fg:w="1"/><text x="48.7827%" y="655.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::num_channels_for_frame (2 samples, 0.23%)</title><rect x="48.6456%" y="645" width="0.2257%" height="15" fill="rgb(242,16,51)" fg:x="431" fg:w="2"/><text x="48.8956%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="48.8713%" y="613" width="0.1129%" height="15" fill="rgb(248,9,4)" fg:x="433" fg:w="1"/><text x="49.1213%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.11%)</title><rect x="48.8713%" y="597" width="0.1129%" height="15" fill="rgb(210,31,22)" fg:x="433" fg:w="1"/><text x="49.1213%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.34%)</title><rect x="48.8713%" y="645" width="0.3386%" height="15" fill="rgb(239,54,39)" fg:x="433" fg:w="3"/><text x="49.1213%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.34%)</title><rect x="48.8713%" y="629" width="0.3386%" height="15" fill="rgb(230,99,41)" fg:x="433" fg:w="3"/><text x="49.1213%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.23%)</title><rect x="48.9842%" y="613" width="0.2257%" height="15" fill="rgb(253,106,12)" fg:x="434" fg:w="2"/><text x="49.2342%" y="623.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (2 samples, 0.23%)</title><rect x="48.9842%" y="597" width="0.2257%" height="15" fill="rgb(213,46,41)" fg:x="434" fg:w="2"/><text x="49.2342%" y="607.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (90 samples, 10.16%)</title><rect x="39.2777%" y="677" width="10.1580%" height="15" fill="rgb(215,133,35)" fg:x="348" fg:w="90"/><text x="39.5277%" y="687.50">&lt;audio::granula..</text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (8 samples, 0.90%)</title><rect x="48.5327%" y="661" width="0.9029%" height="15" fill="rgb(213,28,5)" fg:x="430" fg:w="8"/><text x="48.7827%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.23%)</title><rect x="49.2099%" y="645" width="0.2257%" height="15" fill="rgb(215,77,49)" fg:x="436" fg:w="2"/><text x="49.4599%" y="655.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.23%)</title><rect x="49.2099%" y="629" width="0.2257%" height="15" fill="rgb(248,100,22)" fg:x="436" fg:w="2"/><text x="49.4599%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.23%)</title><rect x="49.2099%" y="613" width="0.2257%" height="15" fill="rgb(208,67,9)" fg:x="436" fg:w="2"/><text x="49.4599%" y="623.50"></text></g><g><title>core::cmp::min (2 samples, 0.23%)</title><rect x="49.2099%" y="597" width="0.2257%" height="15" fill="rgb(219,133,21)" fg:x="436" fg:w="2"/><text x="49.4599%" y="607.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.23%)</title><rect x="49.2099%" y="581" width="0.2257%" height="15" fill="rgb(246,46,29)" fg:x="436" fg:w="2"/><text x="49.4599%" y="591.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (2 samples, 0.23%)</title><rect x="49.2099%" y="565" width="0.2257%" height="15" fill="rgb(246,185,52)" fg:x="436" fg:w="2"/><text x="49.4599%" y="575.50"></text></g><g><title>[[vdso]] (2 samples, 0.23%)</title><rect x="49.4357%" y="677" width="0.2257%" height="15" fill="rgb(252,136,11)" fg:x="438" fg:w="2"/><text x="49.6857%" y="687.50"></text></g><g><title>alsa::poll::poll (1 samples, 0.11%)</title><rect x="49.6614%" y="677" width="0.1129%" height="15" fill="rgb(219,138,53)" fg:x="440" fg:w="1"/><text x="49.9114%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="49.8871%" y="661" width="0.3386%" height="15" fill="rgb(211,51,23)" fg:x="442" fg:w="3"/><text x="50.1371%" y="671.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (5 samples, 0.56%)</title><rect x="49.7743%" y="677" width="0.5643%" height="15" fill="rgb(247,221,28)" fg:x="441" fg:w="5"/><text x="50.0243%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::fill (1 samples, 0.11%)</title><rect x="50.2257%" y="661" width="0.1129%" height="15" fill="rgb(251,222,45)" fg:x="445" fg:w="1"/><text x="50.4757%" y="671.50"></text></g><g><title>&lt;[T] as core::slice::specialize::SpecFill&lt;T&gt;&gt;::spec_fill (1 samples, 0.11%)</title><rect x="50.2257%" y="645" width="0.1129%" height="15" fill="rgb(217,162,53)" fg:x="445" fg:w="1"/><text x="50.4757%" y="655.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (2 samples, 0.23%)</title><rect x="50.3386%" y="677" width="0.2257%" height="15" fill="rgb(229,93,14)" fg:x="446" fg:w="2"/><text x="50.5886%" y="687.50"></text></g><g><title>cpal::host::alsa::process_output (2 samples, 0.23%)</title><rect x="50.3386%" y="661" width="0.2257%" height="15" fill="rgb(209,67,49)" fg:x="446" fg:w="2"/><text x="50.5886%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alsa::pcm::IO&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="50.4515%" y="645" width="0.1129%" height="15" fill="rgb(213,87,29)" fg:x="447" fg:w="1"/><text x="50.7015%" y="655.50"></text></g><g><title>&lt;alsa::pcm::IO&lt;S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="50.4515%" y="629" width="0.1129%" height="15" fill="rgb(205,151,52)" fg:x="447" fg:w="1"/><text x="50.7015%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.11%)</title><rect x="50.4515%" y="613" width="0.1129%" height="15" fill="rgb(253,215,39)" fg:x="447" fg:w="1"/><text x="50.7015%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.11%)</title><rect x="50.4515%" y="597" width="0.1129%" height="15" fill="rgb(221,220,41)" fg:x="447" fg:w="1"/><text x="50.7015%" y="607.50"></text></g><g><title>core::mem::replace (1 samples, 0.11%)</title><rect x="50.4515%" y="581" width="0.1129%" height="15" fill="rgb(218,133,21)" fg:x="447" fg:w="1"/><text x="50.7015%" y="591.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="50.4515%" y="565" width="0.1129%" height="15" fill="rgb(221,193,43)" fg:x="447" fg:w="1"/><text x="50.7015%" y="575.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (1 samples, 0.11%)</title><rect x="50.5643%" y="677" width="0.1129%" height="15" fill="rgb(240,128,52)" fg:x="448" fg:w="1"/><text x="50.8143%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="50.7901%" y="629" width="0.2257%" height="15" fill="rgb(253,114,12)" fg:x="450" fg:w="2"/><text x="51.0401%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="50.7901%" y="613" width="0.2257%" height="15" fill="rgb(215,223,47)" fg:x="450" fg:w="2"/><text x="51.0401%" y="623.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (4 samples, 0.45%)</title><rect x="50.6772%" y="677" width="0.4515%" height="15" fill="rgb(248,225,23)" fg:x="449" fg:w="4"/><text x="50.9272%" y="687.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (4 samples, 0.45%)</title><rect x="50.6772%" y="661" width="0.4515%" height="15" fill="rgb(250,108,0)" fg:x="449" fg:w="4"/><text x="50.9272%" y="671.50"></text></g><g><title>granular_synthesizer_cli::write_data_to_frame_buffer (3 samples, 0.34%)</title><rect x="50.7901%" y="645" width="0.3386%" height="15" fill="rgb(228,208,7)" fg:x="450" fg:w="3"/><text x="51.0401%" y="655.50"></text></g><g><title>&lt;core::slice::iter::ChunksMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="51.0158%" y="629" width="0.1129%" height="15" fill="rgb(244,45,10)" fg:x="452" fg:w="1"/><text x="51.2658%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut (1 samples, 0.11%)</title><rect x="51.0158%" y="613" width="0.1129%" height="15" fill="rgb(207,125,25)" fg:x="452" fg:w="1"/><text x="51.2658%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::split_at_mut_unchecked (1 samples, 0.11%)</title><rect x="51.0158%" y="597" width="0.1129%" height="15" fill="rgb(210,195,18)" fg:x="452" fg:w="1"/><text x="51.2658%" y="607.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (1 samples, 0.11%)</title><rect x="51.0158%" y="581" width="0.1129%" height="15" fill="rgb(249,80,12)" fg:x="452" fg:w="1"/><text x="51.2658%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.11%)</title><rect x="51.9187%" y="661" width="0.1129%" height="15" fill="rgb(221,65,9)" fg:x="460" fg:w="1"/><text x="52.1687%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;audio::granular_synthesizer::GranularSynthesizer&gt;&gt; (6 samples, 0.68%)</title><rect x="52.0316%" y="661" width="0.6772%" height="15" fill="rgb(235,49,36)" fg:x="461" fg:w="6"/><text x="52.2816%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.68%)</title><rect x="52.0316%" y="645" width="0.6772%" height="15" fill="rgb(225,32,20)" fg:x="461" fg:w="6"/><text x="52.2816%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (6 samples, 0.68%)</title><rect x="52.0316%" y="629" width="0.6772%" height="15" fill="rgb(215,141,46)" fg:x="461" fg:w="6"/><text x="52.2816%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (5 samples, 0.56%)</title><rect x="52.1445%" y="613" width="0.5643%" height="15" fill="rgb(250,160,47)" fg:x="462" fg:w="5"/><text x="52.3945%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.56%)</title><rect x="52.1445%" y="597" width="0.5643%" height="15" fill="rgb(216,222,40)" fg:x="462" fg:w="5"/><text x="52.3945%" y="607.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.23%)</title><rect x="52.7088%" y="645" width="0.2257%" height="15" fill="rgb(234,217,39)" fg:x="467" fg:w="2"/><text x="52.9588%" y="655.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.23%)</title><rect x="52.7088%" y="629" width="0.2257%" height="15" fill="rgb(207,178,40)" fg:x="467" fg:w="2"/><text x="52.9588%" y="639.50"></text></g><g><title>std::thread::panicking (2 samples, 0.23%)</title><rect x="52.7088%" y="613" width="0.2257%" height="15" fill="rgb(221,136,13)" fg:x="467" fg:w="2"/><text x="52.9588%" y="623.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.23%)</title><rect x="52.7088%" y="597" width="0.2257%" height="15" fill="rgb(249,199,10)" fg:x="467" fg:w="2"/><text x="52.9588%" y="607.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.23%)</title><rect x="52.7088%" y="581" width="0.2257%" height="15" fill="rgb(249,222,13)" fg:x="467" fg:w="2"/><text x="52.9588%" y="591.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}}::{{closure}} (30 samples, 3.39%)</title><rect x="51.1287%" y="677" width="3.3860%" height="15" fill="rgb(244,185,38)" fg:x="453" fg:w="30"/><text x="51.3787%" y="687.50">gra..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 1.81%)</title><rect x="52.7088%" y="661" width="1.8059%" height="15" fill="rgb(236,202,9)" fg:x="467" fg:w="16"/><text x="52.9588%" y="671.50">s..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (14 samples, 1.58%)</title><rect x="52.9345%" y="645" width="1.5801%" height="15" fill="rgb(250,229,37)" fg:x="469" fg:w="14"/><text x="53.1845%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (10 samples, 1.13%)</title><rect x="53.3860%" y="629" width="1.1287%" height="15" fill="rgb(206,174,23)" fg:x="473" fg:w="10"/><text x="53.6360%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 1.13%)</title><rect x="53.3860%" y="613" width="1.1287%" height="15" fill="rgb(211,33,43)" fg:x="473" fg:w="10"/><text x="53.6360%" y="623.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.11%)</title><rect x="54.5147%" y="677" width="0.1129%" height="15" fill="rgb(245,58,50)" fg:x="483" fg:w="1"/><text x="54.7647%" y="687.50"></text></g><g><title>pa_thread_is_running (1 samples, 0.11%)</title><rect x="54.6275%" y="677" width="0.1129%" height="15" fill="rgb(244,68,36)" fg:x="484" fg:w="1"/><text x="54.8775%" y="687.50"></text></g><g><title>pa_usec_to_bytes (1 samples, 0.11%)</title><rect x="54.7404%" y="677" width="0.1129%" height="15" fill="rgb(232,229,15)" fg:x="485" fg:w="1"/><text x="54.9904%" y="687.50"></text></g><g><title>snd_pcm_state (1 samples, 0.11%)</title><rect x="54.8533%" y="677" width="0.1129%" height="15" fill="rgb(254,30,23)" fg:x="486" fg:w="1"/><text x="55.1033%" y="687.50"></text></g><g><title>[unknown] (140 samples, 15.80%)</title><rect x="39.2777%" y="693" width="15.8014%" height="15" fill="rgb(235,160,14)" fg:x="348" fg:w="140"/><text x="39.5277%" y="703.50">[unknown]</text></g><g><title>snd_pcm_status (1 samples, 0.11%)</title><rect x="54.9661%" y="677" width="0.1129%" height="15" fill="rgb(212,155,44)" fg:x="487" fg:w="1"/><text x="55.2161%" y="687.50"></text></g><g><title>cpal_alsa_out (479 samples, 54.06%)</title><rect x="1.1287%" y="709" width="54.0632%" height="15" fill="rgb(226,2,50)" fg:x="10" fg:w="479"/><text x="1.3787%" y="719.50">cpal_alsa_out</text></g><g><title>std::panicking::HOOK (1 samples, 0.11%)</title><rect x="55.0790%" y="693" width="0.1129%" height="15" fill="rgb(234,177,6)" fg:x="488" fg:w="1"/><text x="55.3290%" y="703.50"></text></g><g><title>audio::downmixers::downmix_simple::downmix_simple_to_buffer (1 samples, 0.11%)</title><rect x="55.0790%" y="677" width="0.1129%" height="15" fill="rgb(217,24,9)" fg:x="488" fg:w="1"/><text x="55.3290%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="55.0790%" y="661" width="0.1129%" height="15" fill="rgb(220,13,46)" fg:x="488" fg:w="1"/><text x="55.3290%" y="671.50"></text></g><g><title>L3_imdct36 (1 samples, 0.11%)</title><rect x="55.1919%" y="693" width="0.1129%" height="15" fill="rgb(239,221,27)" fg:x="489" fg:w="1"/><text x="55.4419%" y="703.50"></text></g><g><title>[[heap]] (1 samples, 0.11%)</title><rect x="55.3047%" y="693" width="0.1129%" height="15" fill="rgb(222,198,25)" fg:x="490" fg:w="1"/><text x="55.5547%" y="703.50"></text></g><g><title>std::thread::Thread::new (1 samples, 0.11%)</title><rect x="55.3047%" y="677" width="0.1129%" height="15" fill="rgb(211,99,13)" fg:x="490" fg:w="1"/><text x="55.5547%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (1 samples, 0.11%)</title><rect x="55.3047%" y="661" width="0.1129%" height="15" fill="rgb(232,111,31)" fg:x="490" fg:w="1"/><text x="55.5547%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (1 samples, 0.11%)</title><rect x="55.3047%" y="645" width="0.1129%" height="15" fill="rgb(245,82,37)" fg:x="490" fg:w="1"/><text x="55.5547%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (1 samples, 0.11%)</title><rect x="55.3047%" y="629" width="0.1129%" height="15" fill="rgb(227,149,46)" fg:x="490" fg:w="1"/><text x="55.5547%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.11%)</title><rect x="55.3047%" y="613" width="0.1129%" height="15" fill="rgb(218,36,50)" fg:x="490" fg:w="1"/><text x="55.5547%" y="623.50"></text></g><g><title>[[stack]] (1 samples, 0.11%)</title><rect x="55.4176%" y="693" width="0.1129%" height="15" fill="rgb(226,80,48)" fg:x="491" fg:w="1"/><text x="55.6676%" y="703.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="55.4176%" y="677" width="0.1129%" height="15" fill="rgb(238,224,15)" fg:x="491" fg:w="1"/><text x="55.6676%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="55.5305%" y="677" width="0.1129%" height="15" fill="rgb(241,136,10)" fg:x="492" fg:w="1"/><text x="55.7805%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="55.5305%" y="661" width="0.1129%" height="15" fill="rgb(208,32,45)" fg:x="492" fg:w="1"/><text x="55.7805%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="55.5305%" y="645" width="0.1129%" height="15" fill="rgb(207,135,9)" fg:x="492" fg:w="1"/><text x="55.7805%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.11%)</title><rect x="55.5305%" y="629" width="0.1129%" height="15" fill="rgb(206,86,44)" fg:x="492" fg:w="1"/><text x="55.7805%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="55.5305%" y="613" width="0.1129%" height="15" fill="rgb(245,177,15)" fg:x="492" fg:w="1"/><text x="55.7805%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="55.5305%" y="597" width="0.1129%" height="15" fill="rgb(206,64,50)" fg:x="492" fg:w="1"/><text x="55.7805%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="55.5305%" y="581" width="0.1129%" height="15" fill="rgb(234,36,40)" fg:x="492" fg:w="1"/><text x="55.7805%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="55.5305%" y="565" width="0.1129%" height="15" fill="rgb(213,64,8)" fg:x="492" fg:w="1"/><text x="55.7805%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="55.5305%" y="549" width="0.1129%" height="15" fill="rgb(210,75,36)" fg:x="492" fg:w="1"/><text x="55.7805%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.11%)</title><rect x="55.5305%" y="533" width="0.1129%" height="15" fill="rgb(229,88,21)" fg:x="492" fg:w="1"/><text x="55.7805%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="55.5305%" y="517" width="0.1129%" height="15" fill="rgb(252,204,47)" fg:x="492" fg:w="1"/><text x="55.7805%" y="527.50"></text></g><g><title>[anon] (2 samples, 0.23%)</title><rect x="55.5305%" y="693" width="0.2257%" height="15" fill="rgb(208,77,27)" fg:x="492" fg:w="2"/><text x="55.7805%" y="703.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.11%)</title><rect x="55.6433%" y="677" width="0.1129%" height="15" fill="rgb(221,76,26)" fg:x="493" fg:w="1"/><text x="55.8933%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="55.6433%" y="661" width="0.1129%" height="15" fill="rgb(225,139,18)" fg:x="493" fg:w="1"/><text x="55.8933%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (1 samples, 0.11%)</title><rect x="55.6433%" y="645" width="0.1129%" height="15" fill="rgb(230,137,11)" fg:x="493" fg:w="1"/><text x="55.8933%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.11%)</title><rect x="55.6433%" y="629" width="0.1129%" height="15" fill="rgb(212,28,1)" fg:x="493" fg:w="1"/><text x="55.8933%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.11%)</title><rect x="55.7562%" y="693" width="0.1129%" height="15" fill="rgb(248,164,17)" fg:x="494" fg:w="1"/><text x="56.0062%" y="703.50"></text></g><g><title>[libc.so.6] (15 samples, 1.69%)</title><rect x="55.8691%" y="693" width="1.6930%" height="15" fill="rgb(222,171,42)" fg:x="495" fg:w="15"/><text x="56.1191%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="57.4492%" y="677" width="0.1129%" height="15" fill="rgb(243,84,45)" fg:x="509" fg:w="1"/><text x="57.6992%" y="687.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="57.4492%" y="661" width="0.1129%" height="15" fill="rgb(252,49,23)" fg:x="509" fg:w="1"/><text x="57.6992%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="57.4492%" y="645" width="0.1129%" height="15" fill="rgb(215,19,7)" fg:x="509" fg:w="1"/><text x="57.6992%" y="655.50"></text></g><g><title>pa_mainloop_run (1 samples, 0.11%)</title><rect x="57.4492%" y="629" width="0.1129%" height="15" fill="rgb(238,81,41)" fg:x="509" fg:w="1"/><text x="57.6992%" y="639.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="57.4492%" y="613" width="0.1129%" height="15" fill="rgb(210,199,37)" fg:x="509" fg:w="1"/><text x="57.6992%" y="623.50"></text></g><g><title>pa_mainloop_poll (1 samples, 0.11%)</title><rect x="57.4492%" y="597" width="0.1129%" height="15" fill="rgb(244,192,49)" fg:x="509" fg:w="1"/><text x="57.6992%" y="607.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="57.4492%" y="581" width="0.1129%" height="15" fill="rgb(226,211,11)" fg:x="509" fg:w="1"/><text x="57.6992%" y="591.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.11%)</title><rect x="57.4492%" y="565" width="0.1129%" height="15" fill="rgb(236,162,54)" fg:x="509" fg:w="1"/><text x="57.6992%" y="575.50"></text></g><g><title>__ctype_init (1 samples, 0.11%)</title><rect x="57.4492%" y="549" width="0.1129%" height="15" fill="rgb(220,229,9)" fg:x="509" fg:w="1"/><text x="57.6992%" y="559.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Host as cpal::traits::HostTrait&gt;::default_input_device (1 samples, 0.11%)</title><rect x="58.0135%" y="677" width="0.1129%" height="15" fill="rgb(250,87,22)" fg:x="514" fg:w="1"/><text x="58.2635%" y="687.50"></text></g><g><title>&lt;cpal::host::alsa::Host as cpal::traits::HostTrait&gt;::default_input_device (1 samples, 0.11%)</title><rect x="58.0135%" y="661" width="0.1129%" height="15" fill="rgb(239,43,17)" fg:x="514" fg:w="1"/><text x="58.2635%" y="671.50"></text></g><g><title>cpal::host::alsa::enumerate::default_input_device (1 samples, 0.11%)</title><rect x="58.0135%" y="645" width="0.1129%" height="15" fill="rgb(231,177,25)" fg:x="514" fg:w="1"/><text x="58.2635%" y="655.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.11%)</title><rect x="58.0135%" y="629" width="0.1129%" height="15" fill="rgb(219,179,1)" fg:x="514" fg:w="1"/><text x="58.2635%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.11%)</title><rect x="58.0135%" y="613" width="0.1129%" height="15" fill="rgb(238,219,53)" fg:x="514" fg:w="1"/><text x="58.2635%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="58.0135%" y="597" width="0.1129%" height="15" fill="rgb(232,167,36)" fg:x="514" fg:w="1"/><text x="58.2635%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="58.0135%" y="581" width="0.1129%" height="15" fill="rgb(244,19,51)" fg:x="514" fg:w="1"/><text x="58.2635%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="58.0135%" y="565" width="0.1129%" height="15" fill="rgb(224,6,22)" fg:x="514" fg:w="1"/><text x="58.2635%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="58.0135%" y="549" width="0.1129%" height="15" fill="rgb(224,145,5)" fg:x="514" fg:w="1"/><text x="58.2635%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.11%)</title><rect x="58.0135%" y="533" width="0.1129%" height="15" fill="rgb(234,130,49)" fg:x="514" fg:w="1"/><text x="58.2635%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="58.0135%" y="517" width="0.1129%" height="15" fill="rgb(254,6,2)" fg:x="514" fg:w="1"/><text x="58.2635%" y="527.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.34%)</title><rect x="58.1264%" y="677" width="0.3386%" height="15" fill="rgb(208,96,46)" fg:x="515" fg:w="3"/><text x="58.3764%" y="687.50"></text></g><g><title>&lt;slice_deque::SliceDeque&lt;T&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="58.4650%" y="677" width="0.1129%" height="15" fill="rgb(239,3,39)" fg:x="518" fg:w="1"/><text x="58.7150%" y="687.50"></text></g><g><title>&lt;slice_deque::SliceDeque&lt;T&gt; as slice_deque::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="58.4650%" y="661" width="0.1129%" height="15" fill="rgb(233,210,1)" fg:x="518" fg:w="1"/><text x="58.7150%" y="671.50"></text></g><g><title>&lt;slice_deque::SliceDeque&lt;T&gt; as slice_deque::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="58.4650%" y="645" width="0.1129%" height="15" fill="rgb(244,137,37)" fg:x="518" fg:w="1"/><text x="58.7150%" y="655.50"></text></g><g><title>slice_deque::SliceDeque&lt;T&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="58.4650%" y="629" width="0.1129%" height="15" fill="rgb(240,136,2)" fg:x="518" fg:w="1"/><text x="58.7150%" y="639.50"></text></g><g><title>slice_deque::SliceDeque&lt;T&gt;::move_tail_unchecked (1 samples, 0.11%)</title><rect x="58.4650%" y="613" width="0.1129%" height="15" fill="rgb(239,18,37)" fg:x="518" fg:w="1"/><text x="58.7150%" y="623.50"></text></g><g><title>L3_dct3_9 (1 samples, 0.11%)</title><rect x="58.5779%" y="677" width="0.1129%" height="15" fill="rgb(218,185,22)" fg:x="519" fg:w="1"/><text x="58.8279%" y="687.50"></text></g><g><title>L3_imdct36 (2 samples, 0.23%)</title><rect x="58.6907%" y="677" width="0.2257%" height="15" fill="rgb(225,218,4)" fg:x="520" fg:w="2"/><text x="58.9407%" y="687.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.11%)</title><rect x="58.8036%" y="661" width="0.1129%" height="15" fill="rgb(230,182,32)" fg:x="521" fg:w="1"/><text x="59.0536%" y="671.50"></text></g><g><title>[libc.so.6] (4 samples, 0.45%)</title><rect x="58.9165%" y="677" width="0.4515%" height="15" fill="rgb(242,56,43)" fg:x="522" fg:w="4"/><text x="59.1665%" y="687.50"></text></g><g><title>__ctype_init (7 samples, 0.79%)</title><rect x="59.3679%" y="677" width="0.7901%" height="15" fill="rgb(233,99,24)" fg:x="526" fg:w="7"/><text x="59.6179%" y="687.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="60.1580%" y="677" width="0.1129%" height="15" fill="rgb(234,209,42)" fg:x="533" fg:w="1"/><text x="60.4080%" y="687.50"></text></g><g><title>cpal::platform::platform_impl::default_host (1 samples, 0.11%)</title><rect x="60.2709%" y="677" width="0.1129%" height="15" fill="rgb(227,7,12)" fg:x="534" fg:w="1"/><text x="60.5209%" y="687.50"></text></g><g><title>_mm_min_ps (1 samples, 0.11%)</title><rect x="60.3837%" y="661" width="0.1129%" height="15" fill="rgb(245,203,43)" fg:x="535" fg:w="1"/><text x="60.6337%" y="671.50"></text></g><g><title>mp3d_synth (3 samples, 0.34%)</title><rect x="60.3837%" y="677" width="0.3386%" height="15" fill="rgb(238,205,33)" fg:x="535" fg:w="3"/><text x="60.6337%" y="687.50"></text></g><g><title>_mm_mul_ps (2 samples, 0.23%)</title><rect x="60.4966%" y="661" width="0.2257%" height="15" fill="rgb(231,56,7)" fg:x="536" fg:w="2"/><text x="60.7466%" y="671.50"></text></g><g><title>mp3d_synth_pair (1 samples, 0.11%)</title><rect x="60.7223%" y="677" width="0.1129%" height="15" fill="rgb(244,186,29)" fg:x="538" fg:w="1"/><text x="60.9723%" y="687.50"></text></g><g><title>mp3d_scale_pcm (1 samples, 0.11%)</title><rect x="60.7223%" y="661" width="0.1129%" height="15" fill="rgb(234,111,31)" fg:x="538" fg:w="1"/><text x="60.9723%" y="671.50"></text></g><g><title>L3_antialias (1 samples, 0.11%)</title><rect x="60.8352%" y="645" width="0.1129%" height="15" fill="rgb(241,149,10)" fg:x="539" fg:w="1"/><text x="61.0852%" y="655.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.11%)</title><rect x="60.8352%" y="629" width="0.1129%" height="15" fill="rgb(249,206,44)" fg:x="539" fg:w="1"/><text x="61.0852%" y="639.50"></text></g><g><title>L3_huffman (6 samples, 0.68%)</title><rect x="60.9481%" y="645" width="0.6772%" height="15" fill="rgb(251,153,30)" fg:x="540" fg:w="6"/><text x="61.1981%" y="655.50"></text></g><g><title>L3_decode (8 samples, 0.90%)</title><rect x="60.8352%" y="661" width="0.9029%" height="15" fill="rgb(239,152,38)" fg:x="539" fg:w="8"/><text x="61.0852%" y="671.50"></text></g><g><title>L3_imdct_gr (1 samples, 0.11%)</title><rect x="61.6253%" y="645" width="0.1129%" height="15" fill="rgb(249,139,47)" fg:x="546" fg:w="1"/><text x="61.8753%" y="655.50"></text></g><g><title>L3_imdct36 (1 samples, 0.11%)</title><rect x="61.6253%" y="629" width="0.1129%" height="15" fill="rgb(244,64,35)" fg:x="546" fg:w="1"/><text x="61.8753%" y="639.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.11%)</title><rect x="61.6253%" y="613" width="0.1129%" height="15" fill="rgb(216,46,15)" fg:x="546" fg:w="1"/><text x="61.8753%" y="623.50"></text></g><g><title>L3_imdct36 (2 samples, 0.23%)</title><rect x="61.7381%" y="645" width="0.2257%" height="15" fill="rgb(250,74,19)" fg:x="547" fg:w="2"/><text x="61.9881%" y="655.50"></text></g><g><title>_mm_mul_ps (2 samples, 0.23%)</title><rect x="61.7381%" y="629" width="0.2257%" height="15" fill="rgb(249,42,33)" fg:x="547" fg:w="2"/><text x="61.9881%" y="639.50"></text></g><g><title>mp3d_synth (2 samples, 0.23%)</title><rect x="61.9639%" y="645" width="0.2257%" height="15" fill="rgb(242,149,17)" fg:x="549" fg:w="2"/><text x="62.2139%" y="655.50"></text></g><g><title>_mm_cvtps_epi32 (1 samples, 0.11%)</title><rect x="62.0767%" y="629" width="0.1129%" height="15" fill="rgb(244,29,21)" fg:x="550" fg:w="1"/><text x="62.3267%" y="639.50"></text></g><g><title>L3_decode (2 samples, 0.23%)</title><rect x="62.1896%" y="629" width="0.2257%" height="15" fill="rgb(220,130,37)" fg:x="551" fg:w="2"/><text x="62.4396%" y="639.50"></text></g><g><title>L3_huffman (2 samples, 0.23%)</title><rect x="62.1896%" y="613" width="0.2257%" height="15" fill="rgb(211,67,2)" fg:x="551" fg:w="2"/><text x="62.4396%" y="623.50"></text></g><g><title>L3_read_side_info (1 samples, 0.11%)</title><rect x="62.4153%" y="629" width="0.1129%" height="15" fill="rgb(235,68,52)" fg:x="553" fg:w="1"/><text x="62.6653%" y="639.50"></text></g><g><title>get_bits (1 samples, 0.11%)</title><rect x="62.4153%" y="613" width="0.1129%" height="15" fill="rgb(246,142,3)" fg:x="553" fg:w="1"/><text x="62.6653%" y="623.50"></text></g><g><title>mp3dec_decode_frame (16 samples, 1.81%)</title><rect x="60.8352%" y="677" width="1.8059%" height="15" fill="rgb(241,25,7)" fg:x="539" fg:w="16"/><text x="61.0852%" y="687.50">m..</text></g><g><title>mp3d_synth_granule (8 samples, 0.90%)</title><rect x="61.7381%" y="661" width="0.9029%" height="15" fill="rgb(242,119,39)" fg:x="547" fg:w="8"/><text x="61.9881%" y="671.50"></text></g><g><title>mp3dec_decode_frame (4 samples, 0.45%)</title><rect x="62.1896%" y="645" width="0.4515%" height="15" fill="rgb(241,98,45)" fg:x="551" fg:w="4"/><text x="62.4396%" y="655.50"></text></g><g><title>mp3d_synth_granule (1 samples, 0.11%)</title><rect x="62.5282%" y="629" width="0.1129%" height="15" fill="rgb(254,28,30)" fg:x="554" fg:w="1"/><text x="62.7782%" y="639.50"></text></g><g><title>memcpy (1 samples, 0.11%)</title><rect x="62.5282%" y="613" width="0.1129%" height="15" fill="rgb(241,142,54)" fg:x="554" fg:w="1"/><text x="62.7782%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.11%)</title><rect x="62.6411%" y="661" width="0.1129%" height="15" fill="rgb(222,85,15)" fg:x="555" fg:w="1"/><text x="62.8911%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.11%)</title><rect x="62.6411%" y="645" width="0.1129%" height="15" fill="rgb(210,85,47)" fg:x="555" fg:w="1"/><text x="62.8911%" y="655.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.23%)</title><rect x="62.6411%" y="677" width="0.2257%" height="15" fill="rgb(224,206,25)" fg:x="555" fg:w="2"/><text x="62.8911%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.11%)</title><rect x="62.7540%" y="661" width="0.1129%" height="15" fill="rgb(243,201,19)" fg:x="556" fg:w="1"/><text x="63.0040%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.11%)</title><rect x="62.7540%" y="645" width="0.1129%" height="15" fill="rgb(236,59,4)" fg:x="556" fg:w="1"/><text x="63.0040%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.11%)</title><rect x="62.7540%" y="629" width="0.1129%" height="15" fill="rgb(254,179,45)" fg:x="556" fg:w="1"/><text x="63.0040%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.11%)</title><rect x="62.7540%" y="613" width="0.1129%" height="15" fill="rgb(226,14,10)" fg:x="556" fg:w="1"/><text x="63.0040%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="62.7540%" y="597" width="0.1129%" height="15" fill="rgb(244,27,41)" fg:x="556" fg:w="1"/><text x="63.0040%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="62.7540%" y="581" width="0.1129%" height="15" fill="rgb(235,35,32)" fg:x="556" fg:w="1"/><text x="63.0040%" y="591.50"></text></g><g><title>[unknown] (48 samples, 5.42%)</title><rect x="57.5621%" y="693" width="5.4176%" height="15" fill="rgb(218,68,31)" fg:x="510" fg:w="48"/><text x="57.8121%" y="703.50">[unknow..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.11%)</title><rect x="62.8668%" y="677" width="0.1129%" height="15" fill="rgb(207,120,37)" fg:x="557" fg:w="1"/><text x="63.1168%" y="687.50"></text></g><g><title>tokio::runtime::blocking::pool::SpawnerMetrics::inc_queue_depth (1 samples, 0.11%)</title><rect x="62.8668%" y="661" width="0.1129%" height="15" fill="rgb(227,98,0)" fg:x="557" fg:w="1"/><text x="63.1168%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.11%)</title><rect x="62.8668%" y="645" width="0.1129%" height="15" fill="rgb(207,7,3)" fg:x="557" fg:w="1"/><text x="63.1168%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.11%)</title><rect x="62.8668%" y="629" width="0.1129%" height="15" fill="rgb(206,98,19)" fg:x="557" fg:w="1"/><text x="63.1168%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="62.9797%" y="165" width="0.1129%" height="15" fill="rgb(217,5,26)" fg:x="558" fg:w="1"/><text x="63.2297%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="62.9797%" y="149" width="0.1129%" height="15" fill="rgb(235,190,38)" fg:x="558" fg:w="1"/><text x="63.2297%" y="159.50"></text></g><g><title>tokio::runtime::builder::Builder::build (2 samples, 0.23%)</title><rect x="62.9797%" y="421" width="0.2257%" height="15" fill="rgb(247,86,24)" fg:x="558" fg:w="2"/><text x="63.2297%" y="431.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (2 samples, 0.23%)</title><rect x="62.9797%" y="405" width="0.2257%" height="15" fill="rgb(205,101,16)" fg:x="558" fg:w="2"/><text x="63.2297%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (2 samples, 0.23%)</title><rect x="62.9797%" y="389" width="0.2257%" height="15" fill="rgb(246,168,33)" fg:x="558" fg:w="2"/><text x="63.2297%" y="399.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (2 samples, 0.23%)</title><rect x="62.9797%" y="373" width="0.2257%" height="15" fill="rgb(231,114,1)" fg:x="558" fg:w="2"/><text x="63.2297%" y="383.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (2 samples, 0.23%)</title><rect x="62.9797%" y="357" width="0.2257%" height="15" fill="rgb(207,184,53)" fg:x="558" fg:w="2"/><text x="63.2297%" y="367.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (2 samples, 0.23%)</title><rect x="62.9797%" y="341" width="0.2257%" height="15" fill="rgb(224,95,51)" fg:x="558" fg:w="2"/><text x="63.2297%" y="351.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (2 samples, 0.23%)</title><rect x="62.9797%" y="325" width="0.2257%" height="15" fill="rgb(212,188,45)" fg:x="558" fg:w="2"/><text x="63.2297%" y="335.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (2 samples, 0.23%)</title><rect x="62.9797%" y="309" width="0.2257%" height="15" fill="rgb(223,154,38)" fg:x="558" fg:w="2"/><text x="63.2297%" y="319.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.23%)</title><rect x="62.9797%" y="293" width="0.2257%" height="15" fill="rgb(251,22,52)" fg:x="558" fg:w="2"/><text x="63.2297%" y="303.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.23%)</title><rect x="62.9797%" y="277" width="0.2257%" height="15" fill="rgb(229,209,22)" fg:x="558" fg:w="2"/><text x="63.2297%" y="287.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.23%)</title><rect x="62.9797%" y="261" width="0.2257%" height="15" fill="rgb(234,138,34)" fg:x="558" fg:w="2"/><text x="63.2297%" y="271.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.23%)</title><rect x="62.9797%" y="245" width="0.2257%" height="15" fill="rgb(212,95,11)" fg:x="558" fg:w="2"/><text x="63.2297%" y="255.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.23%)</title><rect x="62.9797%" y="229" width="0.2257%" height="15" fill="rgb(240,179,47)" fg:x="558" fg:w="2"/><text x="63.2297%" y="239.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.23%)</title><rect x="62.9797%" y="213" width="0.2257%" height="15" fill="rgb(240,163,11)" fg:x="558" fg:w="2"/><text x="63.2297%" y="223.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.23%)</title><rect x="62.9797%" y="197" width="0.2257%" height="15" fill="rgb(236,37,12)" fg:x="558" fg:w="2"/><text x="63.2297%" y="207.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.23%)</title><rect x="62.9797%" y="181" width="0.2257%" height="15" fill="rgb(232,164,16)" fg:x="558" fg:w="2"/><text x="63.2297%" y="191.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.11%)</title><rect x="63.0926%" y="165" width="0.1129%" height="15" fill="rgb(244,205,15)" fg:x="559" fg:w="1"/><text x="63.3426%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="63.0926%" y="149" width="0.1129%" height="15" fill="rgb(223,117,47)" fg:x="559" fg:w="1"/><text x="63.3426%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="63.2054%" y="165" width="0.2257%" height="15" fill="rgb(244,107,35)" fg:x="560" fg:w="2"/><text x="63.4554%" y="175.50"></text></g><g><title>&lt;rodio::decoder::Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="63.4312%" y="165" width="0.1129%" height="15" fill="rgb(205,140,8)" fg:x="562" fg:w="1"/><text x="63.6812%" y="175.50"></text></g><g><title>&lt;rodio::decoder::mp3::Mp3Decoder&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="63.4312%" y="149" width="0.1129%" height="15" fill="rgb(228,84,46)" fg:x="562" fg:w="1"/><text x="63.6812%" y="159.50"></text></g><g><title>minimp3::Decoder&lt;R&gt;::next_frame (1 samples, 0.11%)</title><rect x="63.4312%" y="133" width="0.1129%" height="15" fill="rgb(254,188,9)" fg:x="562" fg:w="1"/><text x="63.6812%" y="143.50"></text></g><g><title>minimp3::Decoder&lt;R&gt;::refill (1 samples, 0.11%)</title><rect x="63.4312%" y="117" width="0.1129%" height="15" fill="rgb(206,112,54)" fg:x="562" fg:w="1"/><text x="63.6812%" y="127.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="63.4312%" y="101" width="0.1129%" height="15" fill="rgb(216,84,49)" fg:x="562" fg:w="1"/><text x="63.6812%" y="111.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (1 samples, 0.11%)</title><rect x="63.4312%" y="85" width="0.1129%" height="15" fill="rgb(214,194,35)" fg:x="562" fg:w="1"/><text x="63.6812%" y="95.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.11%)</title><rect x="63.4312%" y="69" width="0.1129%" height="15" fill="rgb(249,28,3)" fg:x="562" fg:w="1"/><text x="63.6812%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="63.4312%" y="53" width="0.1129%" height="15" fill="rgb(222,56,52)" fg:x="562" fg:w="1"/><text x="63.6812%" y="63.50"></text></g><g><title>mp3d_synth_pair (1 samples, 0.11%)</title><rect x="63.4312%" y="37" width="0.1129%" height="15" fill="rgb(245,217,50)" fg:x="562" fg:w="1"/><text x="63.6812%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.45%)</title><rect x="63.2054%" y="261" width="0.4515%" height="15" fill="rgb(213,201,24)" fg:x="560" fg:w="4"/><text x="63.4554%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.45%)</title><rect x="63.2054%" y="245" width="0.4515%" height="15" fill="rgb(248,116,28)" fg:x="560" fg:w="4"/><text x="63.4554%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.45%)</title><rect x="63.2054%" y="229" width="0.4515%" height="15" fill="rgb(219,72,43)" fg:x="560" fg:w="4"/><text x="63.4554%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.45%)</title><rect x="63.2054%" y="213" width="0.4515%" height="15" fill="rgb(209,138,14)" fg:x="560" fg:w="4"/><text x="63.4554%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.45%)</title><rect x="63.2054%" y="197" width="0.4515%" height="15" fill="rgb(222,18,33)" fg:x="560" fg:w="4"/><text x="63.4554%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.45%)</title><rect x="63.2054%" y="181" width="0.4515%" height="15" fill="rgb(213,199,7)" fg:x="560" fg:w="4"/><text x="63.4554%" y="191.50"></text></g><g><title>core::ptr::write (1 samples, 0.11%)</title><rect x="63.5440%" y="165" width="0.1129%" height="15" fill="rgb(250,110,10)" fg:x="563" fg:w="1"/><text x="63.7940%" y="175.50"></text></g><g><title>_start (7 samples, 0.79%)</title><rect x="62.9797%" y="693" width="0.7901%" height="15" fill="rgb(248,123,6)" fg:x="558" fg:w="7"/><text x="63.2297%" y="703.50"></text></g><g><title>__libc_start_main (7 samples, 0.79%)</title><rect x="62.9797%" y="677" width="0.7901%" height="15" fill="rgb(206,91,31)" fg:x="558" fg:w="7"/><text x="63.2297%" y="687.50"></text></g><g><title>[libc.so.6] (7 samples, 0.79%)</title><rect x="62.9797%" y="661" width="0.7901%" height="15" fill="rgb(211,154,13)" fg:x="558" fg:w="7"/><text x="63.2297%" y="671.50"></text></g><g><title>main (7 samples, 0.79%)</title><rect x="62.9797%" y="645" width="0.7901%" height="15" fill="rgb(225,148,7)" fg:x="558" fg:w="7"/><text x="63.2297%" y="655.50"></text></g><g><title>std::rt::lang_start_internal (7 samples, 0.79%)</title><rect x="62.9797%" y="629" width="0.7901%" height="15" fill="rgb(220,160,43)" fg:x="558" fg:w="7"/><text x="63.2297%" y="639.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.79%)</title><rect x="62.9797%" y="613" width="0.7901%" height="15" fill="rgb(213,52,39)" fg:x="558" fg:w="7"/><text x="63.2297%" y="623.50"></text></g><g><title>std::panicking::try (7 samples, 0.79%)</title><rect x="62.9797%" y="597" width="0.7901%" height="15" fill="rgb(243,137,7)" fg:x="558" fg:w="7"/><text x="63.2297%" y="607.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.79%)</title><rect x="62.9797%" y="581" width="0.7901%" height="15" fill="rgb(230,79,13)" fg:x="558" fg:w="7"/><text x="63.2297%" y="591.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (7 samples, 0.79%)</title><rect x="62.9797%" y="565" width="0.7901%" height="15" fill="rgb(247,105,23)" fg:x="558" fg:w="7"/><text x="63.2297%" y="575.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.79%)</title><rect x="62.9797%" y="549" width="0.7901%" height="15" fill="rgb(223,179,41)" fg:x="558" fg:w="7"/><text x="63.2297%" y="559.50"></text></g><g><title>std::panicking::try (7 samples, 0.79%)</title><rect x="62.9797%" y="533" width="0.7901%" height="15" fill="rgb(218,9,34)" fg:x="558" fg:w="7"/><text x="63.2297%" y="543.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.79%)</title><rect x="62.9797%" y="517" width="0.7901%" height="15" fill="rgb(222,106,8)" fg:x="558" fg:w="7"/><text x="63.2297%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.79%)</title><rect x="62.9797%" y="501" width="0.7901%" height="15" fill="rgb(211,220,0)" fg:x="558" fg:w="7"/><text x="63.2297%" y="511.50"></text></g><g><title>std::rt::lang_start::{{closure}} (7 samples, 0.79%)</title><rect x="62.9797%" y="485" width="0.7901%" height="15" fill="rgb(229,52,16)" fg:x="558" fg:w="7"/><text x="63.2297%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.79%)</title><rect x="62.9797%" y="469" width="0.7901%" height="15" fill="rgb(212,155,18)" fg:x="558" fg:w="7"/><text x="63.2297%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.79%)</title><rect x="62.9797%" y="453" width="0.7901%" height="15" fill="rgb(242,21,14)" fg:x="558" fg:w="7"/><text x="63.2297%" y="463.50"></text></g><g><title>granular_synthesizer_cli::main (7 samples, 0.79%)</title><rect x="62.9797%" y="437" width="0.7901%" height="15" fill="rgb(222,19,48)" fg:x="558" fg:w="7"/><text x="63.2297%" y="447.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (5 samples, 0.56%)</title><rect x="63.2054%" y="421" width="0.5643%" height="15" fill="rgb(232,45,27)" fg:x="560" fg:w="5"/><text x="63.4554%" y="431.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (5 samples, 0.56%)</title><rect x="63.2054%" y="405" width="0.5643%" height="15" fill="rgb(249,103,42)" fg:x="560" fg:w="5"/><text x="63.4554%" y="415.50"></text></g><g><title>tokio::runtime::context::BlockingRegionGuard::block_on (5 samples, 0.56%)</title><rect x="63.2054%" y="389" width="0.5643%" height="15" fill="rgb(246,81,33)" fg:x="560" fg:w="5"/><text x="63.4554%" y="399.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (5 samples, 0.56%)</title><rect x="63.2054%" y="373" width="0.5643%" height="15" fill="rgb(252,33,42)" fg:x="560" fg:w="5"/><text x="63.4554%" y="383.50"></text></g><g><title>tokio::runtime::coop::budget (5 samples, 0.56%)</title><rect x="63.2054%" y="357" width="0.5643%" height="15" fill="rgb(209,212,41)" fg:x="560" fg:w="5"/><text x="63.4554%" y="367.50"></text></g><g><title>tokio::runtime::coop::with_budget (5 samples, 0.56%)</title><rect x="63.2054%" y="341" width="0.5643%" height="15" fill="rgb(207,154,6)" fg:x="560" fg:w="5"/><text x="63.4554%" y="351.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (5 samples, 0.56%)</title><rect x="63.2054%" y="325" width="0.5643%" height="15" fill="rgb(223,64,47)" fg:x="560" fg:w="5"/><text x="63.4554%" y="335.50"></text></g><g><title>granular_synthesizer_cli::main::{{closure}} (5 samples, 0.56%)</title><rect x="63.2054%" y="309" width="0.5643%" height="15" fill="rgb(211,161,38)" fg:x="560" fg:w="5"/><text x="63.4554%" y="319.50"></text></g><g><title>granular_synthesizer_cli::run::{{closure}} (5 samples, 0.56%)</title><rect x="63.2054%" y="293" width="0.5643%" height="15" fill="rgb(219,138,40)" fg:x="560" fg:w="5"/><text x="63.4554%" y="303.50"></text></g><g><title>granular_synthesizer_cli::load_default_buffer (5 samples, 0.56%)</title><rect x="63.2054%" y="277" width="0.5643%" height="15" fill="rgb(241,228,46)" fg:x="560" fg:w="5"/><text x="63.4554%" y="287.50"></text></g><g><title>granular_synthesizer_cli::utils::i16_array_to_f32 (1 samples, 0.11%)</title><rect x="63.6569%" y="261" width="0.1129%" height="15" fill="rgb(223,209,38)" fg:x="564" fg:w="1"/><text x="63.9069%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="63.6569%" y="245" width="0.1129%" height="15" fill="rgb(236,164,45)" fg:x="564" fg:w="1"/><text x="63.9069%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="63.6569%" y="229" width="0.1129%" height="15" fill="rgb(231,15,5)" fg:x="564" fg:w="1"/><text x="63.9069%" y="239.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="63.6569%" y="213" width="0.1129%" height="15" fill="rgb(252,35,15)" fg:x="564" fg:w="1"/><text x="63.9069%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="63.6569%" y="197" width="0.1129%" height="15" fill="rgb(248,181,18)" fg:x="564" fg:w="1"/><text x="63.9069%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="63.6569%" y="181" width="0.1129%" height="15" fill="rgb(233,39,42)" fg:x="564" fg:w="1"/><text x="63.9069%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.11%)</title><rect x="63.6569%" y="165" width="0.1129%" height="15" fill="rgb(238,110,33)" fg:x="564" fg:w="1"/><text x="63.9069%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="63.6569%" y="149" width="0.1129%" height="15" fill="rgb(233,195,10)" fg:x="564" fg:w="1"/><text x="63.9069%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="63.6569%" y="133" width="0.1129%" height="15" fill="rgb(254,105,3)" fg:x="564" fg:w="1"/><text x="63.9069%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="63.6569%" y="117" width="0.1129%" height="15" fill="rgb(221,225,9)" fg:x="564" fg:w="1"/><text x="63.9069%" y="127.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="63.6569%" y="101" width="0.1129%" height="15" fill="rgb(224,227,45)" fg:x="564" fg:w="1"/><text x="63.9069%" y="111.50"></text></g><g><title>core::ptr::read (1 samples, 0.11%)</title><rect x="63.6569%" y="85" width="0.1129%" height="15" fill="rgb(229,198,43)" fg:x="564" fg:w="1"/><text x="63.9069%" y="95.50"></text></g><g><title>_mm_add_ps (1 samples, 0.11%)</title><rect x="63.7698%" y="677" width="0.1129%" height="15" fill="rgb(206,209,35)" fg:x="565" fg:w="1"/><text x="64.0198%" y="687.50"></text></g><g><title>_mm_mul_ps (1 samples, 0.11%)</title><rect x="63.8826%" y="677" width="0.1129%" height="15" fill="rgb(245,195,53)" fg:x="566" fg:w="1"/><text x="64.1326%" y="687.50"></text></g><g><title>mp3d_synth (4 samples, 0.45%)</title><rect x="63.7698%" y="693" width="0.4515%" height="15" fill="rgb(240,92,26)" fg:x="565" fg:w="4"/><text x="64.0198%" y="703.50"></text></g><g><title>_mm_set1_ps (2 samples, 0.23%)</title><rect x="63.9955%" y="677" width="0.2257%" height="15" fill="rgb(207,40,23)" fg:x="567" fg:w="2"/><text x="64.2455%" y="687.50"></text></g><g><title>granular_synthe (81 samples, 9.14%)</title><rect x="55.1919%" y="709" width="9.1422%" height="15" fill="rgb(223,111,35)" fg:x="489" fg:w="81"/><text x="55.4419%" y="719.50">granular_synt..</text></g><g><title>mp3dec_decode_frame (1 samples, 0.11%)</title><rect x="64.2212%" y="693" width="0.1129%" height="15" fill="rgb(229,147,28)" fg:x="569" fg:w="1"/><text x="64.4712%" y="703.50"></text></g><g><title>L3_decode (1 samples, 0.11%)</title><rect x="64.2212%" y="677" width="0.1129%" height="15" fill="rgb(211,29,28)" fg:x="569" fg:w="1"/><text x="64.4712%" y="687.50"></text></g><g><title>L3_huffman (1 samples, 0.11%)</title><rect x="64.2212%" y="661" width="0.1129%" height="15" fill="rgb(228,72,33)" fg:x="569" fg:w="1"/><text x="64.4712%" y="671.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="64.3341%" y="677" width="0.1129%" height="15" fill="rgb(205,214,31)" fg:x="570" fg:w="1"/><text x="64.5841%" y="687.50"></text></g><g><title>[libc.so.6] (3 samples, 0.34%)</title><rect x="64.4470%" y="677" width="0.3386%" height="15" fill="rgb(224,111,15)" fg:x="571" fg:w="3"/><text x="64.6970%" y="687.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="64.7856%" y="677" width="0.2257%" height="15" fill="rgb(253,21,26)" fg:x="574" fg:w="2"/><text x="65.0356%" y="687.50"></text></g><g><title>[libpulsecommon-15.99.so] (7 samples, 0.79%)</title><rect x="65.0113%" y="677" width="0.7901%" height="15" fill="rgb(245,139,43)" fg:x="576" fg:w="7"/><text x="65.2613%" y="687.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="65.8014%" y="677" width="0.1129%" height="15" fill="rgb(252,170,7)" fg:x="583" fg:w="1"/><text x="66.0514%" y="687.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="65.9142%" y="677" width="0.1129%" height="15" fill="rgb(231,118,14)" fg:x="584" fg:w="1"/><text x="66.1642%" y="687.50"></text></g><g><title>pa_mainloop_dispatch (5 samples, 0.56%)</title><rect x="66.0271%" y="677" width="0.5643%" height="15" fill="rgb(238,83,0)" fg:x="585" fg:w="5"/><text x="66.2771%" y="687.50"></text></g><g><title>pa_mainloop_prepare (1 samples, 0.11%)</title><rect x="66.5914%" y="677" width="0.1129%" height="15" fill="rgb(221,39,39)" fg:x="590" fg:w="1"/><text x="66.8414%" y="687.50"></text></g><g><title>pa_mutex_lock (3 samples, 0.34%)</title><rect x="66.7043%" y="677" width="0.3386%" height="15" fill="rgb(222,119,46)" fg:x="591" fg:w="3"/><text x="66.9543%" y="687.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.11%)</title><rect x="67.0429%" y="677" width="0.1129%" height="15" fill="rgb(222,165,49)" fg:x="594" fg:w="1"/><text x="67.2929%" y="687.50"></text></g><g><title>[[heap]] (26 samples, 2.93%)</title><rect x="64.3341%" y="693" width="2.9345%" height="15" fill="rgb(219,113,52)" fg:x="570" fg:w="26"/><text x="64.5841%" y="703.50">[[..</text></g><g><title>pa_rtclock_now (1 samples, 0.11%)</title><rect x="67.1558%" y="677" width="0.1129%" height="15" fill="rgb(214,7,15)" fg:x="595" fg:w="1"/><text x="67.4058%" y="687.50"></text></g><g><title>[libc.so.6] (2 samples, 0.23%)</title><rect x="67.2686%" y="677" width="0.2257%" height="15" fill="rgb(235,32,4)" fg:x="596" fg:w="2"/><text x="67.5186%" y="687.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.11%)</title><rect x="67.4944%" y="677" width="0.1129%" height="15" fill="rgb(238,90,54)" fg:x="598" fg:w="1"/><text x="67.7444%" y="687.50"></text></g><g><title>[[stack]] (4 samples, 0.45%)</title><rect x="67.2686%" y="693" width="0.4515%" height="15" fill="rgb(213,208,19)" fg:x="596" fg:w="4"/><text x="67.5186%" y="703.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="67.6072%" y="677" width="0.1129%" height="15" fill="rgb(233,156,4)" fg:x="599" fg:w="1"/><text x="67.8572%" y="687.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="67.7201%" y="693" width="0.1129%" height="15" fill="rgb(207,194,5)" fg:x="600" fg:w="1"/><text x="67.9701%" y="703.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="67.7201%" y="677" width="0.1129%" height="15" fill="rgb(206,111,30)" fg:x="600" fg:w="1"/><text x="67.9701%" y="687.50"></text></g><g><title>&lt;audio::granular_synthesizer::GranularSynthesizer as audio::granular_synthesizer_action::GranularSynthesizerAction&gt;::next_frame_into_buffer (1 samples, 0.11%)</title><rect x="67.8330%" y="677" width="0.1129%" height="15" fill="rgb(243,70,54)" fg:x="601" fg:w="1"/><text x="68.0830%" y="687.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data (1 samples, 0.11%)</title><rect x="67.8330%" y="661" width="0.1129%" height="15" fill="rgb(242,28,8)" fg:x="601" fg:w="1"/><text x="68.0830%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="67.8330%" y="645" width="0.1129%" height="15" fill="rgb(219,106,18)" fg:x="601" fg:w="1"/><text x="68.0830%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="67.8330%" y="629" width="0.1129%" height="15" fill="rgb(244,222,10)" fg:x="601" fg:w="1"/><text x="68.0830%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="67.8330%" y="613" width="0.1129%" height="15" fill="rgb(236,179,52)" fg:x="601" fg:w="1"/><text x="68.0830%" y="623.50"></text></g><g><title>audio::granular_synthesizer::GranularSynthesizer::frame_data::{{closure}} (1 samples, 0.11%)</title><rect x="67.8330%" y="597" width="0.1129%" height="15" fill="rgb(213,23,39)" fg:x="601" fg:w="1"/><text x="68.0830%" y="607.50"></text></g><g><title>&lt;&amp;f32 as core::ops::arith::Mul&lt;&amp;f32&gt;&gt;::mul (1 samples, 0.11%)</title><rect x="67.8330%" y="581" width="0.1129%" height="15" fill="rgb(238,48,10)" fg:x="601" fg:w="1"/><text x="68.0830%" y="591.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1 samples, 0.11%)</title><rect x="67.8330%" y="565" width="0.1129%" height="15" fill="rgb(251,196,23)" fg:x="601" fg:w="1"/><text x="68.0830%" y="575.50"></text></g><g><title>[libc.so.6] (26 samples, 2.93%)</title><rect x="67.9458%" y="677" width="2.9345%" height="15" fill="rgb(250,152,24)" fg:x="602" fg:w="26"/><text x="68.1958%" y="687.50">[l..</text></g><g><title>[libpulse.so.0.24.1] (5 samples, 0.56%)</title><rect x="70.8804%" y="677" width="0.5643%" height="15" fill="rgb(209,150,17)" fg:x="628" fg:w="5"/><text x="71.1304%" y="687.50"></text></g><g><title>[libpulsecommon-15.99.so] (8 samples, 0.90%)</title><rect x="71.4447%" y="677" width="0.9029%" height="15" fill="rgb(234,202,34)" fg:x="633" fg:w="8"/><text x="71.6947%" y="687.50"></text></g><g><title>__ctype_init (1 samples, 0.11%)</title><rect x="72.3476%" y="677" width="0.1129%" height="15" fill="rgb(253,148,53)" fg:x="641" fg:w="1"/><text x="72.5976%" y="687.50"></text></g><g><title>__errno_location (1 samples, 0.11%)</title><rect x="72.4605%" y="677" width="0.1129%" height="15" fill="rgb(218,129,16)" fg:x="642" fg:w="1"/><text x="72.7105%" y="687.50"></text></g><g><title>__poll (2 samples, 0.23%)</title><rect x="72.5734%" y="677" width="0.2257%" height="15" fill="rgb(216,85,19)" fg:x="643" fg:w="2"/><text x="72.8234%" y="687.50"></text></g><g><title>__send (1 samples, 0.11%)</title><rect x="72.7991%" y="677" width="0.1129%" height="15" fill="rgb(235,228,7)" fg:x="645" fg:w="1"/><text x="73.0491%" y="687.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="72.9120%" y="677" width="0.1129%" height="15" fill="rgb(245,175,0)" fg:x="646" fg:w="1"/><text x="73.1620%" y="687.50"></text></g><g><title>pa_context_ref (1 samples, 0.11%)</title><rect x="73.0248%" y="677" width="0.1129%" height="15" fill="rgb(208,168,36)" fg:x="647" fg:w="1"/><text x="73.2748%" y="687.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.11%)</title><rect x="73.1377%" y="677" width="0.1129%" height="15" fill="rgb(246,171,24)" fg:x="648" fg:w="1"/><text x="73.3877%" y="687.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="73.2506%" y="677" width="0.1129%" height="15" fill="rgb(215,142,24)" fg:x="649" fg:w="1"/><text x="73.5006%" y="687.50"></text></g><g><title>pa_memblock_release (1 samples, 0.11%)</title><rect x="73.3634%" y="677" width="0.1129%" height="15" fill="rgb(250,187,7)" fg:x="650" fg:w="1"/><text x="73.6134%" y="687.50"></text></g><g><title>pa_mutex_lock (3 samples, 0.34%)</title><rect x="73.4763%" y="677" width="0.3386%" height="15" fill="rgb(228,66,33)" fg:x="651" fg:w="3"/><text x="73.7263%" y="687.50"></text></g><g><title>pa_mutex_unlock (2 samples, 0.23%)</title><rect x="73.8149%" y="677" width="0.2257%" height="15" fill="rgb(234,215,21)" fg:x="654" fg:w="2"/><text x="74.0649%" y="687.50"></text></g><g><title>pa_packet_unref (1 samples, 0.11%)</title><rect x="74.0406%" y="677" width="0.1129%" height="15" fill="rgb(222,191,20)" fg:x="656" fg:w="1"/><text x="74.2906%" y="687.50"></text></g><g><title>pa_pdispatch_run (1 samples, 0.11%)</title><rect x="74.1535%" y="677" width="0.1129%" height="15" fill="rgb(245,79,54)" fg:x="657" fg:w="1"/><text x="74.4035%" y="687.50"></text></g><g><title>pa_pstream_ref (2 samples, 0.23%)</title><rect x="74.2664%" y="677" width="0.2257%" height="15" fill="rgb(240,10,37)" fg:x="658" fg:w="2"/><text x="74.5164%" y="687.50"></text></g><g><title>pa_pstream_unref (2 samples, 0.23%)</title><rect x="74.4921%" y="677" width="0.2257%" height="15" fill="rgb(214,192,32)" fg:x="660" fg:w="2"/><text x="74.7421%" y="687.50"></text></g><g><title>pa_read (1 samples, 0.11%)</title><rect x="74.7178%" y="677" width="0.1129%" height="15" fill="rgb(209,36,54)" fg:x="662" fg:w="1"/><text x="74.9678%" y="687.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.11%)</title><rect x="74.8307%" y="677" width="0.1129%" height="15" fill="rgb(220,10,11)" fg:x="663" fg:w="1"/><text x="75.0807%" y="687.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.11%)</title><rect x="74.9436%" y="677" width="0.1129%" height="15" fill="rgb(221,106,17)" fg:x="664" fg:w="1"/><text x="75.1936%" y="687.50"></text></g><g><title>pa_write (1 samples, 0.11%)</title><rect x="75.0564%" y="677" width="0.1129%" height="15" fill="rgb(251,142,44)" fg:x="665" fg:w="1"/><text x="75.3064%" y="687.50"></text></g><g><title>pthread_mutex_lock (5 samples, 0.56%)</title><rect x="75.1693%" y="677" width="0.5643%" height="15" fill="rgb(238,13,15)" fg:x="666" fg:w="5"/><text x="75.4193%" y="687.50"></text></g><g><title>read (2 samples, 0.23%)</title><rect x="75.7336%" y="677" width="0.2257%" height="15" fill="rgb(208,107,27)" fg:x="671" fg:w="2"/><text x="75.9836%" y="687.50"></text></g><g><title>[anon] (73 samples, 8.24%)</title><rect x="67.8330%" y="693" width="8.2393%" height="15" fill="rgb(205,136,37)" fg:x="601" fg:w="73"/><text x="68.0830%" y="703.50">[anon]</text></g><g><title>recvmsg (1 samples, 0.11%)</title><rect x="75.9594%" y="677" width="0.1129%" height="15" fill="rgb(250,205,27)" fg:x="673" fg:w="1"/><text x="76.2094%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="75.9594%" y="661" width="0.1129%" height="15" fill="rgb(210,80,43)" fg:x="673" fg:w="1"/><text x="76.2094%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="76.1851%" y="581" width="0.2257%" height="15" fill="rgb(247,160,36)" fg:x="675" fg:w="2"/><text x="76.4351%" y="591.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="76.7494%" y="565" width="0.1129%" height="15" fill="rgb(234,13,49)" fg:x="680" fg:w="1"/><text x="76.9994%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="76.8623%" y="549" width="0.1129%" height="15" fill="rgb(234,122,0)" fg:x="681" fg:w="1"/><text x="77.1123%" y="559.50"></text></g><g><title>pa_mainloop_prepare (1 samples, 0.11%)</title><rect x="77.0880%" y="533" width="0.1129%" height="15" fill="rgb(207,146,38)" fg:x="683" fg:w="1"/><text x="77.3380%" y="543.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="77.2009%" y="501" width="0.1129%" height="15" fill="rgb(207,177,25)" fg:x="684" fg:w="1"/><text x="77.4509%" y="511.50"></text></g><g><title>write (1 samples, 0.11%)</title><rect x="77.2009%" y="485" width="0.1129%" height="15" fill="rgb(211,178,42)" fg:x="684" fg:w="1"/><text x="77.4509%" y="495.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="77.2009%" y="469" width="0.1129%" height="15" fill="rgb(230,69,54)" fg:x="684" fg:w="1"/><text x="77.4509%" y="479.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="77.3138%" y="501" width="0.1129%" height="15" fill="rgb(214,135,41)" fg:x="685" fg:w="1"/><text x="77.5638%" y="511.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.11%)</title><rect x="77.4266%" y="501" width="0.1129%" height="15" fill="rgb(237,67,25)" fg:x="686" fg:w="1"/><text x="77.6766%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="77.4266%" y="485" width="0.1129%" height="15" fill="rgb(222,189,50)" fg:x="686" fg:w="1"/><text x="77.6766%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (4 samples, 0.45%)</title><rect x="77.2009%" y="517" width="0.4515%" height="15" fill="rgb(245,148,34)" fg:x="684" fg:w="4"/><text x="77.4509%" y="527.50"></text></g><g><title>pa_mainloop_prepare (1 samples, 0.11%)</title><rect x="77.5395%" y="501" width="0.1129%" height="15" fill="rgb(222,29,6)" fg:x="687" fg:w="1"/><text x="77.7895%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="77.5395%" y="485" width="0.1129%" height="15" fill="rgb(221,189,43)" fg:x="687" fg:w="1"/><text x="77.7895%" y="495.50"></text></g><g><title>pa_tagstruct_free (1 samples, 0.11%)</title><rect x="77.6524%" y="517" width="0.1129%" height="15" fill="rgb(207,36,27)" fg:x="688" fg:w="1"/><text x="77.9024%" y="527.50"></text></g><g><title>pa_flist_push (1 samples, 0.11%)</title><rect x="77.6524%" y="501" width="0.1129%" height="15" fill="rgb(217,90,24)" fg:x="688" fg:w="1"/><text x="77.9024%" y="511.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="77.6524%" y="485" width="0.1129%" height="15" fill="rgb(224,66,35)" fg:x="688" fg:w="1"/><text x="77.9024%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (8 samples, 0.90%)</title><rect x="76.9752%" y="549" width="0.9029%" height="15" fill="rgb(221,13,50)" fg:x="682" fg:w="8"/><text x="77.2252%" y="559.50"></text></g><g><title>pa_pdispatch_run (6 samples, 0.68%)</title><rect x="77.2009%" y="533" width="0.6772%" height="15" fill="rgb(236,68,49)" fg:x="684" fg:w="6"/><text x="77.4509%" y="543.50"></text></g><g><title>pa_tagstruct_new_fixed (1 samples, 0.11%)</title><rect x="77.7652%" y="517" width="0.1129%" height="15" fill="rgb(229,146,28)" fg:x="689" fg:w="1"/><text x="78.0152%" y="527.50"></text></g><g><title>pa_flist_pop (1 samples, 0.11%)</title><rect x="77.7652%" y="501" width="0.1129%" height="15" fill="rgb(225,31,38)" fg:x="689" fg:w="1"/><text x="78.0152%" y="511.50"></text></g><g><title>read (1 samples, 0.11%)</title><rect x="77.7652%" y="485" width="0.1129%" height="15" fill="rgb(250,208,3)" fg:x="689" fg:w="1"/><text x="78.0152%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="78.2167%" y="533" width="0.2257%" height="15" fill="rgb(246,54,23)" fg:x="693" fg:w="2"/><text x="78.4667%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="78.4424%" y="533" width="0.1129%" height="15" fill="rgb(243,76,11)" fg:x="695" fg:w="1"/><text x="78.6924%" y="543.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="78.5553%" y="533" width="0.1129%" height="15" fill="rgb(245,21,50)" fg:x="696" fg:w="1"/><text x="78.8053%" y="543.50"></text></g><g><title>pa_flist_push (1 samples, 0.11%)</title><rect x="78.6682%" y="533" width="0.1129%" height="15" fill="rgb(228,9,43)" fg:x="697" fg:w="1"/><text x="78.9182%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="78.6682%" y="517" width="0.1129%" height="15" fill="rgb(208,100,47)" fg:x="697" fg:w="1"/><text x="78.9182%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (9 samples, 1.02%)</title><rect x="77.8781%" y="549" width="1.0158%" height="15" fill="rgb(232,26,8)" fg:x="690" fg:w="9"/><text x="78.1281%" y="559.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.11%)</title><rect x="78.7810%" y="533" width="0.1129%" height="15" fill="rgb(216,166,38)" fg:x="698" fg:w="1"/><text x="79.0310%" y="543.50"></text></g><g><title>pa_idxset_trivial_hash_func (1 samples, 0.11%)</title><rect x="78.8939%" y="549" width="0.1129%" height="15" fill="rgb(251,202,51)" fg:x="699" fg:w="1"/><text x="79.1439%" y="559.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (2 samples, 0.23%)</title><rect x="79.0068%" y="549" width="0.2257%" height="15" fill="rgb(254,216,34)" fg:x="700" fg:w="2"/><text x="79.2568%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.23%)</title><rect x="79.0068%" y="533" width="0.2257%" height="15" fill="rgb(251,32,27)" fg:x="700" fg:w="2"/><text x="79.2568%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="79.0068%" y="517" width="0.2257%" height="15" fill="rgb(208,127,28)" fg:x="700" fg:w="2"/><text x="79.2568%" y="527.50"></text></g><g><title>pa_xmalloc0 (2 samples, 0.23%)</title><rect x="79.0068%" y="501" width="0.2257%" height="15" fill="rgb(224,137,22)" fg:x="700" fg:w="2"/><text x="79.2568%" y="511.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="79.0068%" y="485" width="0.2257%" height="15" fill="rgb(254,70,32)" fg:x="700" fg:w="2"/><text x="79.2568%" y="495.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="79.2325%" y="517" width="0.1129%" height="15" fill="rgb(229,75,37)" fg:x="702" fg:w="1"/><text x="79.4825%" y="527.50"></text></g><g><title>__send (1 samples, 0.11%)</title><rect x="79.3454%" y="517" width="0.1129%" height="15" fill="rgb(252,64,23)" fg:x="703" fg:w="1"/><text x="79.5954%" y="527.50"></text></g><g><title>pa_iochannel_write (3 samples, 0.34%)</title><rect x="79.2325%" y="549" width="0.3386%" height="15" fill="rgb(232,162,48)" fg:x="702" fg:w="3"/><text x="79.4825%" y="559.50"></text></g><g><title>pa_write (3 samples, 0.34%)</title><rect x="79.2325%" y="533" width="0.3386%" height="15" fill="rgb(246,160,12)" fg:x="702" fg:w="3"/><text x="79.4825%" y="543.50"></text></g><g><title>pa_mainloop_wakeup (1 samples, 0.11%)</title><rect x="79.4582%" y="517" width="0.1129%" height="15" fill="rgb(247,166,0)" fg:x="704" fg:w="1"/><text x="79.7082%" y="527.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.11%)</title><rect x="79.5711%" y="517" width="0.1129%" height="15" fill="rgb(249,219,21)" fg:x="705" fg:w="1"/><text x="79.8211%" y="527.50"></text></g><g><title>pa_iochannel_is_readable (1 samples, 0.11%)</title><rect x="79.6840%" y="517" width="0.1129%" height="15" fill="rgb(205,209,3)" fg:x="706" fg:w="1"/><text x="79.9340%" y="527.50"></text></g><g><title>pa_mainloop_wakeup (3 samples, 0.34%)</title><rect x="79.5711%" y="549" width="0.3386%" height="15" fill="rgb(243,44,1)" fg:x="705" fg:w="3"/><text x="79.8211%" y="559.50"></text></g><g><title>pa_write (3 samples, 0.34%)</title><rect x="79.5711%" y="533" width="0.3386%" height="15" fill="rgb(206,159,16)" fg:x="705" fg:w="3"/><text x="79.8211%" y="543.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.11%)</title><rect x="79.7968%" y="517" width="0.1129%" height="15" fill="rgb(244,77,30)" fg:x="707" fg:w="1"/><text x="80.0468%" y="527.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.11%)</title><rect x="79.9097%" y="533" width="0.1129%" height="15" fill="rgb(218,69,12)" fg:x="708" fg:w="1"/><text x="80.1597%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (29 samples, 3.27%)</title><rect x="76.8623%" y="565" width="3.2731%" height="15" fill="rgb(212,87,7)" fg:x="681" fg:w="29"/><text x="77.1123%" y="575.50">[li..</text></g><g><title>pa_queue_pop (2 samples, 0.23%)</title><rect x="79.9097%" y="549" width="0.2257%" height="15" fill="rgb(245,114,25)" fg:x="708" fg:w="2"/><text x="80.1597%" y="559.50"></text></g><g><title>pa_flist_push (1 samples, 0.11%)</title><rect x="80.0226%" y="533" width="0.1129%" height="15" fill="rgb(210,61,42)" fg:x="709" fg:w="1"/><text x="80.2726%" y="543.50"></text></g><g><title>pa_detect_fork (1 samples, 0.11%)</title><rect x="80.0226%" y="517" width="0.1129%" height="15" fill="rgb(211,52,33)" fg:x="709" fg:w="1"/><text x="80.2726%" y="527.50"></text></g><g><title>cfree (1 samples, 0.11%)</title><rect x="80.1354%" y="565" width="0.1129%" height="15" fill="rgb(234,58,33)" fg:x="710" fg:w="1"/><text x="80.3854%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="80.2483%" y="565" width="0.1129%" height="15" fill="rgb(220,115,36)" fg:x="711" fg:w="1"/><text x="80.4983%" y="575.50"></text></g><g><title>pa_context_get_state (1 samples, 0.11%)</title><rect x="80.3612%" y="565" width="0.1129%" height="15" fill="rgb(243,153,54)" fg:x="712" fg:w="1"/><text x="80.6112%" y="575.50"></text></g><g><title>[libpulsecommon-15.99.so] (37 samples, 4.18%)</title><rect x="76.4108%" y="581" width="4.1761%" height="15" fill="rgb(251,47,18)" fg:x="677" fg:w="37"/><text x="76.6608%" y="591.50">[libp..</text></g><g><title>pa_rtclock_get (1 samples, 0.11%)</title><rect x="80.4740%" y="565" width="0.1129%" height="15" fill="rgb(242,102,42)" fg:x="713" fg:w="1"/><text x="80.7240%" y="575.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.11%)</title><rect x="80.5869%" y="581" width="0.1129%" height="15" fill="rgb(234,31,38)" fg:x="714" fg:w="1"/><text x="80.8369%" y="591.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.11%)</title><rect x="80.6998%" y="549" width="0.1129%" height="15" fill="rgb(221,117,51)" fg:x="715" fg:w="1"/><text x="80.9498%" y="559.50"></text></g><g><title>pa_rtclock_now (2 samples, 0.23%)</title><rect x="80.6998%" y="581" width="0.2257%" height="15" fill="rgb(212,20,18)" fg:x="715" fg:w="2"/><text x="80.9498%" y="591.50"></text></g><g><title>pa_rtclock_get (2 samples, 0.23%)</title><rect x="80.6998%" y="565" width="0.2257%" height="15" fill="rgb(245,133,36)" fg:x="715" fg:w="2"/><text x="80.9498%" y="575.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="80.8126%" y="549" width="0.1129%" height="15" fill="rgb(212,6,19)" fg:x="716" fg:w="1"/><text x="81.0626%" y="559.50"></text></g><g><title>pa_once_begin (1 samples, 0.11%)</title><rect x="80.8126%" y="533" width="0.1129%" height="15" fill="rgb(218,1,36)" fg:x="716" fg:w="1"/><text x="81.0626%" y="543.50"></text></g><g><title>pa_mainloop_dispatch (44 samples, 4.97%)</title><rect x="76.0722%" y="597" width="4.9661%" height="15" fill="rgb(246,84,54)" fg:x="674" fg:w="44"/><text x="76.3222%" y="607.50">pa_mai..</text></g><g><title>read (1 samples, 0.11%)</title><rect x="80.9255%" y="581" width="0.1129%" height="15" fill="rgb(242,110,6)" fg:x="717" fg:w="1"/><text x="81.1755%" y="591.50"></text></g><g><title>[libc.so.6] (2 samples, 0.23%)</title><rect x="81.0384%" y="581" width="0.2257%" height="15" fill="rgb(214,47,5)" fg:x="718" fg:w="2"/><text x="81.2884%" y="591.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="81.1512%" y="565" width="0.1129%" height="15" fill="rgb(218,159,25)" fg:x="719" fg:w="1"/><text x="81.4012%" y="575.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="81.2641%" y="565" width="0.1129%" height="15" fill="rgb(215,211,28)" fg:x="720" fg:w="1"/><text x="81.5141%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (8 samples, 0.90%)</title><rect x="81.3770%" y="565" width="0.9029%" height="15" fill="rgb(238,59,32)" fg:x="721" fg:w="8"/><text x="81.6270%" y="575.50"></text></g><g><title>[libpulsecommon-15.99.so] (9 samples, 1.02%)</title><rect x="82.2799%" y="565" width="1.0158%" height="15" fill="rgb(226,82,3)" fg:x="729" fg:w="9"/><text x="82.5299%" y="575.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.11%)</title><rect x="83.5214%" y="549" width="0.1129%" height="15" fill="rgb(240,164,32)" fg:x="740" fg:w="1"/><text x="83.7714%" y="559.50"></text></g><g><title>pa_tagstruct_eof (1 samples, 0.11%)</title><rect x="83.6343%" y="549" width="0.1129%" height="15" fill="rgb(232,46,7)" fg:x="741" fg:w="1"/><text x="83.8843%" y="559.50"></text></g><g><title>__poll (5 samples, 0.56%)</title><rect x="83.2957%" y="565" width="0.5643%" height="15" fill="rgb(229,129,53)" fg:x="738" fg:w="5"/><text x="83.5457%" y="575.50"></text></g><g><title>pa_tagstruct_new_fixed (1 samples, 0.11%)</title><rect x="83.7472%" y="549" width="0.1129%" height="15" fill="rgb(234,188,29)" fg:x="742" fg:w="1"/><text x="83.9972%" y="559.50"></text></g><g><title>__poll_chk (1 samples, 0.11%)</title><rect x="83.8600%" y="565" width="0.1129%" height="15" fill="rgb(246,141,4)" fg:x="743" fg:w="1"/><text x="84.1100%" y="575.50"></text></g><g><title>[libc.so.6] (6 samples, 0.68%)</title><rect x="84.8758%" y="549" width="0.6772%" height="15" fill="rgb(229,23,39)" fg:x="752" fg:w="6"/><text x="85.1258%" y="559.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.11%)</title><rect x="85.5530%" y="549" width="0.1129%" height="15" fill="rgb(206,12,3)" fg:x="758" fg:w="1"/><text x="85.8030%" y="559.50"></text></g><g><title>pa_mutex_lock (17 samples, 1.92%)</title><rect x="83.9729%" y="565" width="1.9187%" height="15" fill="rgb(252,226,20)" fg:x="744" fg:w="17"/><text x="84.2229%" y="575.50">p..</text></g><g><title>pthread_mutex_lock (2 samples, 0.23%)</title><rect x="85.6659%" y="549" width="0.2257%" height="15" fill="rgb(216,123,35)" fg:x="759" fg:w="2"/><text x="85.9159%" y="559.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.11%)</title><rect x="85.8916%" y="565" width="0.1129%" height="15" fill="rgb(212,68,40)" fg:x="761" fg:w="1"/><text x="86.1416%" y="575.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="85.8916%" y="549" width="0.1129%" height="15" fill="rgb(254,125,32)" fg:x="761" fg:w="1"/><text x="86.1416%" y="559.50"></text></g><g><title>pa_pdispatch_unref (1 samples, 0.11%)</title><rect x="86.0045%" y="565" width="0.1129%" height="15" fill="rgb(253,97,22)" fg:x="762" fg:w="1"/><text x="86.2545%" y="575.50"></text></g><g><title>pa_write (1 samples, 0.11%)</title><rect x="86.1174%" y="565" width="0.1129%" height="15" fill="rgb(241,101,14)" fg:x="763" fg:w="1"/><text x="86.3674%" y="575.50"></text></g><g><title>pa_mainloop_poll (58 samples, 6.55%)</title><rect x="81.0384%" y="597" width="6.5463%" height="15" fill="rgb(238,103,29)" fg:x="718" fg:w="58"/><text x="81.2884%" y="607.50">pa_mainlo..</text></g><g><title>[libpulse.so.0.24.1] (56 samples, 6.32%)</title><rect x="81.2641%" y="581" width="6.3205%" height="15" fill="rgb(233,195,47)" fg:x="720" fg:w="56"/><text x="81.5141%" y="591.50">[libpuls..</text></g><g><title>pthread_mutex_lock (12 samples, 1.35%)</title><rect x="86.2302%" y="565" width="1.3544%" height="15" fill="rgb(246,218,30)" fg:x="764" fg:w="12"/><text x="86.4802%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="87.6975%" y="581" width="0.1129%" height="15" fill="rgb(219,145,47)" fg:x="777" fg:w="1"/><text x="87.9475%" y="591.50"></text></g><g><title>pa_xfree (1 samples, 0.11%)</title><rect x="87.6975%" y="565" width="0.1129%" height="15" fill="rgb(243,12,26)" fg:x="777" fg:w="1"/><text x="87.9475%" y="575.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="87.6975%" y="549" width="0.1129%" height="15" fill="rgb(214,87,16)" fg:x="777" fg:w="1"/><text x="87.9475%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="87.8104%" y="581" width="0.1129%" height="15" fill="rgb(208,99,42)" fg:x="778" fg:w="1"/><text x="88.0604%" y="591.50"></text></g><g><title>pa_read (1 samples, 0.11%)</title><rect x="87.9233%" y="581" width="0.1129%" height="15" fill="rgb(253,99,2)" fg:x="779" fg:w="1"/><text x="88.1733%" y="591.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="87.9233%" y="565" width="0.1129%" height="15" fill="rgb(220,168,23)" fg:x="779" fg:w="1"/><text x="88.1733%" y="575.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="88.0361%" y="565" width="0.1129%" height="15" fill="rgb(242,38,24)" fg:x="780" fg:w="1"/><text x="88.2861%" y="575.50"></text></g><g><title>pa_mainloop_prepare (1 samples, 0.11%)</title><rect x="88.1490%" y="565" width="0.1129%" height="15" fill="rgb(225,182,9)" fg:x="781" fg:w="1"/><text x="88.3990%" y="575.50"></text></g><g><title>[[vdso]] (1 samples, 0.11%)</title><rect x="88.2619%" y="533" width="0.1129%" height="15" fill="rgb(243,178,37)" fg:x="782" fg:w="1"/><text x="88.5119%" y="543.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="88.2619%" y="517" width="0.1129%" height="15" fill="rgb(232,139,19)" fg:x="782" fg:w="1"/><text x="88.5119%" y="527.50"></text></g><g><title>clock_gettime (2 samples, 0.23%)</title><rect x="88.2619%" y="549" width="0.2257%" height="15" fill="rgb(225,201,24)" fg:x="782" fg:w="2"/><text x="88.5119%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="88.3747%" y="533" width="0.1129%" height="15" fill="rgb(221,47,46)" fg:x="783" fg:w="1"/><text x="88.6247%" y="543.50"></text></g><g><title>pa_pstream_ref (1 samples, 0.11%)</title><rect x="88.4876%" y="549" width="0.1129%" height="15" fill="rgb(249,23,13)" fg:x="784" fg:w="1"/><text x="88.7376%" y="559.50"></text></g><g><title>[libc.so.6] (112 samples, 12.64%)</title><rect x="76.0722%" y="677" width="12.6411%" height="15" fill="rgb(219,9,5)" fg:x="674" fg:w="112"/><text x="76.3222%" y="687.50">[libc.so.6]</text></g><g><title>[libpulsecommon-15.99.so] (112 samples, 12.64%)</title><rect x="76.0722%" y="661" width="12.6411%" height="15" fill="rgb(254,171,16)" fg:x="674" fg:w="112"/><text x="76.3222%" y="671.50">[libpulsecommon-15...</text></g><g><title>[libpulse.so.0.24.1] (112 samples, 12.64%)</title><rect x="76.0722%" y="645" width="12.6411%" height="15" fill="rgb(230,171,20)" fg:x="674" fg:w="112"/><text x="76.3222%" y="655.50">[libpulse.so.0.24.1]</text></g><g><title>pa_mainloop_run (112 samples, 12.64%)</title><rect x="76.0722%" y="629" width="12.6411%" height="15" fill="rgb(210,71,41)" fg:x="674" fg:w="112"/><text x="76.3222%" y="639.50">pa_mainloop_run</text></g><g><title>pa_mainloop_iterate (112 samples, 12.64%)</title><rect x="76.0722%" y="613" width="12.6411%" height="15" fill="rgb(206,173,20)" fg:x="674" fg:w="112"/><text x="76.3222%" y="623.50">pa_mainloop_iterate</text></g><g><title>pa_mainloop_prepare (10 samples, 1.13%)</title><rect x="87.5847%" y="597" width="1.1287%" height="15" fill="rgb(233,88,34)" fg:x="776" fg:w="10"/><text x="87.8347%" y="607.50"></text></g><g><title>pa_rtclock_now (6 samples, 0.68%)</title><rect x="88.0361%" y="581" width="0.6772%" height="15" fill="rgb(223,209,46)" fg:x="780" fg:w="6"/><text x="88.2861%" y="591.50"></text></g><g><title>pa_rtclock_get (4 samples, 0.45%)</title><rect x="88.2619%" y="565" width="0.4515%" height="15" fill="rgb(250,43,18)" fg:x="782" fg:w="4"/><text x="88.5119%" y="575.50"></text></g><g><title>pa_run_once (1 samples, 0.11%)</title><rect x="88.6005%" y="549" width="0.1129%" height="15" fill="rgb(208,13,10)" fg:x="785" fg:w="1"/><text x="88.8505%" y="559.50"></text></g><g><title>[libpulse.so.0.24.1] (1 samples, 0.11%)</title><rect x="88.7133%" y="677" width="0.1129%" height="15" fill="rgb(212,200,36)" fg:x="786" fg:w="1"/><text x="88.9633%" y="687.50"></text></g><g><title>[libpulsecommon-15.99.so] (1 samples, 0.11%)</title><rect x="88.8262%" y="677" width="0.1129%" height="15" fill="rgb(225,90,30)" fg:x="787" fg:w="1"/><text x="89.0762%" y="687.50"></text></g><g><title>__libc_calloc (1 samples, 0.11%)</title><rect x="88.9391%" y="677" width="0.1129%" height="15" fill="rgb(236,182,39)" fg:x="788" fg:w="1"/><text x="89.1891%" y="687.50"></text></g><g><title>__poll (1 samples, 0.11%)</title><rect x="89.0519%" y="677" width="0.1129%" height="15" fill="rgb(212,144,35)" fg:x="789" fg:w="1"/><text x="89.3019%" y="687.50"></text></g><g><title>pa_mainloop_dispatch (2 samples, 0.23%)</title><rect x="89.1648%" y="677" width="0.2257%" height="15" fill="rgb(228,63,44)" fg:x="790" fg:w="2"/><text x="89.4148%" y="687.50"></text></g><g><title>pa_mainloop_poll (1 samples, 0.11%)</title><rect x="89.3905%" y="677" width="0.1129%" height="15" fill="rgb(228,109,6)" fg:x="792" fg:w="1"/><text x="89.6405%" y="687.50"></text></g><g><title>[libc.so.6] (120 samples, 13.54%)</title><rect x="76.0722%" y="693" width="13.5440%" height="15" fill="rgb(238,117,24)" fg:x="674" fg:w="120"/><text x="76.3222%" y="703.50">[libc.so.6]</text></g><g><title>pa_read (1 samples, 0.11%)</title><rect x="89.5034%" y="677" width="0.1129%" height="15" fill="rgb(242,26,26)" fg:x="793" fg:w="1"/><text x="89.7534%" y="687.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.11%)</title><rect x="89.7291%" y="661" width="0.1129%" height="15" fill="rgb(221,92,48)" fg:x="795" fg:w="1"/><text x="89.9791%" y="671.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="89.8420%" y="661" width="0.1129%" height="15" fill="rgb(209,209,32)" fg:x="796" fg:w="1"/><text x="90.0920%" y="671.50"></text></g><g><title>[[vdso]] (4 samples, 0.45%)</title><rect x="89.6163%" y="677" width="0.4515%" height="15" fill="rgb(221,70,22)" fg:x="794" fg:w="4"/><text x="89.8663%" y="687.50"></text></g><g><title>recvmsg (1 samples, 0.11%)</title><rect x="89.9549%" y="661" width="0.1129%" height="15" fill="rgb(248,145,5)" fg:x="797" fg:w="1"/><text x="90.2049%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.23%)</title><rect x="92.7765%" y="661" width="0.2257%" height="15" fill="rgb(226,116,26)" fg:x="822" fg:w="2"/><text x="93.0265%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.11%)</title><rect x="93.0023%" y="661" width="0.1129%" height="15" fill="rgb(244,5,17)" fg:x="824" fg:w="1"/><text x="93.2523%" y="671.50"></text></g><g><title>[libc.so.6] (28 samples, 3.16%)</title><rect x="90.0677%" y="677" width="3.1603%" height="15" fill="rgb(252,159,33)" fg:x="798" fg:w="28"/><text x="90.3177%" y="687.50">[li..</text></g><g><title>pa_memblock_acquire (1 samples, 0.11%)</title><rect x="93.1151%" y="661" width="0.1129%" height="15" fill="rgb(206,71,0)" fg:x="825" fg:w="1"/><text x="93.3651%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (9 samples, 1.02%)</title><rect x="93.2280%" y="677" width="1.0158%" height="15" fill="rgb(233,118,54)" fg:x="826" fg:w="9"/><text x="93.4780%" y="687.50"></text></g><g><title>[libpulsecommon-15.99.so] (7 samples, 0.79%)</title><rect x="94.2438%" y="677" width="0.7901%" height="15" fill="rgb(234,83,48)" fg:x="835" fg:w="7"/><text x="94.4938%" y="687.50"></text></g><g><title>__poll_chk (1 samples, 0.11%)</title><rect x="95.0339%" y="677" width="0.1129%" height="15" fill="rgb(228,3,54)" fg:x="842" fg:w="1"/><text x="95.2839%" y="687.50"></text></g><g><title>pa_context_get_state (1 samples, 0.11%)</title><rect x="95.1467%" y="677" width="0.1129%" height="15" fill="rgb(226,155,13)" fg:x="843" fg:w="1"/><text x="95.3967%" y="687.50"></text></g><g><title>pa_context_ref (1 samples, 0.11%)</title><rect x="95.2596%" y="677" width="0.1129%" height="15" fill="rgb(241,28,37)" fg:x="844" fg:w="1"/><text x="95.5096%" y="687.50"></text></g><g><title>pa_idxset_trivial_hash_func (1 samples, 0.11%)</title><rect x="95.3725%" y="677" width="0.1129%" height="15" fill="rgb(233,93,10)" fg:x="845" fg:w="1"/><text x="95.6225%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="95.3725%" y="661" width="0.1129%" height="15" fill="rgb(225,113,19)" fg:x="845" fg:w="1"/><text x="95.6225%" y="671.50"></text></g><g><title>pa_iochannel_read_with_ancil_data (1 samples, 0.11%)</title><rect x="95.4853%" y="677" width="0.1129%" height="15" fill="rgb(241,2,18)" fg:x="846" fg:w="1"/><text x="95.7353%" y="687.50"></text></g><g><title>pa_iochannel_write (1 samples, 0.11%)</title><rect x="95.5982%" y="677" width="0.1129%" height="15" fill="rgb(228,207,21)" fg:x="847" fg:w="1"/><text x="95.8482%" y="687.50"></text></g><g><title>pa_mainloop_dispatch (3 samples, 0.34%)</title><rect x="95.7111%" y="677" width="0.3386%" height="15" fill="rgb(213,211,35)" fg:x="848" fg:w="3"/><text x="95.9611%" y="687.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.11%)</title><rect x="96.0497%" y="677" width="0.1129%" height="15" fill="rgb(209,83,10)" fg:x="851" fg:w="1"/><text x="96.2997%" y="687.50"></text></g><g><title>pa_mainloop_poll (3 samples, 0.34%)</title><rect x="96.1625%" y="677" width="0.3386%" height="15" fill="rgb(209,164,1)" fg:x="852" fg:w="3"/><text x="96.4125%" y="687.50"></text></g><g><title>pa_memblock_ref (1 samples, 0.11%)</title><rect x="96.5011%" y="677" width="0.1129%" height="15" fill="rgb(213,184,43)" fg:x="855" fg:w="1"/><text x="96.7511%" y="687.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.11%)</title><rect x="96.6140%" y="677" width="0.1129%" height="15" fill="rgb(231,61,34)" fg:x="856" fg:w="1"/><text x="96.8640%" y="687.50"></text></g><g><title>pa_packet_new (1 samples, 0.11%)</title><rect x="96.7269%" y="677" width="0.1129%" height="15" fill="rgb(235,75,3)" fg:x="857" fg:w="1"/><text x="96.9769%" y="687.50"></text></g><g><title>pa_pdispatch_run (1 samples, 0.11%)</title><rect x="96.8397%" y="677" width="0.1129%" height="15" fill="rgb(220,106,47)" fg:x="858" fg:w="1"/><text x="97.0897%" y="687.50"></text></g><g><title>pa_queue_pop (1 samples, 0.11%)</title><rect x="96.9526%" y="677" width="0.1129%" height="15" fill="rgb(210,196,33)" fg:x="859" fg:w="1"/><text x="97.2026%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="96.9526%" y="661" width="0.1129%" height="15" fill="rgb(229,154,42)" fg:x="859" fg:w="1"/><text x="97.2026%" y="671.50"></text></g><g><title>pa_tagstruct_new_fixed (1 samples, 0.11%)</title><rect x="97.0655%" y="677" width="0.1129%" height="15" fill="rgb(228,114,26)" fg:x="860" fg:w="1"/><text x="97.3155%" y="687.50"></text></g><g><title>pa_tagstruct_putu32 (1 samples, 0.11%)</title><rect x="97.1783%" y="677" width="0.1129%" height="15" fill="rgb(208,144,1)" fg:x="861" fg:w="1"/><text x="97.4283%" y="687.50"></text></g><g><title>[unknown] (69 samples, 7.79%)</title><rect x="89.6163%" y="693" width="7.7878%" height="15" fill="rgb(239,112,37)" fg:x="794" fg:w="69"/><text x="89.8663%" y="703.50">[unknown]</text></g><g><title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="97.2912%" y="677" width="0.1129%" height="15" fill="rgb(210,96,50)" fg:x="862" fg:w="1"/><text x="97.5412%" y="687.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.11%)</title><rect x="97.4041%" y="693" width="0.1129%" height="15" fill="rgb(222,178,2)" fg:x="863" fg:w="1"/><text x="97.6541%" y="703.50"></text></g><g><title>threaded-ml (295 samples, 33.30%)</title><rect x="64.3341%" y="709" width="33.2957%" height="15" fill="rgb(226,74,18)" fg:x="570" fg:w="295"/><text x="64.5841%" y="719.50">threaded-ml</text></g><g><title>pa_read (1 samples, 0.11%)</title><rect x="97.5169%" y="693" width="0.1129%" height="15" fill="rgb(225,67,54)" fg:x="864" fg:w="1"/><text x="97.7669%" y="703.50"></text></g><g><title>[anon] (1 samples, 0.11%)</title><rect x="97.6298%" y="693" width="0.1129%" height="15" fill="rgb(251,92,32)" fg:x="865" fg:w="1"/><text x="97.8798%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.11%)</title><rect x="97.6298%" y="677" width="0.1129%" height="15" fill="rgb(228,149,22)" fg:x="865" fg:w="1"/><text x="97.8798%" y="687.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.11%)</title><rect x="98.1941%" y="341" width="0.1129%" height="15" fill="rgb(243,54,13)" fg:x="870" fg:w="1"/><text x="98.4441%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.11%)</title><rect x="98.1941%" y="325" width="0.1129%" height="15" fill="rgb(243,180,28)" fg:x="870" fg:w="1"/><text x="98.4441%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="98.1941%" y="309" width="0.1129%" height="15" fill="rgb(208,167,24)" fg:x="870" fg:w="1"/><text x="98.4441%" y="319.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (2 samples, 0.23%)</title><rect x="98.3070%" y="325" width="0.2257%" height="15" fill="rgb(245,73,45)" fg:x="871" fg:w="2"/><text x="98.5570%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.11%)</title><rect x="98.4199%" y="309" width="0.1129%" height="15" fill="rgb(237,203,48)" fg:x="872" fg:w="1"/><text x="98.6699%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="98.4199%" y="293" width="0.1129%" height="15" fill="rgb(211,197,16)" fg:x="872" fg:w="1"/><text x="98.6699%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.56%)</title><rect x="98.1941%" y="357" width="0.5643%" height="15" fill="rgb(243,99,51)" fg:x="870" fg:w="5"/><text x="98.4441%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (4 samples, 0.45%)</title><rect x="98.3070%" y="341" width="0.4515%" height="15" fill="rgb(215,123,29)" fg:x="871" fg:w="4"/><text x="98.5570%" y="351.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (2 samples, 0.23%)</title><rect x="98.5327%" y="325" width="0.2257%" height="15" fill="rgb(239,186,37)" fg:x="873" fg:w="2"/><text x="98.7827%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.23%)</title><rect x="98.5327%" y="309" width="0.2257%" height="15" fill="rgb(252,136,39)" fg:x="873" fg:w="2"/><text x="98.7827%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.23%)</title><rect x="98.5327%" y="293" width="0.2257%" height="15" fill="rgb(223,213,32)" fg:x="873" fg:w="2"/><text x="98.7827%" y="303.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 0.79%)</title><rect x="98.0813%" y="389" width="0.7901%" height="15" fill="rgb(233,115,5)" fg:x="869" fg:w="7"/><text x="98.3313%" y="399.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.79%)</title><rect x="98.0813%" y="373" width="0.7901%" height="15" fill="rgb(207,226,44)" fg:x="869" fg:w="7"/><text x="98.3313%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.11%)</title><rect x="98.7585%" y="357" width="0.1129%" height="15" fill="rgb(208,126,0)" fg:x="875" fg:w="1"/><text x="99.0085%" y="367.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (1 samples, 0.11%)</title><rect x="98.7585%" y="341" width="0.1129%" height="15" fill="rgb(244,66,21)" fg:x="875" fg:w="1"/><text x="99.0085%" y="351.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (1 samples, 0.11%)</title><rect x="98.7585%" y="325" width="0.1129%" height="15" fill="rgb(222,97,12)" fg:x="875" fg:w="1"/><text x="99.0085%" y="335.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.11%)</title><rect x="98.7585%" y="309" width="0.1129%" height="15" fill="rgb(219,213,19)" fg:x="875" fg:w="1"/><text x="99.0085%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.11%)</title><rect x="98.7585%" y="293" width="0.1129%" height="15" fill="rgb(252,169,30)" fg:x="875" fg:w="1"/><text x="99.0085%" y="303.50"></text></g><g><title>[libc.so.6] (13 samples, 1.47%)</title><rect x="97.7427%" y="693" width="1.4673%" height="15" fill="rgb(206,32,51)" fg:x="866" fg:w="13"/><text x="97.9927%" y="703.50"></text></g><g><title>[libc.so.6] (13 samples, 1.47%)</title><rect x="97.7427%" y="677" width="1.4673%" height="15" fill="rgb(250,172,42)" fg:x="866" fg:w="13"/><text x="97.9927%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 1.47%)</title><rect x="97.7427%" y="661" width="1.4673%" height="15" fill="rgb(209,34,43)" fg:x="866" fg:w="13"/><text x="97.9927%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 1.47%)</title><rect x="97.7427%" y="645" width="1.4673%" height="15" fill="rgb(223,11,35)" fg:x="866" fg:w="13"/><text x="97.9927%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 1.47%)</title><rect x="97.7427%" y="629" width="1.4673%" height="15" fill="rgb(251,219,26)" fg:x="866" fg:w="13"/><text x="97.9927%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 1.47%)</title><rect x="97.7427%" y="613" width="1.4673%" height="15" fill="rgb(231,119,3)" fg:x="866" fg:w="13"/><text x="97.9927%" y="623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (13 samples, 1.47%)</title><rect x="97.7427%" y="597" width="1.4673%" height="15" fill="rgb(216,97,11)" fg:x="866" fg:w="13"/><text x="97.9927%" y="607.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 1.47%)</title><rect x="97.7427%" y="581" width="1.4673%" height="15" fill="rgb(223,59,9)" fg:x="866" fg:w="13"/><text x="97.9927%" y="591.50"></text></g><g><title>std::panicking::try (13 samples, 1.47%)</title><rect x="97.7427%" y="565" width="1.4673%" height="15" fill="rgb(233,93,31)" fg:x="866" fg:w="13"/><text x="97.9927%" y="575.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 1.47%)</title><rect x="97.7427%" y="549" width="1.4673%" height="15" fill="rgb(239,81,33)" fg:x="866" fg:w="13"/><text x="97.9927%" y="559.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 1.47%)</title><rect x="97.7427%" y="533" width="1.4673%" height="15" fill="rgb(213,120,34)" fg:x="866" fg:w="13"/><text x="97.9927%" y="543.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (13 samples, 1.47%)</title><rect x="97.7427%" y="517" width="1.4673%" height="15" fill="rgb(243,49,53)" fg:x="866" fg:w="13"/><text x="97.9927%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 1.47%)</title><rect x="97.7427%" y="501" width="1.4673%" height="15" fill="rgb(247,216,33)" fg:x="866" fg:w="13"/><text x="97.9927%" y="511.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (13 samples, 1.47%)</title><rect x="97.7427%" y="485" width="1.4673%" height="15" fill="rgb(226,26,14)" fg:x="866" fg:w="13"/><text x="97.9927%" y="495.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (13 samples, 1.47%)</title><rect x="97.7427%" y="469" width="1.4673%" height="15" fill="rgb(215,49,53)" fg:x="866" fg:w="13"/><text x="97.9927%" y="479.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (13 samples, 1.47%)</title><rect x="97.7427%" y="453" width="1.4673%" height="15" fill="rgb(245,162,40)" fg:x="866" fg:w="13"/><text x="97.9927%" y="463.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (13 samples, 1.47%)</title><rect x="97.7427%" y="437" width="1.4673%" height="15" fill="rgb(229,68,17)" fg:x="866" fg:w="13"/><text x="97.9927%" y="447.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (13 samples, 1.47%)</title><rect x="97.7427%" y="421" width="1.4673%" height="15" fill="rgb(213,182,10)" fg:x="866" fg:w="13"/><text x="97.9927%" y="431.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (13 samples, 1.47%)</title><rect x="97.7427%" y="405" width="1.4673%" height="15" fill="rgb(245,125,30)" fg:x="866" fg:w="13"/><text x="97.9927%" y="415.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (3 samples, 0.34%)</title><rect x="98.8713%" y="389" width="0.3386%" height="15" fill="rgb(232,202,2)" fg:x="876" fg:w="3"/><text x="99.1213%" y="399.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.23%)</title><rect x="98.9842%" y="373" width="0.2257%" height="15" fill="rgb(237,140,51)" fg:x="877" fg:w="2"/><text x="99.2342%" y="383.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.23%)</title><rect x="98.9842%" y="357" width="0.2257%" height="15" fill="rgb(236,157,25)" fg:x="877" fg:w="2"/><text x="99.2342%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.23%)</title><rect x="98.9842%" y="341" width="0.2257%" height="15" fill="rgb(219,209,0)" fg:x="877" fg:w="2"/><text x="99.2342%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.34%)</title><rect x="99.2099%" y="677" width="0.3386%" height="15" fill="rgb(240,116,54)" fg:x="879" fg:w="3"/><text x="99.4599%" y="687.50"></text></g><g><title>__ctype_init (1 samples, 0.11%)</title><rect x="99.5485%" y="677" width="0.1129%" height="15" fill="rgb(216,10,36)" fg:x="882" fg:w="1"/><text x="99.7985%" y="687.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.11%)</title><rect x="99.6614%" y="677" width="0.1129%" height="15" fill="rgb(222,72,44)" fg:x="883" fg:w="1"/><text x="99.9114%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.11%)</title><rect x="99.6614%" y="661" width="0.1129%" height="15" fill="rgb(232,159,9)" fg:x="883" fg:w="1"/><text x="99.9114%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.11%)</title><rect x="99.6614%" y="645" width="0.1129%" height="15" fill="rgb(210,39,32)" fg:x="883" fg:w="1"/><text x="99.9114%" y="655.50"></text></g><g><title>posix_memalign (1 samples, 0.11%)</title><rect x="99.7743%" y="677" width="0.1129%" height="15" fill="rgb(216,194,45)" fg:x="884" fg:w="1"/><text x="100.0243%" y="687.50"></text></g><g><title>all (886 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(218,18,35)" fg:x="0" fg:w="886"/><text x="0.2500%" y="735.50"></text></g><g><title>tokio-runtime-w (21 samples, 2.37%)</title><rect x="97.6298%" y="709" width="2.3702%" height="15" fill="rgb(207,83,51)" fg:x="865" fg:w="21"/><text x="97.8798%" y="719.50">to..</text></g><g><title>[unknown] (7 samples, 0.79%)</title><rect x="99.2099%" y="693" width="0.7901%" height="15" fill="rgb(225,63,43)" fg:x="879" fg:w="7"/><text x="99.4599%" y="703.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1 samples, 0.11%)</title><rect x="99.8871%" y="677" width="0.1129%" height="15" fill="rgb(207,57,36)" fg:x="885" fg:w="1"/><text x="100.1371%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.11%)</title><rect x="99.8871%" y="661" width="0.1129%" height="15" fill="rgb(216,99,33)" fg:x="885" fg:w="1"/><text x="100.1371%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.11%)</title><rect x="99.8871%" y="645" width="0.1129%" height="15" fill="rgb(225,42,16)" fg:x="885" fg:w="1"/><text x="100.1371%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.11%)</title><rect x="99.8871%" y="629" width="0.1129%" height="15" fill="rgb(220,201,45)" fg:x="885" fg:w="1"/><text x="100.1371%" y="639.50"></text></g></svg></svg>